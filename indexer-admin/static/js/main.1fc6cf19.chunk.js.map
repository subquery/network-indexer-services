{"version":3,"sources":["utils/ipfs.ts","utils/logger.ts","containers/unstated.tsx","containers/loadingContext.tsx","components/loading.tsx","utils/queries.ts","containers/coordinatorIndexer.tsx","hooks/web3Hook.ts","utils/web3.ts","containers/contractSdk.tsx","containers/modalContext.tsx","containers/notificationContext.tsx","containers/web3.tsx","components/Icon.tsx","components/primary.tsx","resources/arrow.svg","resources/metamask.svg","utils/metamask.ts","pages/metamask/config.ts","pages/metamask/prompts.ts","pages/metamask/styles.tsx","pages/metamask/metamaskView.tsx","utils/apolloClient.ts","pages/register/types.ts","pages/register/styles.tsx","pages/register/utils.ts","resources/cross.svg","components/formItem.tsx","components/modalView.tsx","components/avatar.tsx","components/accountCard.tsx","utils/indexerActions.ts","hooks/indexerHook.ts","pages/project-details/types.ts","hooks/network.ts","types/schemas.ts","pages/controllers/types.ts","utils/notification.ts","pages/account/config.ts","pages/project-details/prompts.ts","pages/project-details/config.ts","utils/transactions.ts","hooks/transactionHook.ts","pages/account/prompts.ts","pages/header/header.tsx","pages/account/styles.tsx","pages/account/account.tsx","utils/account.ts","components/introductionView.tsx","pages/controllers/prompts.ts","pages/controllers/config.ts","components/asyncRender.tsx","pages/controllers/styles.tsx","pages/controllers/controllerItem.tsx","pages/controllers/controllersPage.tsx","resources/discord.svg","resources/github.svg","resources/linkendin.svg","resources/matrix.svg","resources/medium.svg","resources/telegram.svg","resources/twitter.svg","pages/footer/config.ts","pages/footer/styles.tsx","pages/footer/footer.tsx","resources/subquery.svg","pages/header/styles.tsx","pages/network/components/networkTabBarView.tsx","pages/login/styles.tsx","pages/login/loginPage.tsx","components/tagItem.tsx","components/logView.tsx","pages/network/styles.tsx","pages/network/networkPage.tsx","components/alertView.tsx","hooks/projectHook.ts","utils/validateService.ts","hooks/routerHook.ts","utils/project.ts","pages/project-details/components/projectDetailHeader.tsx","hooks/paygHook.ts","pages/project-details/styles.tsx","pages/project-details/components/projectServiceCard.tsx","pages/projects/constant.ts","pages/project-details/components/projectStatusView.tsx","utils/table.tsx","pages/project-details/payg/paygConfig.tsx","pages/project-details/payg/styles.tsx","pages/project-details/payg/paygIntroduction.tsx","pages/project-details/payg/paygDatasource.tsx","pages/project-details/payg/paygPlans.tsx","pages/project-details/payg/projectPayg.tsx","pages/project-details/components/projectDetailsView.tsx","pages/project-details/components/projectTabBarView.tsx","pages/project-details/projectDetailsPage.tsx","pages/projects/styles.tsx","pages/projects/components/projecItemsHeader.tsx","components/statusLabel.tsx","pages/projects/components/projectItem.tsx","pages/projects/components/projectsEmptyView.tsx","pages/projects/projectsPage.tsx","hooks/registerHook.ts","pages/register/prompts.ts","pages/register/indexerRegistryView.tsx","pages/register/registerPage.tsx","App.tsx","reportWebVitals.ts","index.tsx","../node_modules/@subql/contract-sdk/publish sync /^/.//.*/.json$"],"names":["IPFS_METADATA_CLIENT","create","url","window","env","IPFS_GATEWAY","IPFS_PROJECT_CLIENT","cidToBytes32","cid","Buffer","from","utils","base58","decode","slice","toString","bytes32ToCid","bytes","hashHex","hashBytes","encode","concatU8A","a","b","res","Uint8Array","length","set","createIndexerMetadata","name","add","JSON","stringify","pin","result","toV0","cat","client","results","raw","console","error","parse","Logger","prefix","this","scope","message","rest","log","warn","EMPTY","Symbol","undefined","logger","createContainer","useHook","options","Ctx","createContext","displayName","Provider","props","initialState","children","l","useMemo","getLogger","value","useContainer","useContext","Error","useState","pageLoading","setPageLoading","useLoading","LoadingProvider","Container","styled","div","Loading","size","GET_COORDINATOR_INDEXER","gql","ADD_INDEXER","START_PROJECT","STOP_PROJECT","GET_CONTROLLERS","ADD_CONTROLLER","REMOVE_CONTROLLER","WITHDRAW_CONTROLLER","REMOVE_ACCOUNTS","ADD_PROJECT","REMOVE_PROJECT","GET_PROJECT","GET_PROJECTS","GET_LOG","GET_QUERY_METADATA","GET_INDEXER_PROJECTS","GET_PROJECT_DETAILS","GET_REGISTRY_VERSIONS","PAYG_PRICE","useLazyQuery","load","data","loading","useMutation","addIndexer","React","indexer","setIndexer","accountMetadata","updateIndexer","variables","useCoordinatorIndexer","CoordinatorIndexerProvider","useIsMetaMaskInstalled","ethereum","isMetaMask","ChainID","useWeb3","useWeb3React","useSigner","active","account","library","getSigner","useIsMetaMask","provider","ChainIDs","testnet","kepler","mainnet","NetworkToChainID","NETWORK_CONFIGS","networks","deployments","testnetDeployment","keplerDeployment","mainnetDeployment","createContractOptions","network","deploymentDetails","sdk","setSdk","chainId","useEffect","chaiId","intToHex","includes","sdkOption","ContractSDK","then","instance","catch","e","useContractSDK","ContractSDKProvider","modalData","setModalData","removeModal","visible","steps","showModal","onClose","useModal","ModalProvider","hex","Notifications","notification","setNotification","dispatchNotification","info","Store","addNotification","title","type","container","animationIn","animationOut","dismiss","removeNotification","id","useNotification","NotificationProvider","injectedConntector","InjectedConnector","supportedChainIds","injectNetwork","NETWORK","networkConnector","NetworkConnector","urls","defaultChainId","parseInt","getLibrary","providers","Web3Provider","connect","activate","isAuthorized","InitProvider","activateInitialConnector","useCallback","Image","img","Icon","src","href","alt","Separator","height","width","color","mr","Text","alignCenter","fw","ml","mt","mb","mw","Label","label","ff","StyledButton","SubButton","align","Spin","Spinner","Button","disabled","leftItem","ButtonContainer","FormContainer","Form","NetworkError","ethMethods","connectWithMetaMask","request","method","switchNetwork","params","code","extensionInstallUrls","Chrome","Firefox","Brave","Edge","prompts","install","desc","buttonTitle","invalidAccount","invalidNetwork","MetaMaskContainer","ContentContainer","MetaMaskView","isMetaMaskInstalled","isNetworkError","setNetworkError","errorMsg","setErrorMsg","onButtonClick","browserName","open","metaMaskItem","MetaMaskIcon","ArrowIcon","onClick","defaultCoordinatorUrl","location","protocol","hostname","COORDINATOR_SERVICE_PORT","coordinatorServiceUrl","__DEV__","COORDINATOR_SERVICE_URL","proxyServiceUrl","createApolloClient","uri","ApolloClient","cache","InMemoryCache","defaultOptions","watchQuery","fetchPolicy","RegisterStep","StepStatus","RegistrySteps","p","Steps","registerSteps","Object","entries","map","getStepIndex","step","findIndex","s","getStepStatus","currentIndex","index","process","finish","wait","FormField","Field","Option","option","FieldItem","initialValue","placeholder","fieldKey","setFieldValue","errors","setValue","htmlFor","as","onChange","event","currentValue","target","val","modalStyles","content","backgroundColor","borderRadius","top","left","right","bottom","marginRight","transform","maxWidth","minWidth","maxHeight","padding","overlay","zIndex","GModalView","ModalView","currentStep","item","stepItem","isOpen","style","closeTimeoutMS","ariaHideApp","HeaderContainer","IconContainer","cross","ModalSteps","current","i","Step","status","form","initialValues","formValues","validationSchema","schema","onSubmit","onFormSubmit","submitForm","InputForm","items","formKey","renderContent","DescContainer","Avatar","address","diameter","seed","jsNumberForAddress","AccountCard","buttons","renderButtons","isEmpty","GroupButtonContainer","ErrorMessages","indexerRequestApprove","signer","amount","sqToken","increaseAllowance","staking","parseEther","tx","indexerRegistry","metadata","commissionRate","registerIndexer","updateMetadata","unregisterIndexer","controller","setControllerAccount","deploymentId","queryRegistry","startIndexing","updateIndexingStatusToReady","stopIndexing","DockerRegistry","IndexingStatus","ProjectStatus","PaygStatus","AccountAction","ProjectsAction","ProjectAction","PAYGAction","useIsRegistedIndexer","isIndexer","setIsIndexer","getIsIndexer","useIsIndexer","isCoordinatorIndexer","useIsCoordinatorIndexer","isRegisteredIndexer","useController","setController","getController","useTokenBalance","deps","tokenBalance","setBalance","getTokenBalance","balanceOf","balance","Number","formatUnits","toFixed","useBalance","getBalance","fixedValue","useIndexerMetadata","setMetadata","fetchMetadata","metadataHash","useTokenSymbol","RegisterFormKey","MetadataFormKey","RegisterFormSchema","yup","defined","proxyEndpoint","min","rate","max","initialRegisterValues","ControllerFormKey","MetadataFormSchema","initialMetadataValues","ProjectFormKey","privateKey","OpenPAYGFormKey","CIDv0","RegExp","ProjectFormSchema","matches","initialProjectValues","initialIndexingValues","config","networkEndpoint","networkDictionary","nodeVersion","queryVersion","forceEnabled","StartIndexingSchema","optional","required","ControllerAction","AccountNotification","ProjectNotification","TransactionNotification","initalPAYGValues","paygPrice","paygPeriod","paygExpiration","ProjectPaygSchema","buttonTitles","unregister","updateMetaData","createButonItem","actionType","AccountActionName","duration","onScreen","project","start","stop","restart","remove","announce","indexing","ready","notIndexing","payg","instruction","sub","link","button","channels","tabs","expired","closed","paygChangePrice","paygClose","createButtonItem","action","ProjectActionName","PaygOpen","PaygChangePrice","PaygClose","StartIndexing","RestartProject","AnnounceIndexing","AnnounceReady","StopProject","RemoveProject","AnnounceNotIndexing","StopIndexing","startProjectForms","versions","node","query","setPaygPriceForms","aletMessages","Started","description","Terminated","notifications","formatHash","hash","len","substring","txLoadingNotification","txHash","txSuccessNotification","toLowerCase","txErrorNotification","handleTransaction","notificationContext","onSuccess","onError","loadingId","ActionNames","configController","useAccountAction","accountTransactions","param","unRegister","onProcess","sendTx","actionName","useIndexingAction","indexingTransactions","readyIndexing","TabbarItem","emptyController","Account","setVisible","setCurrentStep","setActionType","accountAction","isController","useIsController","controllerBalance","indexerBalance","history","useHistory","tokenSymbol","removeAccounts","controllerItem","indexerItem","isUndefined","parseFloat","onUnregister","onButtonPress","onModalClose","setTimeout","indexerName","indexerButtons","controllerButtons","push","updateMetadataStep","onUpdate","createUpdateMetadataSteps","values","formHelper","setStatus","unregisterCompleted","replace","unregisterStep","TextContainer","IntroductionView","mainTitle","subTitle","activeBtn","widthdrawBtn","removeBtn","removeAccount","withdraw","widthdraw","c","success","failed","createModalStep","withdrawControllerLoading","withdrawControllerSucceed","withdrawControllerFailed","asyncRender","component","IntroContainer","ItemContainer","ItemContentContainer","AccountContainer","Balance","Status","Buttons","ControllerItem","onConfigController","onRemoveController","onWithdraw","isActived","toLocaleLowerCase","emptyBalance","openAccountExporer","text","state","controllersPage","header","intro","setAccount","currentController","removeController","createController","createControllerRequesting","withdrawController","getControllers","controllerData","onSendTxConfigController","isActivedController","controllers","rawControllers","activeAccount","find","filter","createControllerAction","removeAccountSteps","withdrawSteps","notificationId","withrawController","configControllerSteps","createConfig","linkConfigs","TelegramIcon","DiscordIcon","GithubIcon","LinkendinIcon","MediumIcon","MatrixIcon","TwitterIcon","IconsContainer","Header","useLocation","pathname","LeftContainer","RightContainer","TabBar","NavLink","deactivate","activeStyle","fontWeight","dropdownStyle","border","createItem","key","onSelected","isRootPage","accountDetails","renderTabbars","to","projects","SubqueryIcon","dropdownClass","buttonStyles","secondary","LoginPage","VersionItemContainer","horizontal","TagItem","versionType","mainColor","subColor","LogView","getLog","LogViewer","hasLineNumbers","isTextWrapped","theme","NetworkTabbarView","ServiceLog","marginTop","Tabs","_","newValue","textColor","indicatorColor","Tab","Contrainer","VersionContainer","NetworkPage","indexerEra","setIndexerEra","updateEra","rewardsDistributor","getRewardInfo","lastClaimedEra","lastClaimEra","Promise","all","eraManager","eraNumber","rewardsStaking","getLastSettledEra","currentEra","lastSettledEra","useIndexerEra","eraItems","AlertView","setIsOpen","metadataInitValue","lastProcessedHeight","lastProcessedTimestamp","targetHeight","chain","specName","genesisHash","indexerHealthy","indexerNodeVersion","queryNodeVersion","indexerStatus","queryStatus","projectServiceMetadtaValue","paygThreshold","paygOverflow","projectInitValue","owner","image","websiteUrl","codeUrl","version","currentDeployment","currentVersion","versionDescription","createdTimestamp","updatedTimestamp","useProjectService","projectService","setService","getProject","getProjectService","queryRegistryClient","REGISTRY_PROJECT","coordinatorClient","getQueryMetadata","queryMetadata","getProjectDetails","projectInfo","nodes","projectMetadata","projectDetails","getIndexingProjects","deploymentIndexers","combineProjects","localProjects","indexingProjects","removedProjects","lp","getManifest","projectYaml","resultManifest","yaml","dockerRegistryFromChain","chainType","cosmos","avalanche","substrateNode","defaultRange","substrate","isFalse","verifyProxyEndpoint","URL","host","requestUrl","axios","get","response","ServiceStatus","calculateProgress","latestHeight","Math","round","statusCode","indexingStatusCode","NOTINDEXING","INDEXING","READY","FlexPlanStatus","ProjectDetailsHeader","projectStatus","CardContainer","ActionContainer","ServiceContaineer","ServiceView","ProjectServiceCard","actionItems","imageVersion","statusColor","statusText","TagsContainer","LabelContainer","ProjectStatusView","percent","progress","ChannelStatus","networkClient","GraphqlQueryClient","explorerClient","queryFromStatus","ONGOING","GetIndexerOngoingFlexPlans","GetIndexerClosedFlexPlans","createTextColumn","toolTip","dataIndex","tooltip","render","columns","PAYGConfig","price","period","onEdit","actionColumn","colorScheme","tableProps","pagination","dataSource","InstructionContainer","PlansContainer","Introduction","onEnablePayg","rel","tooTip","planColumns","getTagState","tabItem","tabItems","PAYGPlan","onTerminate","setTabItem","setData","plans","stateChannels","getPlans","now","Date","usePAYGPlans","consumer","spent","deposit","total","expiration","expiredAt","toLocaleDateString","plansToDatasource","onTabClick","tabValue","ProjectPAYG","paygPriceRequest","paygConfig","formatEther","BigNumber","mul","changePAYGCofnig","setErrors","usePAYGConfig","paygEnabled","paygOpenSteps","onPaygOpen","createPaygOpenSteps","onUpdatePayg","InfoView","InfoContainer","formatDate","date","ProjectDetailsView","BottomContainer","ProjectTabbarView","ProjectDetails","NodeLog","PAYG","ProjectDetailsPage","useParams","deploymentStatusByIndexer","useIndexingStatus","setProject","fetchMeta","useProjectDetails","refresh","useRouter","indexingAction","startProjectRequest","startProjectLoading","stopProjectRequest","stopProjectLoading","removeProjectRequest","removeProjectLoading","queryVersions","getQueryVersions","fetchQueryVersions","manifest","range","runner","registry","getRegistryVersions","useQueryVersions","nodeVersions","getNodeVersions","fetchNodeVersions","dataSources","runtime","kind","split","registryVersions","v","useNodeVersions","setProgress","fetchQueryMetadata","onStartProject","onStopProject","onRemoveProject","onSendTransaction","healthy","NotIndexing","Indexing","Ready","alertInfo","networkBtnItems","createNetworkButtonItems","serviceBtnItems","createServiceButtonItems","networkActionItems","serviceActionItems","projectConfig","imageVersions","projectStateChange","intervalId","setInterval","clearInterval","updateServiceStatus","startProject","stopProject","removeProject","startIndexingSteps","restartProjectSteps","createRestartProjectSteps","stopIndexingSteps","stopProjectSteps","createStopProjectSteps","removeProjectSteps","announceIndexingSteps","announceReadySteps","createReadyIndexingSteps","announceNotIndexingSteps","createNotIndexingSteps","modalTitle","modalSteps","flex","pl","ProjectItemContainer","Progress","ProgressBar","ProfileContainer","projetHeaderItems","ProjecItemsHeader","StatusLabel","ProjectItem","getDeploymentStatus","useDeploymentStatus","EmptyView","Projects","addProject","getProjectList","projectDetailList","setProjecList","getProjects","getProjectDetailList","detail","useProjectDetailList","onAddProject","helper","trim","useInitialStep","isApproved","isApprove","setIsApprove","checkAllowance","minimumStakingAmount","mimAmount","allowance","gte","useIsApproved","register","onboarding","authorisation","sync","IndexerRegistryView","RegisterPage","isRegistedIndexer","initialStep","setStep","setLoading","isRegisterStep","moveToNextStep","onTransactionFailed","onSyncIndexer","onApprove","onIndexerRegister","indexerMetadata","registerActions","renderSteps","AppContents","showMetaMask","setShowMetaMask","metamaskAvailable","enable","useShowMetaMask","className","Pages","path","exact","ErrorFallback","componentStack","resetError","App","fallback","showDialog","ApolloProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Sentry","dsn","SENTRY_DSN","integrations","BrowserTracing","tracesSampleRate","ReactDOM","StrictMode","document","getElementById","webpackContext","req","webpackContextResolve","__webpack_require__","o","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.1fc6cf19.chunk.js","sourcesContent":["// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { utils } from 'ethers';\nimport { create } from 'ipfs-http-client';\n\nexport const IPFS_METADATA_CLIENT = create({ url: window.env.IPFS_GATEWAY });\nexport const IPFS_PROJECT_CLIENT = create({ url: 'https://ipfs.subquery.network/ipfs/api/v0' });\n\nexport function cidToBytes32(cid: string): string {\n  return `0x${Buffer.from(utils.base58.decode(cid)).slice(2).toString('hex')}`;\n}\n\nexport function bytes32ToCid(bytes: string): string {\n  // Add our default ipfs values for first 2 bytes:\n  // function:0x12=sha2, size:0x20=256 bits\n  // and cut off leading \"0x\"\n  const hashHex = `1220${bytes.slice(2)}`;\n  const hashBytes = Buffer.from(hashHex, 'hex');\n  return utils.base58.encode(hashBytes);\n}\n\nexport function concatU8A(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const res = new Uint8Array(a.length + b.length);\n  res.set(a, 0);\n  res.set(b, a.length);\n  return res;\n}\n\nexport async function createIndexerMetadata(name: string, url: string): Promise<string> {\n  const result = await IPFS_METADATA_CLIENT.add(JSON.stringify({ name, url }), { pin: true });\n  const cid = result.cid.toV0().toString();\n  return cidToBytes32(cid);\n}\n\nexport async function cat(cid: string, client = IPFS_METADATA_CLIENT) {\n  const results = client.cat(cid);\n  let raw: Uint8Array | undefined;\n\n  // eslint-disable-next-line no-restricted-syntax\n  for await (const result of results) {\n    raw = raw ? concatU8A(raw, result) : result;\n  }\n  if (!raw) {\n    console.error(`Unable to fetch data from ipfs: ${cid}`);\n    return raw;\n  }\n\n  const result = Buffer.from(raw).toString('utf8');\n\n  try {\n    return JSON.parse(Buffer.from(raw).toString('utf8'));\n  } catch {\n    return result;\n  }\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nclass Logger {\n  private readonly prefix: string;\n\n  constructor(prefix?: string) {\n    this.prefix = prefix ?? '';\n  }\n\n  getLogger(scope: string): Logger {\n    return new Logger(`${this.prefix}[${scope}]`);\n  }\n\n  public l(message: any, ...rest: any[]): void {\n    console.log(`${this.prefix}${message?.toString()}`, ...rest);\n  }\n\n  public w(message: any, ...rest: any[]): void {\n    console.warn(`${this.prefix}${message?.toString()}`, ...rest);\n  }\n\n  public e(message: any, ...rest: any[]): void {\n    console.error(`${this.prefix}${message?.toString()}`, ...rest);\n  }\n}\n\nexport default Logger;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { createContext, ReactNode, useContext, useMemo } from 'react';\n\nimport Logger from 'utils/logger';\n\nconst EMPTY: unique symbol = Symbol(undefined);\n\nexport type Props<State = void> = {\n  initialState?: State;\n  children?: ReactNode;\n};\n\nexport type Container<V, State = void> = {\n  Provider: React.ComponentType<Props<State>>;\n  useContainer: () => V;\n};\n\nconst logger = new Logger();\n\nexport function createContainer<V, State = void>(\n  useHook: (logger: Logger, initialState?: State) => V,\n  options?: { displayName?: string }\n): Container<V, State> {\n  const Ctx = createContext<V | typeof EMPTY>(EMPTY);\n  if (options?.displayName) {\n    Ctx.displayName = options.displayName;\n  }\n\n  function Provider(props: Props<State>) {\n    const { initialState, children } = props;\n    const l = useMemo(\n      () => (options?.displayName ? logger.getLogger(options?.displayName) : logger),\n      []\n    );\n\n    const value = useHook(l, initialState);\n    return <Ctx.Provider value={value}>{children}</Ctx.Provider>;\n  }\n\n  function useContainer(): V {\n    const value = useContext(Ctx);\n\n    if (value === EMPTY) {\n      throw new Error(\n        `Component must be wrapped with <${Ctx.displayName ?? 'Container'}.Provider>`\n      );\n    }\n\n    return value;\n  }\n\n  return { Provider, useContainer };\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useState } from 'react';\n\nimport { createContainer } from './unstated';\n\ntype LoadingContext = {\n  pageLoading: boolean;\n  setPageLoading: (loading: boolean) => void;\n};\n\nfunction useLoadingImpl(): LoadingContext {\n  const [pageLoading, setPageLoading] = useState<boolean>(false);\n  return { pageLoading, setPageLoading };\n}\n\nexport const { useContainer: useLoading, Provider: LoadingProvider } = createContainer(\n  useLoadingImpl,\n  { displayName: 'Global Loading' }\n);\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC } from 'react';\nimport { Spinner } from '@subql/components';\nimport styled from 'styled-components';\n\nimport { useLoading } from 'containers/loadingContext';\n\nconst Container = styled.div`\n  position: absolute;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  z-index: 1000;\n  background-color: #f6f9fc;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nconst Loading: FC = () => {\n  const { pageLoading } = useLoading();\n  if (!pageLoading) return null;\n  return (\n    <Container>\n      <Spinner size={30} />\n    </Container>\n  );\n};\n\nexport default Loading;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { gql } from '@apollo/client';\n\n// TODO: use the public queries for `network-clients`\n\nexport type QueryResult = {\n  loading?: boolean;\n  data?: any;\n  error?: Error;\n};\n\nexport const GET_COORDINATOR_INDEXER = gql`\n  query {\n    accountMetadata {\n      indexer\n    }\n  }\n`;\n\nexport const ADD_INDEXER = gql`\n  mutation AddIndexer($indexer: String!) {\n    addIndexer(indexer: $indexer) {\n      indexer\n    }\n  }\n`;\n\nexport const START_PROJECT = gql`\n  mutation StartProject(\n    $forceEnabled: Boolean!\n    $queryVersion: String!\n    $nodeVersion: String!\n    $networkDictionary: String!\n    $networkEndpoint: String!\n    $id: String!\n  ) {\n    startProject(\n      forceEnabled: $forceEnabled\n      queryVersion: $queryVersion\n      nodeVersion: $nodeVersion\n      networkDictionary: $networkDictionary\n      networkEndpoint: $networkEndpoint\n      id: $id\n    ) {\n      id\n      status\n      networkEndpoint\n      networkDictionary\n      nodeVersion\n      queryVersion\n      nodeEndpoint\n      queryEndpoint\n    }\n  }\n`;\n\nexport const STOP_PROJECT = gql`\n  mutation StopProject($id: String!) {\n    stopProject(id: $id) {\n      id\n      status\n      networkEndpoint\n      nodeEndpoint\n      queryEndpoint\n    }\n  }\n`;\n\nexport const GET_CONTROLLERS = gql`\n  query {\n    controllers {\n      id\n      address\n    }\n  }\n`;\n\nexport const ADD_CONTROLLER = gql`\n  mutation AddController {\n    addController\n  }\n`;\n\nexport const REMOVE_CONTROLLER = gql`\n  mutation RemoveController($id: String!) {\n    removeAccount(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const WITHDRAW_CONTROLLER = gql`\n  query WithdrawController($id: String!) {\n    withrawController(id: $id)\n  }\n`;\n\nexport const REMOVE_ACCOUNTS = gql`\n  mutation {\n    removeAccounts\n  }\n`;\n\nexport const ADD_PROJECT = gql`\n  mutation AddProject($id: String!) {\n    addProject(id: $id) {\n      id\n      status\n    }\n  }\n`;\n\nexport const REMOVE_PROJECT = gql`\n  mutation RemoveProject($id: String!) {\n    removeProject(id: $id) {\n      status\n    }\n  }\n`;\n\nexport const CHANNEL_CLOSE = gql`\n  mutation ChannelClose($id: String!) {\n    channelClose(id: $id) {\n      id\n      spent\n      remote\n      onchain\n      lastFinal\n    }\n  }\n`;\n\nexport const CONFIG_SERVICES = gql`\n  mutation UpdateServices($queryEndpoint: String!, $nodeEndpoint: String!, $id: String!) {\n    updateProjectServices(queryEndpoint: $queryEndpoint, nodeEndpoint: $nodeEndpoint, id: $id) {\n      status\n      nodeEndpoint\n      queryEndpoint\n    }\n  }\n`;\n\nexport const GET_PROJECT = gql`\n  query Project($id: String!) {\n    project(id: $id) {\n      id\n      status\n      nodeEndpoint\n      queryEndpoint\n      networkEndpoint\n      networkDictionary\n      nodeVersion\n      queryVersion\n      forceEnabled\n      paygPrice\n      paygExpiration\n      paygThreshold\n      paygOverflow\n    }\n  }\n`;\n\nexport const GET_PROJECTS = gql`\n  query {\n    getProjects {\n      id\n      status\n      nodeEndpoint\n      queryEndpoint\n      networkEndpoint\n      networkDictionary\n      nodeVersion\n      queryVersion\n      paygPrice\n      paygExpiration\n      paygThreshold\n      paygOverflow\n    }\n  }\n`;\n\nexport const GET_LOG = gql`\n  query GetLog($container: String!) {\n    getLog(container: $container) {\n      log\n    }\n  }\n`;\n\nexport const GET_QUERY_METADATA = gql`\n  query QueryMetadata($id: String!) {\n    queryMetadata(id: $id) {\n      lastProcessedHeight\n      lastProcessedTimestamp\n      targetHeight\n      chain\n      indexerHealthy\n      indexerNodeVersion\n      queryNodeVersion\n      indexerStatus\n      queryStatus\n    }\n  }\n`;\n\n// query project registry\nexport const GET_INDEXER_PROJECTS = gql`\n  query GetIndexerProjects($indexer: String!) {\n    deploymentIndexers(filter: { indexerId: { equalTo: $indexer } }) {\n      nodes {\n        indexerId\n        deploymentId\n        status\n      }\n    }\n  }\n`;\n\nexport const GET_PROJECT_DETAILS = gql`\n  query GetProjectDetails($deploymentId: String!) {\n    deployments(filter: { id: { equalTo: $deploymentId } }) {\n      nodes {\n        id\n        projectId\n        project {\n          owner\n          currentVersion\n          currentDeployment\n          createdTimestamp\n          updatedTimestamp\n          metadata\n        }\n      }\n    }\n  }\n`;\n\n// query docker image versions\nexport const GET_REGISTRY_VERSIONS = gql`\n  query GetRegistryVersions($range: String!, $registry: String!) {\n    getRegistryVersions(range: $range, registry: $registry)\n  }\n`;\n\n// PAYG\nexport const PAYG_PRICE = gql`\n  mutation PaygProject(\n    $paygPrice: String!\n    $paygExpiration: Float!\n    $paygThreshold: Float!\n    $paygOverflow: Float!\n    $id: String!\n  ) {\n    paygProject(\n      paygPrice: $paygPrice\n      paygExpiration: $paygExpiration\n      paygThreshold: $paygThreshold\n      paygOverflow: $paygOverflow\n      id: $id\n    ) {\n      id\n      paygPrice\n      paygExpiration\n      paygThreshold\n      paygOverflow\n    }\n  }\n`;\n\n// TODO: don't need this anymore\nexport const CHANNEL_CHECKPOINT = gql`\n  mutation ChannelCheckpoint($id: String!) {\n    channelCheckpoint(id: $id) {\n      id\n      spent\n      remote\n      onchain\n    }\n  }\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport * as React from 'react';\nimport { useLazyQuery, useMutation } from '@apollo/client';\n\nimport { ADD_INDEXER, GET_COORDINATOR_INDEXER } from '../utils/queries';\nimport { createContainer } from './unstated';\n\ntype CoordinatorIndexerContext = {\n  indexer: string | undefined;\n  updateIndexer: (indexer: string) => Promise<void>;\n  load: () => void;\n  loading: boolean;\n  error?: Error;\n};\n\nfunction useCoordinatorIndexerImpl(): CoordinatorIndexerContext {\n  const [load, { data, loading, error }] = useLazyQuery(GET_COORDINATOR_INDEXER);\n  const [addIndexer] = useMutation(ADD_INDEXER);\n\n  const [indexer, setIndexer] = React.useState<string>();\n\n  React.useEffect(() => {\n    setIndexer(data?.accountMetadata?.indexer);\n  }, [data]);\n\n  const updateIndexer = React.useCallback(\n    async (indexer: string) => {\n      await addIndexer({ variables: { indexer } });\n      setIndexer(indexer);\n    },\n    [addIndexer]\n  );\n\n  return {\n    indexer,\n    updateIndexer,\n    load,\n    loading,\n    error,\n  };\n}\n\nexport const { useContainer: useCoordinatorIndexer, Provider: CoordinatorIndexerProvider } =\n  createContainer(useCoordinatorIndexerImpl, {\n    displayName: 'Coordinator Indexer',\n  });\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { JsonRpcSigner } from '@ethersproject/providers';\nimport { useWeb3React } from '@web3-react/core';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport { providers } from 'ethers';\nimport { isEmpty } from 'lodash';\n\nimport { useCoordinatorIndexer } from 'containers/coordinatorIndexer';\nimport { useLoading } from 'containers/loadingContext';\n\nexport function useIsMetaMaskInstalled(): boolean {\n  return useMemo(() => window.ethereum?.isMetaMask, [window.ethereum]);\n}\n\nexport const useWeb3 = (): Web3ReactContextInterface<providers.Web3Provider> => useWeb3React();\n\nexport function useWeb3Provider(): providers.Web3Provider | undefined {\n  const { library } = useWeb3();\n  return library;\n}\n\nexport type Signer = JsonRpcSigner | undefined;\n\nexport function useSigner(): Signer {\n  const { active, account, library } = useWeb3();\n  return useMemo(() => library?.getSigner(), [active, account]);\n}\n\nexport function useIsMetaMask(): boolean | undefined {\n  const { active, library } = useWeb3();\n  return useMemo(() => library?.provider?.isMetaMask, [active, library?.provider.isMetaMask]);\n}\n\nexport function useShowMetaMask(): boolean | undefined {\n  const { account } = useWeb3();\n  const { pageLoading, setPageLoading } = useLoading();\n  const { indexer, load } = useCoordinatorIndexer();\n  const isMetaMaskInstalled = useIsMetaMaskInstalled();\n  const isMetaMask = useIsMetaMask();\n\n  const isIndexer = useMemo(\n    () => !!account && account?.toLowerCase() === indexer?.toLowerCase(),\n    [account, indexer]\n  );\n\n  const [showMetaMask, setShowMetaMask] = useState<boolean>();\n\n  useEffect(() => {\n    load();\n  }, [load]);\n\n  useEffect(() => {\n    const metamaskAvailable = isMetaMaskInstalled && isMetaMask;\n    if (!metamaskAvailable) {\n      setPageLoading(false);\n    }\n\n    const enable = (!pageLoading && !isIndexer && !isEmpty(indexer)) || !metamaskAvailable;\n    setShowMetaMask(enable);\n  }, [account, indexer, isIndexer, pageLoading]);\n\n  return showMetaMask;\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { networks } from '@subql/contract-sdk';\n\nexport enum ChainID {\n  testnet = '0x13881',\n  kepler = '0x89',\n  mainnet = '0x89',\n}\n\nexport type SubqueryNetwork = 'mainnet' | 'kepler' | 'testnet';\n\nexport const ChainIDs = [ChainID.testnet, ChainID.kepler, ChainID.mainnet];\n\nexport const NetworkToChainID: Record<SubqueryNetwork, ChainID> = {\n  testnet: ChainID.testnet,\n  kepler: ChainID.kepler,\n  mainnet: ChainID.mainnet,\n};\n\nexport const isSupportNetwork = (chaiId: ChainID) => ChainIDs.includes(chaiId);\n\nexport const RPC_URLS: Record<number, string> = {\n  80001: 'https://polygon-mumbai.infura.io/v3/4458cf4d1689497b9a38b1d6bbf05e78',\n  137: 'https://polygon-rpc.com/',\n};\n\nexport const NETWORK_CONFIGS = {\n  [ChainID.testnet]: networks.testnet,\n  [ChainID.kepler]: networks.kepler,\n  [ChainID.mainnet]: networks.mainnet,\n};\n\nexport function hexToInt(hex: string) {\n  return parseInt(hex, 16);\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport { ContractDeployment, ContractSDK, SdkOptions } from '@subql/contract-sdk';\nimport keplerDeployment from '@subql/contract-sdk/publish/kepler.json';\nimport mainnetDeployment from '@subql/contract-sdk/publish/mainnet.json';\nimport testnetDeployment from '@subql/contract-sdk/publish/testnet.json';\nimport { intToHex } from 'ethereumjs-util';\n\nimport { useIsMetaMask, useWeb3 } from 'hooks/web3Hook';\nimport Logger from 'utils/logger';\nimport { ChainID, isSupportNetwork, SubqueryNetwork } from 'utils/web3';\n\nimport { createContainer } from './unstated';\n\nconst deployments: Record<SubqueryNetwork, ContractDeployment> = {\n  testnet: testnetDeployment,\n  kepler: keplerDeployment,\n  mainnet: mainnetDeployment,\n};\n\nfunction createContractOptions(network: SubqueryNetwork): SdkOptions {\n  return {\n    deploymentDetails: deployments[network] as ContractDeployment,\n    network,\n  };\n}\n\nconst options = {\n  [ChainID.testnet]: createContractOptions('testnet'),\n  [ChainID.kepler]: createContractOptions('kepler'),\n  [ChainID.mainnet]: createContractOptions('mainnet'),\n};\n\nexport type SDK = ContractSDK | undefined;\n\nfunction useContractsImpl(logger: Logger): SDK {\n  const [sdk, setSdk] = React.useState<ContractSDK>();\n  const { library, chainId } = useWeb3();\n  const isMetaMask = useIsMetaMask();\n\n  React.useEffect(() => {\n    if (!chainId || !isSupportNetwork(intToHex(chainId) as ChainID)) return;\n\n    const sdkOption = options[intToHex(chainId) as ChainID];\n    if (!sdkOption || !sdkOption.network || !sdkOption.deploymentDetails) {\n      throw new Error(\n        'Invalid sdk options, contracts provider requires network and deploymentDetails'\n      );\n    }\n\n    if (library && isMetaMask) {\n      ContractSDK.create(library, sdkOption)\n        .then((instance) => setSdk(instance))\n        .catch((e) => {\n          logger.e('Failed to create ContractSDK instance', e);\n          setSdk(undefined);\n        });\n    }\n  }, [logger, library, chainId, isMetaMask]);\n\n  return sdk;\n}\n\nexport const { useContainer: useContractSDK, Provider: ContractSDKProvider } = createContainer(\n  useContractsImpl,\n  {\n    displayName: 'Contract SDK',\n  }\n);\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useState } from 'react';\nimport { FormikValues } from 'formik';\nimport { ObjectSchema } from 'yup';\n\nimport { ClickAction, FormSubmit, ModalAction } from 'pages/project-details/types';\n\nimport { createContainer } from './unstated';\n\nexport type TFieldItem = {\n  title: string;\n  formKey: string;\n  value?: string | number;\n  placeholder?: string;\n  options?: string[];\n};\n\nexport type FormConfig = {\n  placeHolder?: string;\n  formValues: FormikValues;\n  schema: ObjectSchema<any>;\n  onFormSubmit: FormSubmit;\n  items: TFieldItem[];\n};\n\nexport type StepItem = {\n  index: number;\n  title: string;\n  desc: string;\n  buttonTitle: string;\n  onClick?: ClickAction;\n  form?: FormConfig;\n};\n\nexport type TModal = {\n  visible: boolean;\n  steps: StepItem[] | undefined;\n  title?: string;\n  currentStep?: number;\n  loading?: boolean;\n  type?: ModalAction;\n  onClose?: () => void;\n};\n\ntype TModalContext = {\n  modalData: TModal | undefined;\n  showModal: (data: TModal) => void;\n  removeModal: () => void;\n};\n\nfunction useModalImpl(): TModalContext {\n  const [modalData, setModalData] = useState<TModal>();\n  const removeModal = () => setModalData({ visible: false, steps: undefined });\n  const showModal = (data: TModal) => setModalData({ ...data, onClose: removeModal });\n\n  return { modalData, showModal, removeModal };\n}\n\nexport const { useContainer: useModal, Provider: ModalProvider } = createContainer(useModalImpl, {\n  displayName: 'Global Modal',\n});\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n// @ts-nocheck\nimport { useState } from 'react';\nimport {\n  iNotificationDismiss,\n  NOTIFICATION_TYPE,\n  ReactNotifications,\n  Store,\n} from 'react-notifications-component';\n\nimport { createContainer } from './unstated';\n\nimport 'animate.css/animate.min.css';\n\nexport type Notification = {\n  type: NOTIFICATION_TYPE;\n  title: string;\n  message: string;\n  dismiss?: iNotificationDismiss;\n};\n\nexport type notificationContext = {\n  notification?: Notification;\n  dispatchNotification: (info: Notification) => string;\n  removeNotification: (id: string) => void;\n};\n\nfunction useNotificationImpl(): notificationContext {\n  const [notification, setNotification] = useState<Notification>();\n  const removeNotification = (id: string) => Store.removeNotification(id);\n\n  const dispatchNotification = (info: Notification) => {\n    setNotification(info);\n    return Store.addNotification({\n      title: info.title,\n      message: info.message,\n      type: info.type,\n      container: 'top-right',\n      animationIn: ['animate__animated', 'animate__fadeIn'],\n      animationOut: ['animate__animated', 'animate__fadeOut'],\n      dismiss: info.dismiss,\n    });\n  };\n\n  return { notification, dispatchNotification, removeNotification };\n}\n\nexport const Notifications = () => (\n  <>\n    <ReactNotifications />\n  </>\n);\n\nexport const { useContainer: useNotification, Provider: NotificationProvider } = createContainer(\n  useNotificationImpl,\n  {\n    displayName: 'Global Notification',\n  }\n);\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC, useCallback, useEffect, VFC } from 'react';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { Web3ReactManagerFunctions } from '@web3-react/core/dist/types';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { NetworkConnector } from '@web3-react/network-connector';\nimport { providers } from 'ethers';\n\nimport { useWeb3 } from 'hooks/web3Hook';\nimport { ChainID, hexToInt, NetworkToChainID, RPC_URLS } from 'utils/web3';\n\nimport { Props } from './unstated';\n\nconst injectedConntector = new InjectedConnector({\n  supportedChainIds: [137, 80001],\n});\n\nconst injectNetwork = window.env.NETWORK as keyof typeof NetworkToChainID;\n\nconst networkConnector = new NetworkConnector({\n  urls: RPC_URLS,\n  defaultChainId: hexToInt(NetworkToChainID[injectNetwork] ?? ChainID.testnet),\n});\n\nconst getLibrary = (provider: any): providers.Web3Provider => {\n  return new providers.Web3Provider(provider);\n};\n\nexport async function connect(activate: Web3ReactManagerFunctions['activate']): Promise<void> {\n  if (await injectedConntector.isAuthorized()) {\n    return activate(injectedConntector);\n  }\n\n  return activate(networkConnector);\n}\n\nconst InitProvider: VFC = () => {\n  const { activate } = useWeb3();\n  const activateInitialConnector = useCallback(\n    async (): Promise<void> => connect(activate),\n    [activate]\n  );\n\n  useEffect(() => {\n    activateInitialConnector();\n  }, [activateInitialConnector]);\n\n  return null;\n};\n\nexport const Web3Provider: FC = ({ children }: Props) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <InitProvider />\n      {children}\n    </Web3ReactProvider>\n  );\n};\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC } from 'react';\nimport styled from 'styled-components';\n\nconst Image = styled.img<{ size?: number }>`\n  width: ${({ size }) => size ?? 30}px;\n  height: ${({ size }) => size ?? 30}px;\n`;\n\ntype Props = {\n  src: string;\n  size?: number;\n  url?: string;\n};\n\nconst Icon: FC<Props> = ({ src, size, url }) =>\n  url ? (\n    <a href={url}>\n      <Image size={size} src={src} alt={url} />\n    </a>\n  ) : (\n    <Image size={size} src={src} alt={src} />\n  );\n\nexport default Icon;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC } from 'react';\nimport { Button as SubButton, Spinner } from '@subql/react-ui';\nimport { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const Separator = styled.div<{\n  height?: number;\n  width?: number;\n  color?: string;\n  mr?: number;\n}>`\n  height: ${({ height }) => height ?? 1}px;\n  width: ${({ width }) => width ?? 1}px;\n  background-color: ${({ color }) => color ?? 'lightgray'};\n  margin-right: ${({ mr }) => mr ?? 0}px;\n`;\n\ntype TextProps = {\n  size?: number;\n  fw?: string | number;\n  ml?: number;\n  mr?: number;\n  mt?: number;\n  mb?: number;\n  mw?: number;\n  clolor?: string;\n  alignCenter?: boolean;\n  ff?: string;\n};\n\nexport const Text = styled.div<TextProps>`\n  color: ${({ color }) => color ?? '#1A202C'};\n  text-align: ${({ alignCenter }) => (alignCenter ? 'center' : 'left')};\n  font-size: ${({ size }) => size ?? 18}px;\n  font-weight: ${({ fw }) => fw ?? 400};\n  margin-left: ${({ ml }) => ml ?? 0}px;\n  margin-right: ${({ mr }) => mr ?? 0}px;\n  margin-top: ${({ mt }) => mt ?? 0}px;\n  margin-bottom: ${({ mb }) => mb ?? 0}px;\n  min-width: ${({ mw }) => mw ?? 10}px;\n  overflow-wrap: break-word;\n`;\n\nexport const Label = styled.label<TextProps>`\n  color: ${({ color }) => color ?? '#1A202C'};\n  text-align: ${({ alignCenter }) => (alignCenter ? 'center' : 'left')};\n  font-size: ${({ size }) => size ?? 15}px;\n  font-weight: ${({ fw }) => fw ?? 500};\n  margin-left: ${({ ml }) => ml ?? 0}px;\n  margin-right: ${({ mr }) => mr ?? 0}px;\n  margin-top: ${({ mt }) => mt ?? 0}px;\n  margin-bottom: ${({ mb }) => mb ?? 0}px;\n  min-width: ${({ mw }) => mw ?? 10}px;\n  font-family: ${({ ff }) => ff ?? 'Futura'};\n`;\n\n// new buttons\ntype StyledButtonProps = {\n  align?: string;\n  width?: number;\n  mt?: number;\n  mb?: number;\n  mr?: number;\n  ml?: number;\n};\n\nexport const StyledButton = styled(SubButton)<StyledButtonProps>`\n  align-self: ${({ align }) => align ?? 'center'};\n  min-width: ${({ width }) => width ?? 150}px;\n  padding: 16px 50px;\n  margin-top: ${({ mt }) => mt ?? 0}px;\n  margin-bottom: ${({ mb }) => mb ?? 0}px;\n  margin-right: ${({ mr }) => mr ?? 0}px;\n  margin-left: ${({ ml }) => ml ?? 0}px;\n  font-weight: 500;\n`;\n\ntype ButtonProps = {\n  title: string;\n  loading?: boolean;\n  disabled?: boolean;\n  leftItem?: React.ReactNode;\n  type?: 'primary' | 'secondary';\n  onClick?: () => void;\n};\n\nconst Spin = styled(Spinner)`\n  margin-right: 15px;\n`;\n\nexport const Button: FC<ButtonProps & StyledButtonProps> = ({\n  title,\n  loading,\n  disabled,\n  type,\n  ...props\n}) => (\n  <StyledButton\n    label={title}\n    type={type ?? 'secondary'}\n    leftItem={loading && <Spin size={23} color={`${type === 'primary' ? '#fff' : '#4388dd'}`} />}\n    disabled={disabled || loading}\n    {...props}\n  />\n);\n\ntype Align = 'left' | 'right' | 'centre';\n\nexport const ButtonContainer = styled.div<{ mt?: number; align?: Align }>`\n  display: flex;\n  align-items: center;\n  margin-top: ${({ mt }) => mt ?? 0}px;\n  width: 100%;\n  justify-content: ${({ align }) => {\n    if (!align) return 'center';\n    switch (align) {\n      case 'left':\n        return 'flex-start';\n      case 'right':\n        return 'flex-end';\n      default:\n        return 'center';\n    }\n  }};\n`;\n\nexport const FormContainer = styled(Form)<{ mt?: number }>`\n  margin-top: ${({ mt }) => mt ?? 0}px;\n  width: 100%;\n`;\n","export default __webpack_public_path__ + \"static/media/arrow.8961c2a1.svg\";","export default __webpack_public_path__ + \"static/media/metamask.09e5f554.svg\";","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable */\n// @ts-nocheck\n\nimport { NetworkToChainID, NETWORK_CONFIGS } from 'utils/web3';\nimport { intToHex } from 'ethereumjs-util';\nimport { connect } from 'containers/web3';\n\nexport const NetworkError = {\n  unSupportedNetworkError: 'UnsupportedChainIdError',\n};\n\nconst ethMethods = {\n  requestAccount: 'eth_requestAccounts',\n  switchChain: 'wallet_switchEthereumChain',\n  addChain: 'wallet_addEthereumChain',\n}\n\nexport async function connectWithMetaMask(activate: Function) {\n  if (!window.ethereum) return 'MetaMask is not installed';\n  try {\n    await window.ethereum.request({ method: ethMethods.requestAccount });\n    await connect(activate);\n    return '';\n  } catch (e) {\n    return e.message;\n  }\n}\n\nexport async function switchNetwork() {\n  const network = window.env.NETWORK;\n  const chainId = NetworkToChainID[network];\n  if (!window?.ethereum || !network) return;\n\n  try {\n    await window.ethereum.request({\n      method: ethMethods.switchChain,\n      params: [{ chainId: chainId }],\n    })\n  } catch (e) {\n    console.log('e:', e);\n    if (e.code === 4902) {\n      await ethereum.request({\n        method: ethMethods.addChain,\n        params: [NETWORK_CONFIGS[chainId]],\n      })\n    } else {\n      console.log('Switch Ethereum network failed', e);\n    }\n  }\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nexport const extensionInstallUrls = {\n  Chrome: 'https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn',\n  Firefox: 'https://addons.mozilla.org/en-US/firefox/addon/ether-metamask/',\n  Brave: 'https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn',\n  Edge: 'https://microsoftedge.microsoft.com/addons/detail/metamask/ejbalbakoplchlghecdalmeeeajnimhm',\n};\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Account } from 'pages/account/types';\n\nconst prompts = (account: Account) => ({\n  install: {\n    title: 'Install MetaMask to use Indexer App',\n    desc: 'No MetaMask Extension found in the browser.  Please click the button to install the MetaMask Extension before connect with the network.',\n    buttonTitle: 'Install MetaMask in the extension market',\n  },\n  connect: {\n    title: 'Connect wallet to use Indexer App',\n    desc: 'Use the indexer app to connect with Subquery network, you can manage you accounts and projects inside the app.',\n    buttonTitle: 'Connect with MetaMask browser extension',\n  },\n  invalidAccount: {\n    title: 'Incorrect connected account with coordinator service',\n    desc: `Please switch the connect account to ${account}`,\n    buttonTitle: 'Switch account to use the admin app',\n  },\n  invalidNetwork: {\n    title: 'Unsupportted network Type',\n    desc: 'MetaMask connect with an unsupported network, please press the button to swith to the correct network',\n    buttonTitle: 'Swtich to the supportted network',\n  },\n});\n\nexport default prompts;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  width: 100%;\n  margin-top: -100px;\n`;\n\nexport const MetaMaskContainer = styled.div`\n  display: flex;\n  padding: 24px;\n  align-items: center;\n  justify-content: space-between;\n  min-width: 450px;\n  cursor: pointer;\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { browserName } from 'react-device-detect';\n\nimport Icon from 'components/Icon';\nimport { Button, Label, Text } from 'components/primary';\nimport { useCoordinatorIndexer } from 'containers/coordinatorIndexer';\nimport { useIsMetaMask, useIsMetaMaskInstalled, useWeb3 } from 'hooks/web3Hook';\nimport ArrowIcon from 'resources/arrow.svg';\nimport MetaMaskIcon from 'resources/metamask.svg';\nimport { connectWithMetaMask, NetworkError, switchNetwork } from 'utils/metamask';\n\nimport { extensionInstallUrls } from './config';\nimport prompts from './prompts';\nimport { Container, ContentContainer, MetaMaskContainer } from './styles';\n\nconst MetaMaskView = () => {\n  const { account, activate, error } = useWeb3();\n  const { indexer } = useCoordinatorIndexer();\n  const isMetaMask = useIsMetaMask();\n  const isMetaMaskInstalled = useIsMetaMaskInstalled();\n\n  const [isNetworkError, setNetworkError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(() => {\n    setNetworkError(error?.name === NetworkError.unSupportedNetworkError);\n  }, [error]);\n\n  const data = useMemo(() => {\n    const { install, connect, invalidNetwork, invalidAccount } = prompts(indexer);\n    if (!isMetaMaskInstalled) return install;\n    if (isNetworkError) return invalidNetwork;\n    if (!isMetaMask) return connect;\n    return invalidAccount;\n  }, [isNetworkError, isMetaMaskInstalled, isMetaMask, account, indexer]);\n\n  const onButtonClick = useCallback(async () => {\n    if (isNetworkError) {\n      await switchNetwork();\n      return;\n    }\n    if (!isMetaMaskInstalled) {\n      // @ts-ignore\n      const url = extensionInstallUrls[browserName] ?? '';\n      url && window.open(url, '_blank', 'noopener,noreferrer');\n      return;\n    }\n    if (!isMetaMask) {\n      const result = await connectWithMetaMask(activate);\n      setErrorMsg(result);\n    }\n  }, [isMetaMask, isNetworkError, isMetaMaskInstalled]);\n\n  const metaMaskItem = useMemo(\n    () => (\n      <MetaMaskContainer>\n        <div>\n          <ContentContainer>\n            <Icon size={50} src={MetaMaskIcon} />\n            <Label ml={20} size={25}>\n              MetaMask\n            </Label>\n          </ContentContainer>\n          <Text mt={10}>{data.buttonTitle}</Text>\n        </div>\n        <Icon size={30} src={ArrowIcon} />\n      </MetaMaskContainer>\n    ),\n    [data]\n  );\n\n  return (\n    <Container>\n      <Label alignCenter size={35} fw=\"400\">\n        {data.title}\n      </Label>\n      <Text alignCenter mt={15}>\n        {data.desc}\n      </Text>\n      <Text color=\"red\" alignCenter mt={15}>\n        {errorMsg}\n      </Text>\n      <Button mt={50} type=\"secondary\" title=\"\" onClick={onButtonClick} leftItem={metaMaskItem} />\n    </Container>\n  );\n};\n\nexport default MetaMaskView;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst defaultCoordinatorUrl = `${window.location.protocol}//${window.location.hostname}:${window.env.COORDINATOR_SERVICE_PORT}/graphql`;\n\nexport const coordinatorServiceUrl = __DEV__\n  ? window.env.COORDINATOR_SERVICE_URL\n  : defaultCoordinatorUrl;\n\nexport const proxyServiceUrl = `${window.location.protocol}//${window.location.hostname}`;\n\nexport function createApolloClient(uri: string) {\n  return new ApolloClient({\n    uri,\n    cache: new InMemoryCache(),\n    defaultOptions: {\n      watchQuery: {\n        fetchPolicy: 'network-only',\n      },\n    },\n  });\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nexport enum RegisterStep {\n  onboarding = 'onboarding',\n  authorisation = 'authorisation',\n  register = 'register',\n  sync = 'sync',\n}\n\nexport enum StepStatus {\n  wait = 'wait',\n  process = 'process',\n  finish = 'finish',\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Form, Steps } from 'antd';\nimport styled from 'styled-components';\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 18px;\n  background-color: white;\n  margin-bottom: 50px;\n  padding: 60px;\n  min-width: 650px;\n  min-height: 450px;\n`;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const DescContainer = styled.div<{ mt?: number }>`\n  margin-top: ${(p) => p.mt ?? 0}px;\n  width: 450px;\n`;\n\nexport const RegistrySteps = styled(Steps)`\n  width: 55%;\n  margin-bottom: 70px;\n  min-width: 650px;\n  max-width: 70%;\n`;\n\nexport const FormContainer = styled(Form)`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n  min-width: 600px;\n  margin-top: 30px;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { RegisterStep, StepStatus } from './types';\n\nexport const registerSteps = Object.entries(RegisterStep)\n  .map(([key]) => key)\n  .slice(1);\n\nexport const getStepIndex = (step?: RegisterStep): number =>\n  registerSteps.findIndex((s) => s === step);\n\nexport const getStepStatus = (currentIndex: number, index: number): StepStatus => {\n  if (currentIndex === index) return StepStatus.process;\n  if (currentIndex > index) return StepStatus.finish;\n  return StepStatus.wait;\n};\n","export default __webpack_public_path__ + \"static/media/cross.9aeef195.svg\";","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useState, VFC } from 'react';\nimport { Field, FormikErrors, FormikHandlers, FormikValues } from 'formik';\nimport styled from 'styled-components';\n\nimport { Label, Text } from './primary';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nconst FormField = styled(Field)`\n  border-radius: 5px;\n  border: thin solid lightgray;\n  padding: 5px 10px;\n  margin-top: 5px;\n  font-size: 16px;\n`;\n\nconst Option = styled.option`\n  padding: 10px 10px;\n  background-color: green;\n`;\n\ntype Props = {\n  title: string;\n  fieldKey: string;\n  placeholder?: string;\n  initialValue?: string | number;\n  options?: string[];\n  setFieldValue?: (field: string, value: string | number) => void;\n  onChange?: FormikHandlers['handleChange'];\n  errors?: FormikErrors<FormikValues>;\n};\n\nexport const FieldItem: VFC<Props> = ({\n  title,\n  initialValue,\n  placeholder,\n  fieldKey,\n  setFieldValue,\n  options,\n  errors,\n}) => {\n  const [value, setValue] = useState(initialValue);\n\n  const onFormChange = (event: any) => {\n    const currentValue = event.target.value;\n    setFieldValue && setFieldValue(fieldKey, currentValue);\n    setValue(currentValue);\n  };\n\n  return (\n    <Container>\n      <Label htmlFor={fieldKey}>{title}</Label>\n      {!options && <FormField placeholder={placeholder} name={fieldKey} />}\n      {!!options && (\n        <FormField as=\"select\" key={fieldKey} name={fieldKey} onChange={onFormChange} value={value}>\n          {options.map((val) => (\n            <Option key={val} value={val}>\n              {val}\n            </Option>\n          ))}\n        </FormField>\n      )}\n      {!!errors?.[fieldKey] && (\n        <Text mt={5} color=\"red\" size={15}>\n          {errors[fieldKey]}\n        </Text>\n      )}\n    </Container>\n  );\n};\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC } from 'react';\nimport Modal from 'react-modal';\nimport { Steps } from 'antd';\nimport { Form, Formik } from 'formik';\nimport styled from 'styled-components';\n\nimport { StepItem, TModal, useModal } from 'containers/modalContext';\nimport { RegistrySteps } from 'pages/register/styles';\nimport { getStepStatus } from 'pages/register/utils';\nimport cross from 'resources/cross.svg';\n\nimport { FieldItem } from './formItem';\nimport Icon from './Icon';\nimport { Button, ButtonContainer, Text } from './primary';\n\nconst modalStyles = {\n  content: {\n    backgroundColor: 'white',\n    borderRadius: 15,\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    maxWidth: 900,\n    minWidth: 700,\n    maxHeight: '90%',\n    padding: 0,\n  },\n  overlay: {\n    zIndex: 50,\n    backgroundColor: 'rgba(0, 0, 0, 0.65)',\n  },\n};\n\nexport const GModalView = () => {\n  const { modalData } = useModal();\n  if (!modalData || !modalData.visible) return null;\n\n  return <ModalView {...modalData} />;\n};\n\nconst ModalView: FC<TModal> = ({\n  visible,\n  title,\n  onClose,\n  currentStep = 0,\n  steps,\n  type,\n  loading,\n}) => {\n  if (!steps || currentStep > steps.length - 1) return null;\n  const stepItem = steps[currentStep];\n  const renderFormContent = (item: StepItem) =>\n    item.form ? (\n      <Formik\n        initialValues={item.form.formValues}\n        validationSchema={item.form.schema}\n        onSubmit={item.form.onFormSubmit}\n      >\n        {({ status, errors, submitForm, setFieldValue, initialValues }) => (\n          <InputForm>\n            <div>\n              {item.form?.items.map(({ title = '', formKey = '', placeholder = '', options }) => (\n                <FieldItem\n                  key={title}\n                  title={title}\n                  fieldKey={formKey}\n                  initialValue={initialValues[formKey]}\n                  placeholder={placeholder}\n                  setFieldValue={setFieldValue}\n                  options={options}\n                  errors={errors}\n                />\n              ))}\n              {item.desc && (\n                <Text mt={20} size={13} color=\"gray\">\n                  {item.desc}\n                </Text>\n              )}\n            </div>\n            <ButtonContainer align=\"right\" mt={50}>\n              <Button\n                width={260}\n                mt={0}\n                title={item.buttonTitle}\n                onClick={submitForm}\n                loading={loading || status?.loading}\n              />\n            </ButtonContainer>\n          </InputForm>\n        )}\n      </Formik>\n    ) : null;\n\n  const renderContent = (item: StepItem) => (\n    <ContentContainer>\n      <DescContainer>\n        <Text fw=\"500\" mt={10} size={25}>\n          {item.title}\n        </Text>\n        <Text alignCenter mt={20} size={15} color=\"gray\">\n          {item.desc}\n        </Text>\n      </DescContainer>\n      <ButtonContainer align=\"right\" mt={60}>\n        <Button\n          width={200}\n          title={item.buttonTitle}\n          onClick={() => item.onClick && item.onClick(type)}\n          loading={loading}\n        />\n      </ButtonContainer>\n    </ContentContainer>\n  );\n\n  const renderHeader = () => (\n    <HeaderContainer onClick={() => onClose && onClose()}>\n      <Text fw=\"500\" size={20}>\n        {title}\n      </Text>\n      <IconContainer>\n        <Icon size={18} src={cross} />\n      </IconContainer>\n    </HeaderContainer>\n  );\n\n  const renderSteps = () =>\n    steps?.length > 1 && (\n      <ModalSteps size=\"small\" current={currentStep}>\n        {steps.map((item, i) => (\n          <RegistrySteps.Step\n            key={item.title}\n            status={getStepStatus(currentStep, i)}\n            title={item.buttonTitle}\n          />\n        ))}\n      </ModalSteps>\n    );\n\n  return (\n    <Modal isOpen={visible} style={modalStyles} closeTimeoutMS={200} ariaHideApp={false}>\n      {renderHeader()}\n      <Container>\n        {renderSteps()}\n        {stepItem.form ? renderFormContent(stepItem) : renderContent(stepItem)}\n      </Container>\n    </Modal>\n  );\n};\n\nexport default ModalView;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: 32px;\n  padding-bottom: 52px;\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-content: center;\n  padding: 16px 32px;\n  border-bottom: 1px solid var(--sq-gray300);\n`;\n\nconst IconContainer = styled.div`\n  margin-top: 5px;\n`;\n\nconst ModalSteps = styled(Steps)`\n  width: 100%;\n  min-width: 350px;\n  margin-bottom: 40px;\n`;\n\nconst InputForm = styled(Form)`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst DescContainer = styled.div`\n  display: flex;\n  width: 80%;\n  flex-direction: column;\n  align-items: center;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC } from 'react';\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon';\n\ntype Props = {\n  size: number;\n  address: string;\n};\n\nconst Avatar: FC<Props> = ({ size, address }) => (\n  <Jazzicon diameter={size} seed={jsNumberForAddress(address)} />\n);\n\nexport default Avatar;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC, useMemo } from 'react';\nimport { isEmpty } from 'lodash';\nimport styled from 'styled-components';\n\nimport { AccountButtonItem } from 'pages/account/types';\n\nimport Avatar from './avatar';\nimport { Button, ButtonContainer, Text } from './primary';\n\ntype Props = {\n  title: string;\n  desc: string;\n  buttons: AccountButtonItem[];\n  name?: string;\n  account?: string;\n};\n\nconst AccountCard: FC<Props> = ({ title, desc, buttons, name, account }) => {\n  const renderButtons = useMemo(\n    () =>\n      buttons.map(({ title, type, loading, disabled, onClick }) => (\n        <Button\n          key={type}\n          width={230}\n          mb={20}\n          title={title}\n          loading={loading}\n          disabled={disabled}\n          onClick={() => onClick(type)}\n        />\n      )),\n    [buttons]\n  );\n\n  return (\n    <Container key={title}>\n      <div>\n        <HeaderContainer>\n          <ContentContainer>\n            <Text size={30} fw=\"bold\" mr={20}>\n              {title}\n            </Text>\n          </ContentContainer>\n        </HeaderContainer>\n        {account ? (\n          <ContentContainer>\n            <Avatar address={account ?? ''} size={100} />\n            <DescContainer ml={20}>\n              <Text>{name}</Text>\n              <Text mt={10}>{account}</Text>\n              <Text mt={10}>{desc}</Text>\n            </DescContainer>\n          </ContentContainer>\n        ) : (\n          <DescContainer>\n            <Text color=\"gray\" size={15} mb={30}>\n              {desc}\n            </Text>\n            {!isEmpty(buttons) && <ButtonContainer align=\"left\">{renderButtons}</ButtonContainer>}\n          </DescContainer>\n        )}\n      </div>\n      {!!account && !isEmpty(buttons) && (\n        <GroupButtonContainer>{renderButtons}</GroupButtonContainer>\n      )}\n    </Container>\n  );\n};\n\nexport default AccountCard;\n\n// styles\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  min-width: 1000px;\n  min-height: 250px;\n  width: 70%;\n  border: thin solid;\n  border-color: lightgray;\n  border-radius: 15px;\n  padding: 40px;\n  margin-bottom: 30px;\n  :hover {\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  }\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 30px;\n`;\n\nconst ContentContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst DescContainer = styled.div<{ ml?: number }>`\n  display: flex;\n  width: 80%;\n  flex-direction: column;\n  margin-left: ${({ ml }) => ml ?? 0}px;\n`;\n\nconst GroupButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { utils } from 'ethers';\n\nimport { SDK } from 'containers/contractSdk';\nimport { Signer } from 'hooks/web3Hook';\n\nimport { cidToBytes32 } from './ipfs';\n\nexport const emptyControllerAccount = '0x0000000000000000000000000000000000000000';\n\nconst ErrorMessages = {\n  sdkOrSignerError: 'Contract SDK or Signer not initialised',\n  controllerExist: 'Controller account is used by an indexer already',\n  deploymentIdError: 'Invalid deploymentId provided',\n  amountError: 'Amount can not be empty',\n  controllerError: 'Controller can not be empty',\n};\n\n// TODO: refactor\nexport async function indexerRequestApprove(sdk: SDK, signer: Signer, amount: string | undefined) {\n  if (!sdk || !signer) {\n    throw new Error(ErrorMessages.sdkOrSignerError);\n  }\n  if (!amount) {\n    throw new Error(ErrorMessages.amountError);\n  }\n\n  const tx = await sdk.sqToken\n    .connect(signer)\n    .increaseAllowance(sdk.staking.address, utils.parseEther(amount));\n  return tx;\n}\n\nexport async function indexerRegistry(\n  sdk: SDK,\n  signer: Signer,\n  amount: string | undefined,\n  metadata: string,\n  commissionRate: number\n) {\n  if (!sdk || !signer) {\n    throw new Error(ErrorMessages.sdkOrSignerError);\n  }\n  if (!amount) {\n    throw new Error(ErrorMessages.amountError);\n  }\n\n  const tx = await sdk.indexerRegistry\n    .connect(signer)\n    .registerIndexer(utils.parseEther(amount), metadata, commissionRate);\n  return tx;\n}\n\nexport async function updateMetadata(sdk: SDK, signer: Signer, metadata: string) {\n  if (!sdk || !signer) {\n    throw new Error(ErrorMessages.sdkOrSignerError);\n  }\n\n  const tx = await sdk.indexerRegistry.connect(signer).updateMetadata(metadata);\n  return tx;\n}\n\nexport async function unRegister(sdk: SDK, signer: Signer) {\n  if (!sdk || !signer) {\n    throw new Error(ErrorMessages.sdkOrSignerError);\n  }\n\n  const tx = sdk.indexerRegistry.connect(signer).unregisterIndexer();\n  return tx;\n}\n\nexport async function configController(sdk: SDK, signer: Signer, controller: string | undefined) {\n  if (!sdk || !signer) {\n    throw new Error(ErrorMessages.sdkOrSignerError);\n  }\n  if (!controller) {\n    throw new Error(ErrorMessages.controllerError);\n  }\n\n  const tx = await sdk.indexerRegistry.connect(signer).setControllerAccount(controller);\n  return tx;\n}\n\nexport async function startIndexing(sdk: SDK, signer: Signer, deploymentId: string | undefined) {\n  if (!sdk || !signer) {\n    throw new Error(ErrorMessages.sdkOrSignerError);\n  }\n  if (!deploymentId) {\n    throw new Error(ErrorMessages.deploymentIdError);\n  }\n\n  const tx = await sdk.queryRegistry.connect(signer).startIndexing(cidToBytes32(deploymentId));\n  return tx;\n}\n\nexport async function readyIndexing(sdk: SDK, signer: Signer, deploymentId: string | undefined) {\n  if (!sdk || !signer) {\n    throw new Error(ErrorMessages.sdkOrSignerError);\n  }\n  if (!deploymentId) {\n    throw new Error(ErrorMessages.deploymentIdError);\n  }\n\n  const tx = await sdk.queryRegistry\n    .connect(signer)\n    .updateIndexingStatusToReady(cidToBytes32(deploymentId));\n  return tx;\n}\n\nexport async function stopIndexing(sdk: SDK, signer: Signer, deploymentId: string | undefined) {\n  if (!sdk || !signer) {\n    throw new Error(ErrorMessages.sdkOrSignerError);\n  }\n  if (!deploymentId) {\n    throw new Error(ErrorMessages.deploymentIdError);\n  }\n\n  const tx = await sdk.queryRegistry.connect(signer).stopIndexing(cidToBytes32(deploymentId));\n  return tx;\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { formatUnits } from '@ethersproject/units';\n\nimport { useContractSDK } from 'containers/contractSdk';\nimport { useCoordinatorIndexer } from 'containers/coordinatorIndexer';\nimport { useWeb3 } from 'hooks/web3Hook';\nimport { Account, IndexerMetadata } from 'pages/account/types';\nimport { HookDependency } from 'types/types';\nimport { emptyControllerAccount } from 'utils/indexerActions';\nimport { bytes32ToCid, cat } from 'utils/ipfs';\n\n// indexer save inside coordinator service\nexport const useIsCoordinatorIndexer = (): boolean => {\n  const { indexer } = useCoordinatorIndexer();\n  const { account } = useWeb3();\n\n  return useMemo(() => !!account && !!indexer && account === indexer, [account, indexer]);\n};\n\nexport const useIsRegistedIndexer = (): boolean | undefined => {\n  const { account } = useWeb3();\n  const [isIndexer, setIsIndexer] = useState<boolean>();\n  const sdk = useContractSDK();\n\n  const getIsIndexer = useCallback(async () => {\n    if (!account || !sdk) return;\n    try {\n      const status = await sdk?.indexerRegistry.isIndexer(account);\n      setIsIndexer(status);\n    } catch {\n      setIsIndexer(false);\n    }\n  }, [account, sdk]);\n\n  useEffect(() => {\n    getIsIndexer();\n  }, [getIsIndexer]);\n\n  return isIndexer;\n};\n\nexport const useIsIndexer = (): boolean | undefined => {\n  const isCoordinatorIndexer = useIsCoordinatorIndexer();\n  const isRegisteredIndexer = useIsRegistedIndexer();\n\n  return useMemo(\n    () => isCoordinatorIndexer && isRegisteredIndexer,\n    [isCoordinatorIndexer, isRegisteredIndexer]\n  );\n};\n\n// TODO: refactor these hooks\n// 1. using `useMemo` | `useCallback` to replace custome useState\n// 2. using try catch | async await other than promise\nexport const useIsController = (account: Account) => {\n  const [isController, setIsController] = useState(false);\n  // TODO: get controller from subquery project\n  return isController;\n};\n\nexport const useController = () => {\n  const [controller, setController] = useState<string>();\n  const { account } = useWeb3();\n  const sdk = useContractSDK();\n\n  const getController = useCallback(async () => {\n    try {\n      const controller = await sdk?.indexerRegistry.getController(account ?? '');\n      setController(controller === emptyControllerAccount ? '' : controller);\n    } catch {\n      setController(undefined);\n    }\n  }, [account, sdk]);\n\n  useEffect(() => {\n    getController();\n  }, [getController]);\n\n  return { controller, getController };\n};\n\nexport const useTokenBalance = (account: Account, deps?: HookDependency) => {\n  const [tokenBalance, setBalance] = useState('0.00');\n  const sdk = useContractSDK();\n\n  const getTokenBalance = useCallback(async () => {\n    if (!sdk || !account) return;\n    try {\n      const value = await sdk.sqToken.balanceOf(account);\n      const balance = Number(formatUnits(value, 18)).toFixed(2);\n      setBalance(balance);\n    } catch (e) {\n      console.error('Get token balance failed for:', account);\n    }\n  }, [account, sdk]);\n\n  useEffect(() => {\n    getTokenBalance();\n  }, [getTokenBalance, deps]);\n\n  return { tokenBalance, getTokenBalance };\n};\n\nexport const useBalance = (account: Account) => {\n  const [balance, setBalance] = useState<string>();\n  const { library } = useWeb3();\n\n  const getBalance = useCallback(async () => {\n    if (!account || !library) return;\n    try {\n      const value = await library?.getBalance(account);\n      const fixedValue = Number(formatUnits(value, 18)).toFixed(4);\n      setBalance(fixedValue);\n    } catch (e) {\n      console.error('Get balance failed for:', account);\n    }\n  }, [account]);\n\n  useEffect(() => {\n    getBalance();\n  }, [getBalance]);\n\n  return balance;\n};\n\nexport const useIndexerMetadata = () => {\n  const { account } = useWeb3();\n  const sdk = useContractSDK();\n  const [metadata, setMetadata] = useState<IndexerMetadata>();\n\n  const fetchMetadata = useCallback(async () => {\n    if (!account) return;\n    try {\n      const metadataHash = await sdk?.indexerRegistry.metadata(account);\n      if (!metadataHash) return;\n\n      const metadata = await cat(bytes32ToCid(metadataHash));\n      setMetadata(metadata);\n    } catch {\n      console.error('Failed to get indexer metadata');\n    }\n  }, [sdk, account]);\n\n  useEffect(() => {\n    fetchMetadata();\n  }, [fetchMetadata]);\n\n  return { metadata, fetchMetadata };\n};\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FormikHelpers, FormikValues } from 'formik';\n\nimport { ControllerAction } from 'pages/controllers/types';\n\nexport type ChainType = 'cosmos' | 'avalanche' | 'substrate';\n\nexport enum DockerRegistry {\n  query = 'onfinality/subql-query',\n  substrateNode = 'onfinality/subql-node',\n  cosmos = 'onfinality/subql-node-cosmos',\n  avalanche = 'onfinality/subql-node-avalanche',\n}\n\nexport enum IndexingStatus {\n  NOTINDEXING,\n  INDEXING,\n  READY,\n}\n\nexport enum ProjectStatus {\n  NotIndexing = 'NOT INDEXING',\n  Started = 'STARTED',\n  Indexing = 'INDEXING',\n  Ready = 'READY',\n  Terminated = 'TERMINATED',\n}\n\nexport enum PaygStatus {\n  Open = 'OPEN',\n  Close = 'CLOSE',\n}\n\nexport type TransactionType =\n  | ProjectAction.AnnounceIndexing\n  | ProjectAction.AnnounceReady\n  | ProjectAction.AnnounceNotIndexing;\n\nexport enum AccountAction {\n  unregister = 'unregister',\n  updateMetaData = 'updateMetadata',\n}\n\nexport enum ProjectsAction {\n  addProject = 'addProject',\n}\n\nexport enum ProjectAction {\n  StartIndexing = 'StartIndexing',\n  AnnounceIndexing = 'AnnounceIndexing',\n  RestartProject = 'RestartProject',\n  AnnounceReady = 'AnnounceReady',\n  StopProject = 'StopProject',\n  AnnounceNotIndexing = 'AnnounceNotIndexing',\n  StopIndexing = 'StopIndexing',\n  RemoveProject = 'Remove Project',\n}\n\nexport enum PAYGAction {\n  PaygOpen = 'Open PAYG',\n  PaygChangePrice = 'Change Price',\n  PaygClose = 'Close PAYG',\n}\n\n// TODO: move these types to global types\nexport type ModalAction =\n  | AccountAction\n  | ControllerAction\n  | ProjectsAction\n  | ProjectAction\n  | PAYGAction;\nexport type ClickAction = (type?: ModalAction) => void;\nexport type FormSubmit = (values: FormikValues, helper: FormikHelpers<FormikValues>) => void;\n\nexport type ProjectConfig = {\n  networkEndpoint: string;\n  networkDictionary: string;\n  nodeVersion: string;\n  queryVersion: string;\n  forceEnabled: boolean;\n  paygPrice: string;\n  paygExpiration: number;\n  paygThreshold: number;\n  paygOverflow: number;\n};\n\nexport type ProjectServiceMetadata = {\n  id: string;\n  status: IndexingStatus;\n} & ProjectConfig;\n\nexport type TQueryMetadata = {\n  lastProcessedHeight: number;\n  lastProcessedTimestamp: number;\n  targetHeight: number;\n  chain: string;\n  specName: string;\n  genesisHash: string;\n  indexerHealthy?: boolean;\n  indexerNodeVersion: string;\n  queryNodeVersion: string;\n  indexerStatus: string;\n  queryStatus: string;\n};\n\n// manifest types\nexport type Runner = {\n  node?: {\n    name: string;\n    version: string;\n  };\n  query?: {\n    name: string;\n    version: string;\n  };\n};\n\ntype DataSources = {\n  kind: string;\n};\n\nexport type PartialIpfsDeploymentManifest = {\n  dataSources: DataSources[];\n  schema: {\n    file: string;\n  };\n  network: {\n    chainId?: string;\n  };\n  specVersion: string;\n  runner?: Runner;\n};\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { useContractSDK } from 'containers/contractSdk';\n\nimport { useWeb3 } from './web3Hook';\n\nexport const useTokenSymbol = () => {\n  const { chainId } = useWeb3();\n  const tokenSymbol = useMemo(() => {\n    if (chainId === 80001) {\n      return 'MATIC';\n    }\n    if (chainId === 173) {\n      return 'DEV';\n    }\n\n    return 'DEV';\n  }, [chainId]);\n\n  return tokenSymbol;\n};\n\nexport type IndexerEra = {\n  currentEra: string;\n  lastClaimedEra: string;\n  lastSettledEra: string;\n};\n\nexport const useIndexerEra = () => {\n  const { account } = useWeb3();\n  const sdk = useContractSDK();\n\n  const [indexerEra, setIndexerEra] = useState<IndexerEra>();\n\n  const updateEra = useCallback(async () => {\n    if (!sdk || !account) return;\n\n    const lastClaimedEra = (await sdk.rewardsDistributor.getRewardInfo(account)).lastClaimEra;\n    const [currentEra, lastSettledEra] = await Promise.all([\n      sdk.eraManager.eraNumber(),\n      sdk.rewardsStaking.getLastSettledEra(account),\n    ]);\n\n    setIndexerEra({\n      currentEra: currentEra.toString(),\n      lastClaimedEra: lastClaimedEra.toString(),\n      lastSettledEra: lastSettledEra.toString(),\n    });\n  }, [sdk, account]);\n\n  useEffect(() => {\n    updateEra();\n  }, [updateEra]);\n\n  return indexerEra;\n};\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport * as yup from 'yup';\n\nimport { IndexerMetadata } from 'pages/account/types';\nimport { ProjectConfig } from 'pages/project-details/types';\n\n// indexer register\nexport enum RegisterFormKey {\n  name = 'name',\n  proxyEndpoint = 'proxyEndpoint',\n  amount = 'amount',\n  rate = 'rate',\n}\n\nexport const RegisterFormSchema = yup.object({\n  [RegisterFormKey.name]: yup.string().defined(),\n  [RegisterFormKey.proxyEndpoint]: yup.string().defined(),\n  [RegisterFormKey.amount]: yup\n    .number()\n    .min(1000, 'Staking token should large than 1000 SQT')\n    .defined(),\n  [RegisterFormKey.rate]: yup\n    .number()\n    .min(0, 'Rate should be between 0 and 100')\n    .max(100, 'Rate should be between 0 and 100')\n    .defined(),\n});\n\nexport const initialRegisterValues = {\n  [RegisterFormKey.name]: '',\n  [RegisterFormKey.proxyEndpoint]: '',\n  [RegisterFormKey.amount]: 0,\n  [RegisterFormKey.rate]: 0,\n};\n\nexport type TRegisterValues = yup.Asserts<typeof RegisterFormSchema>;\n\n// update metadata\nexport enum MetadataFormKey {\n  name = 'name',\n  proxyEndpoint = 'proxyEndpoint',\n}\n\nexport const MetadataFormSchema = yup.object({\n  [RegisterFormKey.name]: yup.string().defined(),\n  [RegisterFormKey.proxyEndpoint]: yup.string().defined(),\n});\n\nexport const initialMetadataValues = (metadata?: IndexerMetadata) => ({\n  [RegisterFormKey.name]: metadata?.name,\n  [RegisterFormKey.proxyEndpoint]: metadata?.url,\n});\n\nexport type TMetadataValues = yup.Asserts<typeof MetadataFormSchema>;\n\n// config controllerItem\nexport enum ControllerFormKey {\n  privateKey = 'privateKey',\n}\n\nexport const ControllerFormSchema = yup.object({\n  [ControllerFormKey.privateKey]: yup.string().defined(),\n});\n\nexport const initialControllerValues = {\n  [ControllerFormKey.privateKey]: '',\n};\n\n// add project\nexport enum ProjectFormKey {\n  deploymentId = 'deploymentId',\n  networkEndpoint = 'networkEndpoint',\n  networkDictionary = 'networkDictionary',\n  nodeVersion = 'nodeVersion',\n  queryVersion = 'queryVersion',\n  forceEnabled = 'forceEnabled',\n  // FIXME: remove\n  paygPrice = 'paygPrice',\n  paygExpiration = 'paygExpiration',\n  paygThreshold = 'paygThreshold',\n  paygOverflow = 'paygOverflow',\n}\n\nexport const CIDv0 = new RegExp(/^Qm[1-9A-HJ-NP-Za-km-z]{44}/i);\nexport const ProjectFormSchema = yup.object({\n  [ProjectFormKey.deploymentId]: yup\n    .string()\n    .matches(CIDv0, `Invalid deployment id format`)\n    .defined(),\n});\n\nexport const initialProjectValues = {\n  [ProjectFormKey.deploymentId]: '',\n};\n\n// start indexing project\nexport const initialIndexingValues = (config: ProjectConfig) => ({\n  [ProjectFormKey.networkEndpoint]: config.networkEndpoint,\n  [ProjectFormKey.networkDictionary]: config.networkDictionary ?? '',\n  [ProjectFormKey.nodeVersion]: config.nodeVersion,\n  [ProjectFormKey.queryVersion]: config.queryVersion,\n  [ProjectFormKey.forceEnabled]: config.forceEnabled,\n});\n\nexport const StartIndexingSchema = yup.object({\n  [ProjectFormKey.networkEndpoint]: yup.string().defined(),\n  [ProjectFormKey.networkDictionary]: yup.string().optional(),\n  [ProjectFormKey.nodeVersion]: yup.string().defined(),\n  [ProjectFormKey.queryVersion]: yup.string().defined(),\n  [ProjectFormKey.forceEnabled]: yup.boolean().required(),\n});\n\nexport type IndexingEndpoint = yup.Asserts<typeof StartIndexingSchema>;\n\n// PAYG\nexport enum OpenPAYGFormKey {\n  paygPrice = 'paygPrice',\n  paygPeriod = 'paygPeriod',\n}\n\nexport const initalPAYGValues = (config: ProjectConfig) => ({\n  [OpenPAYGFormKey.paygPrice]: config.paygPrice,\n  [OpenPAYGFormKey.paygPeriod]: config.paygExpiration,\n});\n\nexport const ProjectPaygSchema = yup.object({\n  [OpenPAYGFormKey.paygPrice]: yup.string().defined(),\n  [OpenPAYGFormKey.paygPeriod]: yup.number().defined(),\n});\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nexport type Controller = {\n  id: string;\n  address: string;\n};\n\nexport enum ControllerAction {\n  configController = 'configController',\n  removeAccount = 'removeAccount',\n  withdraw = 'widthdraw',\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nexport enum AccountNotification {\n  MetadataUpated = 'MetadataUpated',\n  ControllerUpdated = 'ControllerUpdated',\n}\n\nexport enum ProjectNotification {\n  NotIndexing = 'NotIndexing',\n  Started = 'Started',\n  Indexing = 'Indexing',\n  Ready = 'Ready',\n  Terminated = 'Terminated',\n}\n\nexport enum TransactionNotification {\n  Loading = 'Loading',\n  Succeed = 'Succeed',\n  Failed = 'Failed',\n}\n\nexport const dismiss = (duration = 5000, onScreen = false) => ({\n  duration,\n  onScreen,\n});\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { AccountAction, ClickAction, FormSubmit } from 'pages/project-details/types';\nimport { initialMetadataValues, MetadataFormKey, MetadataFormSchema } from 'types/schemas';\n\nimport { AccountButtonItem, IndexerMetadata } from './types';\n\nconst buttonTitles = {\n  [AccountAction.unregister]: 'Unregister',\n  [AccountAction.updateMetaData]: 'Update Metadata',\n};\n\nexport const createButonItem = (\n  actionType: AccountAction,\n  onClick: (type?: AccountAction) => void\n): AccountButtonItem => {\n  return {\n    title: buttonTitles[actionType],\n    type: actionType,\n    onClick,\n  };\n};\n\nexport const AccountActionName = {\n  [AccountAction.updateMetaData]: 'Update Indexer Metadata',\n  [AccountAction.unregister]: 'Unregister Indexer Account',\n};\n\n// TODO: refactor refer to `/controllers/config.ts`\nexport const createUnregisterSteps = (onUnregister: ClickAction) => ({\n  [AccountAction.unregister]: [\n    {\n      index: 0,\n      title: 'Unregister from network',\n      desc: `Sorry to see the indexer unregister from the Subquery Network, please note that all the data in your coordinator service will be removed, and the staking token will deposit to your current account once transction processed`,\n      buttonTitle: 'Unregister',\n      onClick: onUnregister,\n    },\n  ],\n});\n\nexport const createUpdateMetadataSteps = (onUpdate: FormSubmit, metadata?: IndexerMetadata) => ({\n  [AccountAction.updateMetaData]: [\n    {\n      index: 0,\n      title: 'Update Indexer Metadata',\n      desc: `Input valid indexer name and proxy server endpoint to update the metadata, make sure the proxy endpoint is valid`,\n      buttonTitle: 'Update Metadata',\n      form: {\n        formValues: initialMetadataValues(metadata),\n        schema: MetadataFormSchema,\n        onFormSubmit: onUpdate,\n        items: [\n          {\n            formKey: MetadataFormKey.name,\n            title: 'Indexer Name',\n          },\n          {\n            formKey: MetadataFormKey.proxyEndpoint,\n            title: 'Proxy Server Endpoint',\n          },\n        ],\n      },\n    },\n  ],\n});\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nconst prompts = {\n  // project management\n  project: {\n    start: {\n      title: 'Indexing Project',\n      desc: 'Start indexing project will start the subquery node service indexing the project and start a query service at the same time. It takes around 1 mins to start the services, you can see the progress and related information after everything is ready.',\n    },\n    stop: {\n      title: 'Stop Indexing the Project',\n      desc: 'Stop indexing the project will terminate the node and query services, once the services stopped, the service status will change to terminated. You can restart indexing the project at any time.',\n    },\n    restart: {\n      title: 'Restart Project',\n      desc: 'Restart indexing project will start the previous subquery node service to index the project, and start a query service at the same time. You can see the progress and related information after everything is ready.',\n    },\n    remove: {\n      title: 'Are you sure to remove the project',\n      desc: 'Remove project will remove the project and service containers from coordinator service and database, the indexing data will be removed at the same time. You can add the project back at any time, but need to indexing from the beginning.',\n    },\n  },\n  // Indexing management on chain\n  announce: {\n    indexing: {\n      title: 'Update Status on Subquery Network',\n      desc: 'Send transaction to start indexing the project on contract, the controller account on coordinator service will start to update the status of indexing service on the contract once the transaction completed. The transaction processing time may take around 10s, it depends on the network and gas fee. You will see the processing status on the top of the page once you confim the transaction on the MetaMask.',\n    },\n    ready: {\n      title: 'Update Indexing To Ready',\n      desc: 'Send transaction to change indexing status to ready on contract, the explorer will display you query endpoint once the transaction completed. The transaction processing time may take around 10s, it depends on the network and gas fee. You will see the processing status on the top of the page once you confim the transaction on the MetaMask.',\n    },\n    notIndexing: {\n      title: 'Announce Not Indexing the Project',\n      desc: 'Send transaction to change indexing status to not indexing on contract, the project status will change to not indexing on the network. The transaction processing time may take around 10s, it depends on the network and gas fee. You will see the processing status on the top of the page once you confim the transaction on the MetaMask.',\n    },\n  },\n  // PAYG\n  payg: {\n    instruction: {\n      title: 'Flex Plan',\n      desc: [\n        'The Flex Plan is a fast and transactional payment plan. As an Indexer, you can advertise your Flex Plan price for each SubQuery project that you have announced you are ready to index.',\n        'Consumers can make as many requests to your projects as they wish and will be charged at a price per request. At the end of an Era, these tokens will be distributed to all participating indexers based on the Cobb-Douglas production function.',\n      ],\n      sub: 'Learn more ',\n      link: 'https://kepler.thechaindata.com/',\n      button: 'Enable Flex Plan',\n    },\n    open: {\n      title: 'Enable Flex Plan',\n      desc: 'This will open the function of pay-as-you-go, which supports micro-payment and instant requests. The query service will based on HTTP and p2p network at the same time. If consumer establish the service, the service will be in the form of state channel.',\n    },\n    channels: {\n      title: 'Flex Plans',\n      tabs: {\n        open: 'Ongoing',\n        expired: 'Expired',\n        closed: 'Closed',\n      },\n    },\n  },\n  // TODO: remove later\n  paygChangePrice: {\n    title: 'Change Price',\n    desc: 'This will modify the cost of per query, the price of the established state channel will remain unchanged, and the new state channel will use the new price',\n  },\n  paygClose: {\n    title: 'Close PAYG',\n    desc: 'This will turn off the function of pay-as-you-go, the already established state channel will not be affected, and the new state channel will not be established.',\n  },\n};\n\nexport default prompts;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Notification } from 'containers/notificationContext';\nimport {\n  initalPAYGValues,\n  initialIndexingValues,\n  OpenPAYGFormKey,\n  ProjectFormKey,\n  ProjectPaygSchema,\n  StartIndexingSchema,\n} from 'types/schemas';\nimport { dismiss, ProjectNotification } from 'utils/notification';\n\nimport prompts from './prompts';\nimport {\n  ClickAction,\n  FormSubmit,\n  PAYGAction,\n  PaygStatus,\n  ProjectAction,\n  ProjectConfig,\n  ProjectStatus,\n} from './types';\n\nconst { project, announce, payg } = prompts;\n\nexport type ButtonItem = {\n  title: string;\n  action: () => void;\n  color?: string;\n};\n\nconst createButtonItem = (title: string, action: () => void, color?: string): ButtonItem => ({\n  title,\n  action,\n  color,\n});\n\nexport const createNetworkButtonItems = (onButtonClick: (type: ProjectAction) => void) => ({\n  [ProjectStatus.NotIndexing]: [],\n  [ProjectStatus.Started]: [\n    createButtonItem('Announce Indexing', () => onButtonClick(ProjectAction.AnnounceIndexing)),\n  ],\n  [ProjectStatus.Indexing]: [\n    createButtonItem('Announce Ready', () => onButtonClick(ProjectAction.AnnounceReady)),\n  ],\n  [ProjectStatus.Ready]: [\n    createButtonItem('Announce NotIndexing', () =>\n      onButtonClick(ProjectAction.AnnounceNotIndexing)\n    ),\n  ],\n  [ProjectStatus.Terminated]: [\n    createButtonItem('Announce NotIndexing', () =>\n      onButtonClick(ProjectAction.AnnounceNotIndexing)\n    ),\n  ],\n});\n\nexport const createServiceButtonItems = (onButtonClick: (type: ProjectAction) => void) => ({\n  [ProjectStatus.NotIndexing]: [\n    createButtonItem('Start Indexing', () => onButtonClick(ProjectAction.StartIndexing)),\n    createButtonItem('Remove Project', () => onButtonClick(ProjectAction.RemoveProject)),\n  ],\n  [ProjectStatus.Started]: [\n    createButtonItem('Stop Project', () => onButtonClick(ProjectAction.StopProject)),\n  ],\n  [ProjectStatus.Indexing]: [\n    createButtonItem('Restart Indexing', () => onButtonClick(ProjectAction.RestartProject)),\n    createButtonItem('Stop Indexing', () => onButtonClick(ProjectAction.StopIndexing)),\n  ],\n  [ProjectStatus.Ready]: [\n    createButtonItem('Restart Indexing', () => onButtonClick(ProjectAction.RestartProject)),\n    createButtonItem('Stop Indexing', () => onButtonClick(ProjectAction.StopIndexing)),\n  ],\n  [ProjectStatus.Terminated]: [\n    createButtonItem('Restart Indexing', () => onButtonClick(ProjectAction.RestartProject)),\n    createButtonItem('Remove Project', () => onButtonClick(ProjectAction.RemoveProject)),\n  ],\n});\n\nexport const createPaygButtonItems = (onButtonClick: (type: PAYGAction) => void) => ({\n  [PaygStatus.Open]: [\n    createButtonItem('Change price', () => onButtonClick(PAYGAction.PaygChangePrice)),\n    createButtonItem('Close PAYG', () => onButtonClick(PAYGAction.PaygClose)),\n  ],\n  [PaygStatus.Close]: [createButtonItem('Open PAYG', () => onButtonClick(PAYGAction.PaygOpen))],\n});\n\nexport const PAYGActionName = {\n  [PAYGAction.PaygOpen]: 'Open PAYG',\n  [PAYGAction.PaygChangePrice]: 'Change Price',\n  [PAYGAction.PaygClose]: 'Close PAYG',\n};\n\nexport const ProjectActionName = {\n  [ProjectAction.StartIndexing]: 'Start Indexing Project',\n  [ProjectAction.RestartProject]: 'Restart Indexing Project',\n  [ProjectAction.AnnounceIndexing]: 'Announce Indexing Project',\n  [ProjectAction.AnnounceReady]: 'Publish Indexing to Ready',\n  [ProjectAction.StopProject]: 'Stop Project',\n  [ProjectAction.RemoveProject]: 'Remove Project',\n  [ProjectAction.AnnounceNotIndexing]: 'Announce Not Indexing Project',\n  [ProjectAction.StopIndexing]: 'Stop Indexing',\n};\n\nexport type ImageVersions = {\n  node: string[];\n  query: string[];\n};\n\nconst startProjectForms = (\n  config: ProjectConfig,\n  versions: ImageVersions,\n  onFormSubmit: FormSubmit\n) => ({\n  formValues: initialIndexingValues(config),\n  schema: StartIndexingSchema,\n  onFormSubmit,\n  items: [\n    {\n      formKey: ProjectFormKey.networkEndpoint,\n      title: 'Indexing Network Endpiont',\n      placeholder: 'wss://polkadot.api.onfinality.io/public-ws',\n    },\n    {\n      formKey: ProjectFormKey.networkDictionary,\n      title: 'Network Dictionary Endpiont',\n      placeholder: 'https://api.subquery.network/sq/subquery/dictionary-polkadot',\n    },\n    {\n      formKey: ProjectFormKey.nodeVersion,\n      title: 'Node Image Version',\n      options: versions.node,\n    },\n    {\n      formKey: ProjectFormKey.queryVersion,\n      title: 'Query Image Version',\n      options: versions.query,\n    },\n    {\n      formKey: ProjectFormKey.forceEnabled,\n      title: 'Enable Force Start',\n      options: ['true', 'false'],\n    },\n  ],\n});\n\nexport const createStartIndexingSteps = (\n  config: ProjectConfig,\n  versions: ImageVersions,\n  onStartProject: FormSubmit\n) => ({\n  [ProjectAction.StartIndexing]: [\n    {\n      index: 0,\n      title: project.start.title,\n      desc: project.start.desc,\n      buttonTitle: 'Confirm',\n      form: startProjectForms(config, versions, onStartProject),\n      onClick: onStartProject,\n    },\n  ],\n});\n\nexport const createRestartProjectSteps = (\n  config: ProjectConfig,\n  versions: ImageVersions,\n  onStartProject: FormSubmit\n) => ({\n  [ProjectAction.RestartProject]: [\n    {\n      index: 0,\n      title: project.restart.title,\n      desc: project.restart.desc,\n      buttonTitle: 'Confirm',\n      form: startProjectForms(config, versions, onStartProject),\n    },\n  ],\n});\n\nexport const createRemoveProjectSteps = (onRemoveProject: ClickAction) => ({\n  [ProjectAction.RemoveProject]: [\n    {\n      index: 0,\n      title: project.remove.title,\n      desc: project.remove.desc,\n      buttonTitle: 'Confirm',\n      onClick: onRemoveProject,\n    },\n  ],\n});\n\nexport const createAnnounceIndexingSteps = (onSendTransaction: ClickAction) => ({\n  [ProjectAction.AnnounceIndexing]: [\n    {\n      index: 0,\n      title: announce.indexing.title,\n      desc: announce.indexing.desc,\n      buttonTitle: 'Send Transction',\n      onClick: onSendTransaction,\n    },\n  ],\n});\n\nexport const createReadyIndexingSteps = (onSendTransaction: ClickAction) => ({\n  [ProjectAction.AnnounceReady]: [\n    {\n      index: 0,\n      title: announce.ready.title,\n      desc: announce.ready.desc,\n      buttonTitle: 'Send Transction',\n      onClick: onSendTransaction,\n    },\n  ],\n});\n\nexport const createNotIndexingSteps = (onSendTransaction: ClickAction) => ({\n  [ProjectAction.AnnounceNotIndexing]: [\n    {\n      index: 0,\n      title: announce.notIndexing.title,\n      desc: announce.notIndexing.desc,\n      buttonTitle: 'Send Transction',\n      onClick: onSendTransaction,\n    },\n  ],\n});\n\nexport const createStopProjectSteps = (onStopProject: ClickAction) => ({\n  [ProjectAction.StopProject]: [\n    {\n      index: 0,\n      title: project.stop.title,\n      desc: project.stop.desc,\n      buttonTitle: 'Confirm',\n      onClick: onStopProject,\n    },\n  ],\n});\n\nexport const createStopIndexingSteps = (onStopProject: ClickAction) => ({\n  [ProjectAction.StopIndexing]: [\n    {\n      index: 0,\n      title: project.stop.title,\n      desc: project.stop.desc,\n      buttonTitle: 'Confirm',\n      onClick: onStopProject,\n    },\n  ],\n});\n\nconst setPaygPriceForms = (config: ProjectConfig, onFormSubmit: FormSubmit) => ({\n  formValues: initalPAYGValues(config),\n  schema: ProjectPaygSchema,\n  onFormSubmit,\n  items: [\n    {\n      formKey: OpenPAYGFormKey.paygPrice,\n      title: 'Advertise a price per 1,000 requests (SQT)',\n      placeholder: '300',\n    },\n    {\n      formKey: OpenPAYGFormKey.paygPeriod,\n      title: 'Validity Period (days)',\n      placeholder: 'Set a validity period',\n    },\n  ],\n});\n\nexport const createPaygOpenSteps = (config: ProjectConfig, onPaygOpen: FormSubmit) => [\n  {\n    index: 0,\n    title: payg.open.title,\n    desc: payg.open.desc,\n    buttonTitle: 'Confirm',\n    form: setPaygPriceForms(config, onPaygOpen),\n  },\n];\n\nexport const createPaygCloseSteps = (onPaygClose: ClickAction) => ({\n  [PAYGAction.PaygClose]: [\n    {\n      index: 0,\n      title: prompts.paygClose.title,\n      desc: prompts.paygClose.desc,\n      buttonTitle: 'Confirm',\n      onClick: onPaygClose,\n    },\n  ],\n});\n\n// inconsistent status config\nexport const aletMessages = {\n  [ProjectStatus.Started]: {\n    title: 'Ready to indexing the project on Suquery Network',\n    description:\n      'The current project has been alreay started, check the progress and logs make sure indexing is alright. Try press the Announce Indexing button to annouce indexing this project on Subquery Network. You can also try to restart indexing if something wrong happens.',\n  },\n  [ProjectStatus.Terminated]: {\n    title: 'Status Inconsistent',\n    description:\n      'The current indexing service for this project is terminated but the indexing service status on Subquery Network is still INDEXING, we encourage you to press the Announce NotIndexing button to change the online status to NOTINDEXING as well',\n  },\n};\n\n// notification config\nexport const notifications: Record<string, Notification> = {\n  [ProjectNotification.Started]: {\n    type: 'success',\n    title: 'Project is starting',\n    message: `Starting project may take around 5 seconds`,\n    dismiss: dismiss(),\n  },\n  [ProjectNotification.Terminated]: {\n    type: 'success',\n    title: 'Project Terminated',\n    message: `The project has been stopped, you can restart or update the status on network to not indexing`,\n    dismiss: dismiss(),\n  },\n};\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { ContractTransaction } from 'ethers';\n\nimport { Notification, notificationContext } from 'containers/notificationContext';\n\nimport { dismiss } from './notification';\n\nconst formatHash = (hash: string) => {\n  const len = hash.length;\n  return `${hash.substring(0, 15)}...${hash.substring(len - 16, len - 1)}`;\n};\n\nexport function txLoadingNotification(title: string, txHash: string): Notification {\n  return {\n    type: 'default',\n    title,\n    message: `Processing transaction may take around 20s: ${formatHash(txHash)}`,\n    dismiss: dismiss(50000, true),\n  };\n}\n\nexport function txSuccessNotification(name: string): Notification {\n  return {\n    type: 'success',\n    title: 'Transaction Succeed',\n    message: `${name.toLowerCase()} completed`,\n    dismiss: dismiss(),\n  };\n}\n\nexport function txErrorNotification(message: string): Notification {\n  return {\n    type: 'danger',\n    title: 'Transaction Failed',\n    message: `${message}`,\n    dismiss: dismiss(),\n  };\n}\n\nexport async function handleTransaction(\n  name: string,\n  tx: ContractTransaction,\n  notificationContext: notificationContext,\n  onSuccess?: () => void,\n  onError?: () => void\n) {\n  const { dispatchNotification, removeNotification } = notificationContext;\n  const loadingId = dispatchNotification(txLoadingNotification(name, tx.hash));\n\n  try {\n    const receipt = await tx.wait(1);\n    if (!receipt.status) {\n      onError && onError();\n      dispatchNotification(txErrorNotification(tx.hash));\n    } else {\n      onSuccess && onSuccess();\n      dispatchNotification(txSuccessNotification(name));\n    }\n    removeNotification(loadingId);\n  } catch (e) {\n    console.error('Transaction Failed:', e);\n    // @ts-ignore\n    dispatchNotification(txErrorNotification(e.message));\n  }\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useMemo } from 'react';\n\nimport { useContractSDK } from 'containers/contractSdk';\nimport { useNotification } from 'containers/notificationContext';\nimport { AccountActionName } from 'pages/account/config';\nimport { ControllerAction } from 'pages/controllers/types';\nimport { ProjectActionName } from 'pages/project-details/config';\nimport { AccountAction, ProjectAction, TransactionType } from 'pages/project-details/types';\nimport {\n  configController,\n  readyIndexing,\n  startIndexing,\n  stopIndexing,\n  unRegister,\n  updateMetadata,\n} from 'utils/indexerActions';\nimport { handleTransaction } from 'utils/transactions';\n\nimport { useSigner } from './web3Hook';\n\ntype Callback = (e?: any) => any | Promise<any> | undefined;\ntype AccountTxType = AccountAction | ControllerAction.configController;\nconst ActionNames = {\n  ...AccountActionName,\n  [ControllerAction.configController]: 'Update Controller',\n};\n\nexport const useAccountAction = () => {\n  const signer = useSigner();\n  const sdk = useContractSDK();\n  const notificationContext = useNotification();\n\n  const accountTransactions = useCallback(\n    (param: string) => ({\n      [AccountAction.updateMetaData]: () => updateMetadata(sdk, signer, param),\n      [AccountAction.unregister]: () => unRegister(sdk, signer),\n      [ControllerAction.configController]: () => configController(sdk, signer, param),\n    }),\n    [sdk, signer]\n  );\n\n  return useCallback(\n    async (type: AccountTxType, param: string, onProcess: Callback, onSuccess?: Callback) => {\n      try {\n        const sendTx = accountTransactions(param)[type];\n        const actionName = ActionNames[type];\n        const tx = await sendTx();\n        onProcess();\n        await handleTransaction(actionName, tx, notificationContext, onSuccess);\n      } catch (e) {\n        onProcess(e);\n      }\n    },\n    [accountTransactions]\n  );\n};\n\nexport const useIndexingAction = (id: string) => {\n  const signer = useSigner();\n  const sdk = useContractSDK();\n  const notificationContext = useNotification();\n\n  const indexingTransactions = useMemo(\n    () => ({\n      [ProjectAction.AnnounceIndexing]: () => startIndexing(sdk, signer, id),\n      [ProjectAction.AnnounceReady]: () => readyIndexing(sdk, signer, id),\n      [ProjectAction.AnnounceNotIndexing]: () => stopIndexing(sdk, signer, id),\n    }),\n    [sdk, signer, id]\n  );\n\n  return useCallback(\n    async (type: TransactionType, onProcess: Callback, onSuccess?: Callback) => {\n      try {\n        const sendTx = indexingTransactions[type];\n        const actionName = ProjectActionName[type];\n        const tx = await sendTx();\n        onProcess();\n        await handleTransaction(actionName, tx, notificationContext, onSuccess);\n      } catch (e) {\n        onProcess(e);\n      }\n    },\n    [indexingTransactions]\n  );\n};\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Notification } from 'containers/notificationContext';\nimport { dismiss } from 'utils/notification';\n\nconst prompts = {\n  indexer: {\n    title: 'Indexer Account',\n    name: 'Subquery Master',\n    buttonTitle: 'Unregister',\n    desc: '',\n  },\n  controller: {\n    title: 'Controller Account',\n    name: 'Controller',\n    buttonTitle: 'Update Controller',\n    desc: '',\n  },\n  emptyController: {\n    title: 'Controller Account',\n    name: '',\n    buttonTitle: 'Config Controller',\n    desc: 'Controller account is a delegator of the indexer, need to config a controller account before you start the journey to indexing the projects, controller account will config in you coordinator service and send the status of the indexing services to the contract autimatically',\n  },\n};\n\nexport const notifications = {\n  controller: {\n    type: 'danger',\n    title: 'Insufficient Balance',\n    message:\n      'The controller account has insufficient assets to pay the transaction fee. Please top up your controller account ASAP.',\n    dismiss: dismiss(50000, false),\n  } as Notification,\n};\n\nexport default prompts;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n// @ts-nocheck\nimport { useCallback, useMemo } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { Address, Dropdown } from '@subql/react-ui';\nimport buttonStyles from '@subql/react-ui/dist/components/Button/Button.module.css';\nimport styled from 'styled-components';\n\nimport { Separator } from 'components/primary';\nimport { useController, useIsIndexer, useTokenBalance } from 'hooks/indexerHook';\nimport { useIsMetaMask, useWeb3 } from 'hooks/web3Hook';\nimport SubqueryIcon from 'resources/subquery.svg';\n\nimport { Container, LeftContainer, RightContainer } from './styles';\n\nenum TabbarItem {\n  account = 'Account',\n  network = 'Network',\n  projects = 'Projects',\n}\n\nconst TabBar = styled(NavLink)`\n  margin-left: 50px;\n  margin-top: 20px;\n  color: #1a202c;\n  text-decoration: none;\n  font-family: Futura;\n  font-size: 16px;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Header = () => {\n  const { account, deactivate } = useWeb3();\n  const { pathname } = useLocation();\n  const isMetaMask = useIsMetaMask();\n  const isIndexer = useIsIndexer();\n  const controller = useController(account);\n  const { tokenBalance } = useTokenBalance(account, pathname);\n\n  const activeStyle = { fontWeight: 500, color: '#4388dd' };\n  const dropdownStyle = { border: 'unset !important', padding: 15, width: 100 };\n\n  const createItem = (key: string, label: string) => ({ key, label });\n\n  const onSelected = (key: string) => {\n    if (key === 'disconnect') {\n      deactivate();\n    }\n  };\n\n  const isRootPage = useMemo(() => pathname === '/', [pathname]);\n  const accountDetails = useMemo(\n    () => [\n      createItem('balance', `Token: ${tokenBalance} SQT`),\n      createItem('disconnect', 'Disconnect'),\n    ],\n    [tokenBalance]\n  );\n\n  const renderTabbars = useCallback(\n    () => (\n      <div>\n        <TabBar to=\"/account\" activeStyle={activeStyle}>\n          {TabbarItem.account}\n        </TabBar>\n        <TabBar to=\"/network\" activeStyle={activeStyle}>\n          {TabbarItem.network}\n        </TabBar>\n        {controller && (\n          <TabBar to=\"/projects\" activeStyle={activeStyle}>\n            {TabbarItem.projects}\n          </TabBar>\n        )}\n      </div>\n    ),\n    [controller]\n  );\n\n  const renderAddress = () =>\n    isRootPage ? (\n      <Address address={account} size=\"large\" />\n    ) : (\n      <Dropdown\n        items={accountDetails}\n        onSelected={onSelected}\n        dropdownClass={{ ...buttonStyles.secondary, ...dropdownStyle }}\n      >\n        <Address address={account} size=\"large\" />\n      </Dropdown>\n    );\n\n  return (\n    <Container>\n      <LeftContainer>\n        <img src={SubqueryIcon} alt=\"subquery\" />\n        {!isRootPage && isIndexer && renderTabbars()}\n      </LeftContainer>\n      {isMetaMask && (\n        <RightContainer>\n          <Separator width={30} color=\"#f6f9fc\" />\n          {account && renderAddress()}\n        </RightContainer>\n      )}\n    </Container>\n  );\n};\n\nexport default Header;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0px 50px;\n  min-height: 630px;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { useMutation } from '@apollo/client';\nimport { isUndefined } from 'lodash';\n\nimport AccountCard from 'components/accountCard';\nimport ModalView from 'components/modalView';\nimport { useCoordinatorIndexer } from 'containers/coordinatorIndexer';\nimport { useLoading } from 'containers/loadingContext';\nimport { useNotification } from 'containers/notificationContext';\nimport {\n  useBalance,\n  useController,\n  useIndexerMetadata,\n  useIsController,\n  useIsIndexer,\n} from 'hooks/indexerHook';\nimport { useTokenSymbol } from 'hooks/network';\nimport { useAccountAction } from 'hooks/transactionHook';\nimport { useIsMetaMask, useWeb3 } from 'hooks/web3Hook';\nimport { AccountAction } from 'pages/project-details/types';\nimport { MetadataFormKey } from 'types/schemas';\nimport { balanceSufficient } from 'utils/account';\nimport { createIndexerMetadata } from 'utils/ipfs';\nimport { REMOVE_ACCOUNTS } from 'utils/queries';\n\nimport {\n  AccountActionName,\n  createButonItem,\n  createUnregisterSteps,\n  createUpdateMetadataSteps,\n} from './config';\nimport prompts, { notifications } from './prompts';\nimport { Container } from './styles';\nimport { AccountButtonItem } from './types';\n\nconst Account = () => {\n  const [visible, setVisible] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [actionType, setActionType] = useState<AccountAction>();\n\n  const { account } = useWeb3();\n  const isIndexer = useIsIndexer();\n  const { indexer } = useCoordinatorIndexer();\n  const { metadata, fetchMetadata } = useIndexerMetadata();\n  const accountAction = useAccountAction();\n  const isMetaMask = useIsMetaMask();\n  const isController = useIsController(account);\n  const { controller } = useController();\n  const controllerBalance = useBalance(controller);\n  const indexerBalance = useBalance(account);\n  const { dispatchNotification } = useNotification();\n  const { setPageLoading } = useLoading();\n  const history = useHistory();\n  const tokenSymbol = useTokenSymbol();\n\n  const [removeAccounts] = useMutation(REMOVE_ACCOUNTS);\n\n  prompts.controller.desc = `Balance: ${controllerBalance} ${tokenSymbol}`;\n  const controllerItem = !controller ? prompts.emptyController : prompts.controller;\n  const indexerItem = prompts.indexer;\n\n  useEffect(() => {\n    setPageLoading(isUndefined(account) || isUndefined(indexer));\n  }, [account, indexer]);\n\n  useEffect(() => {\n    if (controllerBalance && !balanceSufficient(controllerBalance)) {\n      dispatchNotification(notifications.controller);\n    }\n  }, [controllerBalance]);\n\n  const onButtonPress = (type?: AccountAction) => {\n    setActionType(type);\n    setVisible(true);\n  };\n\n  const onModalClose = () => {\n    setVisible(false);\n    setTimeout(() => setCurrentStep(0), 1000);\n  };\n\n  const indexerName = useMemo(() => metadata?.name ?? ' ', [metadata]);\n\n  const indexerButtons = [\n    createButonItem(AccountAction.updateMetaData, onButtonPress),\n    createButonItem(AccountAction.unregister, onButtonPress),\n  ];\n\n  const controllerButtons = [\n    {\n      title: 'Manange Controllers',\n      onClick: () => history.push('/controller-management'),\n    } as AccountButtonItem,\n  ];\n\n  const updateMetadataStep = useMemo(\n    () =>\n      createUpdateMetadataSteps(async (values, formHelper) => {\n        formHelper.setStatus({ loading: true });\n        const name = values[MetadataFormKey.name];\n        const proxyEndpoint = values[MetadataFormKey.proxyEndpoint];\n        const metadata = await createIndexerMetadata(name, proxyEndpoint);\n        await accountAction(AccountAction.updateMetaData, metadata, onModalClose, fetchMetadata);\n      }, metadata),\n    [metadata]\n  );\n\n  const unregisterCompleted = async () => {\n    await removeAccounts();\n    history.replace('/register');\n  };\n\n  const unregisterStep = createUnregisterSteps(() =>\n    accountAction(AccountAction.unregister, '', onModalClose, unregisterCompleted)\n  );\n\n  const steps = useMemo(() => ({ ...unregisterStep, ...updateMetadataStep }), [metadata]);\n\n  return (\n    <Container>\n      {isMetaMask && isIndexer && (\n        <AccountCard\n          key={account}\n          title={indexerItem.title}\n          name={indexerName}\n          buttons={indexerButtons}\n          account={account ?? ''}\n          desc={`Balance: ${indexerBalance} ${tokenSymbol}`}\n        />\n      )}\n      {(isIndexer || isController) && (\n        <AccountCard\n          key={account}\n          title={controllerItem.title}\n          name={controllerItem.name}\n          account={controller}\n          buttons={controllerButtons}\n          desc={controllerItem?.desc}\n        />\n      )}\n      {actionType && (\n        <ModalView\n          visible={visible}\n          title={AccountActionName[actionType]}\n          onClose={onModalClose}\n          steps={steps[actionType]}\n          currentStep={currentStep}\n          type={actionType}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default Account;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nexport function balanceSufficient(balance: string): boolean {\n  return parseFloat(balance) > parseFloat('0.2');\n}\n\nexport function openAccountExporer(account: string) {\n  const url = `https://mumbai.polygonscan.com/address/${account}`;\n  window.open(url, '_blank', 'noopener,noreferrer');\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { Button, Text } from 'components/primary';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 18px;\n  margin-bottom: 50px;\n  padding: 60px;\n  min-width: 800px;\n  max-width: 50%;\n  min-height: 450px;\n`;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\ntype Content = {\n  title: string;\n  desc: string;\n  buttonTitle: string;\n};\n\ntype Props = {\n  item: Content;\n  onClick: () => void;\n  link?: JSX.Element;\n  loading?: boolean;\n};\n\nconst IntroductionView: FC<Props> = ({ item, onClick, loading, link }) => {\n  const { title, desc, buttonTitle } = item;\n  return (\n    <Container>\n      <TextContainer>\n        <Text alignCenter size={35} fw=\"bold\">\n          {title}\n        </Text>\n        <Text alignCenter mt={35}>\n          {desc}\n          {link}\n        </Text>\n      </TextContainer>\n      <Button mt={80} type=\"primary\" title={buttonTitle} loading={loading} onClick={onClick} />\n    </Container>\n  );\n};\n\nexport default IntroductionView;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { NOTIFICATION_TYPE } from 'react-notifications-component';\n\nexport const prompts = {\n  header: {\n    mainTitle: 'Manage Controller Accounts',\n    title: 'Create and manage your controller accounts here',\n    subTitle:\n      'You can Configure the account you wish to set as the controller on the coordinator services',\n    button: 'Create an Account',\n  },\n  intro: {\n    title: 'Manage Controller Accounts',\n    desc: 'You can create as many accounts as you want. You can then configure the one you wish to set as the controller on coordinator services.',\n    buttonTitle: 'Create an Account',\n  },\n  action: {\n    configController: {\n      title: 'Activate your controller on contract',\n      desc: 'Press the button to send the transaction to network and update the new controller account on contract. The transaction processing time may take around 10s, it depends on the network status and gas fee. You will see the processing status on the top of the page once you confim the transaction on the MetaMask.',\n      buttonTitle: 'Send Transction',\n    },\n    removeAccount: {\n      title: 'Remove this account',\n      desc: 'This action will remove the account from your coordinator service. You will not be able to find this account again once you confirm removal. Please make sure there has no assets in this account. Are you sure you want to remove it?',\n      buttonTitle: 'Confirm Removal',\n    },\n    withdraw: {\n      title: 'Withdraw from controller account',\n      desc: 'You are about to withdraw the full balance from this account to your index account. The amount you receive will be the full balance minus the transaction fee. Transaction fee is determined by the network.',\n      buttonTitle: 'Confirm Withdrawl',\n    },\n  },\n  controllerItem: {\n    active: 'Actived',\n    activeBtn: 'Active',\n    widthdrawBtn: 'Withdraw',\n    removeBtn: 'Remove',\n  },\n  notification: {\n    widthdraw: {\n      loading: {\n        type: 'default' as NOTIFICATION_TYPE,\n        title: 'Controller withdrawl',\n        message: (c: string) => `Withdraw all the asset for controller: ${c}  may take 20s`,\n      },\n      success: {\n        type: 'success' as NOTIFICATION_TYPE,\n        title: 'Controller withdrawl Succeed',\n        message: (c: string) => `Withdraw controller: ${c} assets successfully`,\n      },\n      failed: {\n        type: 'danger' as NOTIFICATION_TYPE,\n        title: 'Controller withdrawl Failed',\n        message: (c: string) => `Withdraw controller: ${c} assets failed`,\n      },\n    },\n  },\n};\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Notification } from 'containers/notificationContext';\nimport { ClickAction } from 'pages/project-details/types';\nimport { dismiss } from 'utils/notification';\n\nimport { prompts } from './prompts';\nimport { ControllerAction } from './types';\n\nconst { action, notification } = prompts;\n\n// TODO: export to global\ntype ModalInfo = {\n  title: string;\n  desc: string;\n  buttonTitle: string;\n};\n\nconst createModalStep = (info: ModalInfo, action: ClickAction) => ({\n  index: 0,\n  title: info.title,\n  desc: info.desc,\n  buttonTitle: info.buttonTitle,\n  onClick: action,\n});\n\nexport const createConfigControllerSteps = (onSendTxConfigController: ClickAction) => ({\n  [ControllerAction.configController]: [\n    createModalStep(action.configController, onSendTxConfigController),\n  ],\n});\n\nexport const createRemoveAccountSteps = (removeAccount: ClickAction) => ({\n  [ControllerAction.removeAccount]: [createModalStep(action.removeAccount, removeAccount)],\n});\n\nexport const createWithdrawSteps = (withdraw: ClickAction) => ({\n  [ControllerAction.withdraw]: [createModalStep(action.withdraw, withdraw)],\n});\n\n// notifications\nexport const withdrawControllerLoading = (controller = ''): Notification => {\n  const { type, title, message } = notification.widthdraw.loading;\n  return {\n    type,\n    title,\n    message: message(controller),\n    dismiss: dismiss(30000, true),\n  };\n};\n\nexport const withdrawControllerSucceed = (controller = ''): Notification => {\n  const { type, title, message } = notification.widthdraw.success;\n  return {\n    type,\n    title,\n    message: message(controller),\n    dismiss: dismiss(),\n  };\n};\n\nexport const withdrawControllerFailed = (controller = ''): Notification => {\n  const { type, title, message } = notification.widthdraw.failed;\n  return {\n    type,\n    title,\n    message: message(controller),\n    dismiss: dismiss(),\n  };\n};\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Spinner } from '@subql/components';\n\n// TODO: remove this and use hooks from subql-hooks lib\nexport const asyncRender = (ready: boolean, component: any) => {\n  return ready ? component : <Spinner />;\n};\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\n// controller management page\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  min-width: 600px;\n  padding: 30px 100px;\n  padding-bottom: 80px;\n  overflow-y: scroll;\n  min-width: 1200px;\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ContentContainer = styled.div<{ mt?: number }>`\n  display: flex;\n  flex-direction: column;\n  margin-top: ${({ mt }) => mt ?? 0}px;\n`;\n\nexport const IntroContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: flex-start;\n  margin-top: 80px;\n`;\n\n// controller items styles\nexport const ItemContainer = styled.div`\n  display: flex;\n  flex: 1;\n  width: 100%;\n  min-width: 600px;\n  min-height: 90px;\n  margin: 10px 0px;\n  padding: 10px 20px;\n  border-color: gray;\n  border-radius: 10px;\n  background-color: white;\n  align-items: center;\n  :hover {\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    cursor: pointer;\n  }\n`;\n\nexport const ItemContentContainer = styled.div`\n  display: flex;\n  flex: 6;\n  align-items: center;\n`;\n\nexport const AccountContainer = styled.div`\n  display: flex;\n  flex: 4;\n  flex-direction: column;\n  margin: 0px 20px;\n`;\n\nexport const Balance = styled.div`\n  display: flex;\n  flex: 2;\n`;\n\nexport const Status = styled.div`\n  display: flex;\n  flex: 2;\n  align-items: center;\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  flex: 2;\n  justify-content: flex-end;\n  min-width: 300px;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC } from 'react';\nimport { Tag } from '@subql/react-ui';\nimport { isUndefined } from 'lodash';\n\nimport { asyncRender } from 'components/asyncRender';\nimport Avatar from 'components/avatar';\nimport { Button, Text } from 'components/primary';\nimport { useBalance } from 'hooks/indexerHook';\nimport { openAccountExporer } from 'utils/account';\n\nimport { useTokenSymbol } from '../../hooks/network';\nimport { prompts } from './prompts';\nimport {\n  AccountContainer,\n  Balance,\n  Buttons,\n  ItemContainer,\n  ItemContentContainer,\n  Status,\n} from './styles';\nimport { Controller } from './types';\n\ntype Props = {\n  name: string;\n  controller: string | undefined;\n  onConfigController: (controller: Controller) => void;\n  onRemoveController: (controller: Controller) => void;\n  onWithdraw: (controller: Controller) => void;\n} & Controller;\n\nconst ControllerItem: FC<Props> = ({\n  id,\n  name,\n  controller,\n  address,\n  onConfigController,\n  onRemoveController,\n  onWithdraw,\n}) => {\n  const { active, activeBtn, widthdrawBtn, removeBtn } = prompts.controllerItem;\n  const isActived = address === controller?.toLocaleLowerCase();\n  const balance = useBalance(address);\n  const emptyBalance = Number(balance) === 0;\n  const account = { id, address };\n  const tokenSymbol = useTokenSymbol();\n\n  return (\n    <ItemContainer>\n      <ItemContentContainer onClick={() => openAccountExporer(address)}>\n        <Avatar address={address} size={70} />\n        <AccountContainer>\n          <Text size={18} fw=\"600\">\n            {name}\n          </Text>\n          <Text size={15} color=\"gray\" mt={5}>\n            {address}\n          </Text>\n        </AccountContainer>\n        <Balance>{asyncRender(!!balance, <Text>{`${balance} ${tokenSymbol}`}</Text>)}</Balance>\n        <Status>{isActived && <Tag text={active} state=\"success\" />}</Status>\n      </ItemContentContainer>\n      {asyncRender(\n        !isUndefined(controller) && !isUndefined(balance),\n        <Buttons>\n          {!isActived && <Button title={activeBtn} onClick={() => onConfigController(account)} />}\n          {!isActived && emptyBalance && (\n            <Button ml={10} title={removeBtn} onClick={() => onRemoveController(account)} />\n          )}\n          {!emptyBalance && (\n            <Button ml={10} title={widthdrawBtn} onClick={() => onWithdraw(account)} />\n          )}\n        </Buttons>\n      )}\n    </ItemContainer>\n  );\n};\n\nexport default ControllerItem;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { isEmpty, isUndefined } from 'lodash';\n\nimport IntroductionView from 'components/introductionView';\nimport ModalView from 'components/modalView';\nimport { Button, Text } from 'components/primary';\nimport { useLoading } from 'containers/loadingContext';\nimport { useNotification } from 'containers/notificationContext';\nimport { useController } from 'hooks/indexerHook';\nimport { useAccountAction } from 'hooks/transactionHook';\nimport {\n  ADD_CONTROLLER,\n  GET_CONTROLLERS,\n  REMOVE_CONTROLLER,\n  WITHDRAW_CONTROLLER,\n} from 'utils/queries';\n\nimport {\n  createConfigControllerSteps,\n  createRemoveAccountSteps,\n  createWithdrawSteps,\n  withdrawControllerFailed,\n  withdrawControllerLoading,\n  withdrawControllerSucceed,\n} from './config';\nimport ControllerItem from './controllerItem';\nimport { prompts } from './prompts';\nimport { Container, ContentContainer, HeaderContainer, IntroContainer } from './styles';\nimport { Controller, ControllerAction } from './types';\n\nconst controllersPage = () => {\n  const { header, intro } = prompts;\n  const [actionType, setActionType] = useState<ControllerAction>();\n  const [account, setAccount] = useState<Controller>();\n  const [visible, setVisible] = useState(false);\n\n  const { dispatchNotification, removeNotification } = useNotification();\n  const { controller: currentController, getController } = useController();\n  const accountAction = useAccountAction();\n  const { setPageLoading } = useLoading();\n\n  const [removeController] = useMutation(REMOVE_CONTROLLER);\n  const [createController, { loading: createControllerRequesting }] = useMutation(ADD_CONTROLLER);\n  const [withdrawController] = useLazyQuery(WITHDRAW_CONTROLLER);\n  const [getControllers, { data: controllerData }] =\n    useLazyQuery<{ controllers: Controller[] }>(GET_CONTROLLERS);\n\n  useEffect(() => {\n    setPageLoading(isUndefined(controllerData));\n    getControllers();\n  }, [controllerData]);\n\n  const isActivedController = (address: string): boolean => {\n    return address.toLowerCase() === currentController?.toLowerCase();\n  };\n\n  const controllers = useMemo(() => {\n    if (!controllerData || isEmpty(controllerData?.controllers)) return [];\n\n    const { controllers: rawControllers } = controllerData;\n    const activeAccount = rawControllers.find(({ address }) => isActivedController(address));\n    if (!activeAccount) return rawControllers;\n\n    return [\n      activeAccount,\n      ...rawControllers.filter(({ address }) => !isActivedController(address)),\n    ];\n  }, [controllerData, currentController]);\n\n  const createControllerAction = async () => {\n    await createController();\n    await getControllers();\n  };\n\n  const onButtonPress = (type: ControllerAction) => (a: Controller) => {\n    setAccount(a);\n    setActionType(type);\n    setVisible(true);\n  };\n\n  const onModalClose = () => setVisible(false);\n\n  const removeAccountSteps = createRemoveAccountSteps(async () => {\n    await removeController({ variables: { id: account?.id } });\n    await getControllers();\n    onModalClose();\n  });\n\n  const withdrawSteps = createWithdrawSteps(async () => {\n    onModalClose();\n    const address = account?.address;\n    const notificationId = dispatchNotification(withdrawControllerLoading(address));\n\n    const res = await withdrawController({ variables: { id: account?.id } });\n    removeNotification(notificationId);\n    if (res.data.withrawController) {\n      dispatchNotification(withdrawControllerSucceed(address));\n    } else {\n      dispatchNotification(withdrawControllerFailed(address));\n    }\n    await getControllers();\n  });\n\n  const configControllerSteps = createConfigControllerSteps(() =>\n    accountAction(\n      ControllerAction.configController,\n      account?.address ?? '',\n      onModalClose,\n      getController\n    )\n  );\n\n  const steps = { ...configControllerSteps, ...withdrawSteps, ...removeAccountSteps };\n\n  return (\n    <Container>\n      {!isEmpty(controllers) && (\n        <HeaderContainer>\n          <ContentContainer>\n            <Text size={30} fw=\"bold\" mr={20}>\n              {header.mainTitle}\n            </Text>\n            <Text color=\"gray\" mt={5}>\n              {header.title}\n            </Text>\n            <Text color=\"gray\">{header.subTitle}</Text>\n          </ContentContainer>\n          <Button\n            title={header.button}\n            type=\"primary\"\n            loading={createControllerRequesting}\n            onClick={createControllerAction}\n          />\n        </HeaderContainer>\n      )}\n      {!isEmpty(controllers) && (\n        <ContentContainer mt={50}>\n          {!!controllers &&\n            controllers.map((item, index) => (\n              <ControllerItem\n                key={item.id}\n                controller={currentController}\n                name={`Account ${index + 1}`}\n                onConfigController={onButtonPress(ControllerAction.configController)}\n                onRemoveController={onButtonPress(ControllerAction.removeAccount)}\n                onWithdraw={onButtonPress(ControllerAction.withdraw)}\n                {...item}\n              />\n            ))}\n        </ContentContainer>\n      )}\n      {isEmpty(controllers) && (\n        <IntroContainer>\n          <IntroductionView\n            item={{\n              title: intro.title,\n              desc: intro.desc,\n              buttonTitle: intro.buttonTitle,\n            }}\n            onClick={createControllerAction}\n          />\n        </IntroContainer>\n      )}\n      {actionType && (\n        <ModalView\n          visible={visible}\n          onClose={onModalClose}\n          steps={steps[actionType]}\n          type={actionType}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default controllersPage;\n","export default __webpack_public_path__ + \"static/media/discord.46ef476e.svg\";","export default __webpack_public_path__ + \"static/media/github.3c2fbcc1.svg\";","export default __webpack_public_path__ + \"static/media/linkendin.077ef4b2.svg\";","export default __webpack_public_path__ + \"static/media/matrix.0fc904a9.svg\";","export default __webpack_public_path__ + \"static/media/medium.b5c13839.svg\";","export default __webpack_public_path__ + \"static/media/telegram.224cb085.svg\";","export default __webpack_public_path__ + \"static/media/twitter.ab5c408e.svg\";","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport DiscordIcon from 'resources/discord.svg';\nimport GithubIcon from 'resources/github.svg';\nimport LinkendinIcon from 'resources/linkendin.svg';\nimport MatrixIcon from 'resources/matrix.svg';\nimport MediumIcon from 'resources/medium.svg';\nimport TelegramIcon from 'resources/telegram.svg';\nimport TwitterIcon from 'resources/twitter.svg';\n\nconst createConfig = (src: string, url: string) => ({ src, url });\n\nexport const linkConfigs = [\n  createConfig(TelegramIcon, 'https://t.me/subquerynetwork'),\n  createConfig(DiscordIcon, 'https://www.linkedin.com/company/subquery--'),\n  createConfig(GithubIcon, 'https://github.com/subquery/subql'),\n  createConfig(LinkendinIcon, 'https://www.linkedin.com/company/subquery'),\n  createConfig(MediumIcon, 'https://subquery.medium.com/'),\n  createConfig(MatrixIcon, 'https://matrix.to/#/#subquery:matrix.org'),\n  createConfig(TwitterIcon, 'https://twitter.com/subquerynetwork'),\n];\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: var(--sq-primary-blue);\n  min-height: 150px;\n  width: 100%;\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: solid 1px white;\n  padding-left: 80px;\n  padding-right: 100px;\n  align-items: center;\n  min-height: 120px;\n  width: 100%;\n`;\n\nexport const IconsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  min-width: 550px;\n  height: 100%;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useLocation } from 'react-router-dom';\n\nimport Icon from 'components/Icon';\nimport { Text } from 'components/primary';\nimport { useIsMetaMask } from 'hooks/web3Hook';\n\nimport { linkConfigs } from './config';\nimport { Container, ContentContainer, IconsContainer } from './styles';\n\nconst Header = () => {\n  const location = useLocation();\n  const isMetamask = useIsMetaMask();\n\n  if (isMetamask) return null;\n  if (['/project/', '/account'].includes(location.pathname)) return null;\n\n  return (\n    <Container>\n      <ContentContainer>\n        <Text mw={160} color=\"white\" fw=\"700\" size={30}>\n          Follow Us\n        </Text>\n        <IconsContainer>\n          {linkConfigs.map(({ src, url }) => (\n            <Icon size={50} key={url} src={src} url={url} />\n          ))}\n        </IconsContainer>\n      </ContentContainer>\n      <Text ml={80} mt={5} color=\"white\" fw=\"400\" size={10}>\n        SubQuery © 2021\n      </Text>\n    </Container>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/subquery.8b4df4b6.svg\";","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100vw;\n  align-items: center;\n  justify-content: space-between;\n  min-height: 80px;\n  padding: 0px 40px;\n  border-bottom: 1px solid lightgray;\n`;\n\nexport const LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const RightContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0px 20px;\n  min-width: 260px;\n  height: 55px;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useState, VFC } from 'react';\nimport Tab from '@mui/material/Tab';\nimport Tabs from '@mui/material/Tabs';\n\nimport ServiceLogView from 'components/logView';\n\nenum TabbarItem {\n  ServiceLog,\n}\n\nconst NetworkTabbarView: VFC = () => {\n  const [value, setValue] = useState<TabbarItem>(TabbarItem.ServiceLog);\n\n  const handleChange = (_: any, newValue: TabbarItem) => {\n    setValue(newValue);\n  };\n\n  const renderContent = useCallback(() => {\n    switch (value) {\n      default:\n        return <ServiceLogView height={500} container=\"coordinator_service\" />;\n    }\n  }, [value]);\n\n  return (\n    <div style={{ marginTop: 30 }}>\n      <Tabs value={value} onChange={handleChange} textColor=\"primary\" indicatorColor=\"primary\">\n        <Tab value={TabbarItem.ServiceLog} label=\"Service Log\" />\n      </Tabs>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default NetworkTabbarView;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  min-height: 400px;\n  align-items: center;\n  justify-content: center;\n  background-color: #f6f9fc;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable */\nimport { useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport { useIsIndexer } from 'hooks/indexerHook';\nimport { useWeb3 } from 'hooks/web3Hook';\nimport { useCoordinatorIndexer } from 'containers/coordinatorIndexer';\nimport { useLoading } from 'containers/loadingContext';\nimport { isUndefined } from 'lodash';\nimport { Container } from './styles';\n\nconst LoginPage = () => {\n  const { account } = useWeb3();\n  const isIndexer = useIsIndexer();\n  const { setPageLoading } = useLoading();\n  const { loading, load } = useCoordinatorIndexer();\n\n  useEffect(() => {\n    load();\n  }, [load]);\n\n  useEffect(() => {\n    setPageLoading(loading || isUndefined(isIndexer));\n  }, [loading, isIndexer]);\n\n  return (\n    <Container>\n      <div>\n        {account && !isIndexer && <Redirect to=\"/register\" />}\n        {account && isIndexer && <Redirect to=\"/account\" />}\n      </div>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { Text } from './primary';\n\nconst VersionItemContainer = styled.div<{ horizontal: boolean }>`\n  display: flex;\n  flex-direction: ${({ horizontal }) => (horizontal ? 'row' : 'column')};\n  justify-content: ${({ horizontal }) => (horizontal ? 'center' : 'flex-start')};\n  align-items: ${({ horizontal }) => (horizontal ? 'center' : 'flex-start')};\n`;\n\ntype VersionProps = {\n  versionType: string;\n  horizontal?: boolean;\n  value?: string | number;\n  prefix?: string;\n};\n\nexport const TagItem: FC<VersionProps> = ({\n  versionType,\n  horizontal = false,\n  value = '',\n  prefix = '',\n}) => {\n  const mainColor = horizontal ? 'gray' : 'black';\n  const subColor = prefix ? '#4388dd' : 'gray';\n  return (\n    <VersionItemContainer horizontal={horizontal}>\n      <Text color={mainColor} size={horizontal ? 13 : 15} fw=\"500\">\n        {versionType}\n      </Text>\n      {horizontal ? (\n        <Text ml={15} mr={15} color={subColor} fw=\"500\" size={15}>\n          {`${prefix}${value}`}\n        </Text>\n      ) : (\n        <Text mt={5} color={subColor} fw=\"500\" size={13}>\n          {`${prefix}${value}`}\n        </Text>\n      )}\n    </VersionItemContainer>\n  );\n};\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useEffect, useMemo, VFC } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { LogViewer } from '@patternfly/react-log-viewer';\nimport { Button, Spinner } from '@subql/react-ui';\nimport styled from 'styled-components';\n\nimport { GET_LOG } from 'utils/queries';\n\ntype Props = {\n  container: string;\n  height: number;\n};\n\nconst LogView: VFC<Props> = ({ container, height = 650 }) => {\n  const [getLog, { loading, data, error }] = useLazyQuery(GET_LOG, {\n    fetchPolicy: 'network-only',\n  });\n\n  useEffect(() => {\n    getLog({ variables: { container } });\n  }, []);\n\n  const log = useMemo(() => {\n    if (loading || error) return '';\n    return data?.getLog.log;\n  }, [data, loading]);\n\n  return (\n    <Container height={height}>\n      <StyledButton\n        size=\"small\"\n        type=\"secondary\"\n        label=\"Refresh\"\n        onClick={() => getLog({ variables: { container } })}\n      />\n      {!!log && (\n        <LogViewer hasLineNumbers height={height - 100} data={log} isTextWrapped theme=\"dark\" />\n      )}\n      {loading && <Spinner />}\n    </Container>\n  );\n};\n\nexport default LogView;\n\nconst Container = styled.div<{ height: number }>`\n  height: ${({ height }) => height}px;\n  padding: 30px;\n  margin-top: 10px;\n  background-color: var(--sq-gray900);\n  align-items: center;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-bottom: 20px;\n  height: 30px;\n  width: 100px;\n  margin-right: 20px;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nexport const Contrainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  min-width: 1270px;\n  padding: 30px 50px;\n  overflow: auto;\n`;\n\nexport const LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n  min-width: 685px;\n  margin-bottom: 30px;\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-left: 40px;\n`;\n\nexport const VersionContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 25px;\n  height: 50px;\n  width: 500px;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useEffect, useMemo } from 'react';\nimport { isUndefined } from 'lodash';\n\nimport Avatar from 'components/avatar';\nimport { Separator, Text } from 'components/primary';\nimport { TagItem } from 'components/tagItem';\nimport { useLoading } from 'containers/loadingContext';\nimport { useIndexerMetadata } from 'hooks/indexerHook';\nimport { useIndexerEra } from 'hooks/network';\nimport { useWeb3 } from 'hooks/web3Hook';\n\nimport NetworkTabbarView from './components/networkTabBarView';\nimport { ContentContainer, Contrainer, LeftContainer, VersionContainer } from './styles';\n\nconst NetworkPage = () => {\n  const { account } = useWeb3();\n  const { metadata } = useIndexerMetadata();\n  const { setPageLoading } = useLoading();\n  const indexerEra = useIndexerEra();\n\n  useEffect(() => {\n    setPageLoading(isUndefined(indexerEra));\n  }, [indexerEra]);\n\n  const eraItems = useMemo(\n    () => (\n      <VersionContainer>\n        <TagItem versionType=\"CURRENT ERA\" prefix=\"#\" value={indexerEra?.currentEra} />\n        <Separator height={50} />\n        <TagItem versionType=\"LAST CLAIM ERA\" prefix=\"#\" value={indexerEra?.lastClaimedEra} />\n        <Separator height={50} />\n        <TagItem versionType=\"LAST SETTLE ERA\" prefix=\"#\" value={indexerEra?.lastSettledEra} />\n      </VersionContainer>\n    ),\n    [indexerEra]\n  );\n\n  return (\n    <Contrainer>\n      <LeftContainer>\n        <Avatar address={account ?? ''} size={100} />\n        <ContentContainer>\n          <Text fw=\"600\" size={30}>\n            {metadata?.name}\n          </Text>\n          <Text fw=\"400\" size={15}>\n            {account}\n          </Text>\n          {eraItems}\n        </ContentContainer>\n      </LeftContainer>\n      <NetworkTabbarView />\n    </Contrainer>\n  );\n};\n\nexport default NetworkPage;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useState, VFC } from 'react';\nimport Modal from 'react-modal';\nimport styled from 'styled-components';\n\nimport { Button, Text } from './primary';\n\ntype Props = {\n  visible: boolean;\n  title?: string;\n  description?: string;\n};\n\nconst AlertView: VFC<Props> = ({ visible = false, title, description }) => {\n  const [isOpen, setIsOpen] = useState(visible);\n  return (\n    <Modal isOpen={isOpen} style={modalStyles} closeTimeoutMS={200} ariaHideApp={false}>\n      <Container>\n        <ContentContainer>\n          <Text fw=\"bold\" size={35}>\n            {title}\n          </Text>\n          <Text alignCenter fw=\"400\" mt={30} size={18}>\n            {description}\n          </Text>\n        </ContentContainer>\n        <Button mt={100} width={300} title=\"Confirm\" onClick={() => setIsOpen(false)} />\n      </Container>\n    </Modal>\n  );\n};\n\nexport default AlertView;\n\nconst modalStyles = {\n  content: {\n    backgroundColor: 'white',\n    borderRadius: 15,\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    maxWidth: 900,\n    minWidth: 700,\n    padding: 0,\n  },\n  overlay: {\n    zIndex: 50,\n    backgroundColor: 'rgba(0, 0, 0, 0.65)',\n  },\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 50px 30px;\n`;\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport yaml from 'js-yaml';\nimport { isEmpty, isUndefined } from 'lodash';\n\nimport { useContractSDK } from 'containers/contractSdk';\nimport { useLoading } from 'containers/loadingContext';\nimport { useNotification } from 'containers/notificationContext';\nimport { useWeb3 } from 'hooks/web3Hook';\nimport {\n  ChainType,\n  DockerRegistry,\n  IndexingStatus,\n  PartialIpfsDeploymentManifest,\n  ProjectServiceMetadata,\n  TQueryMetadata,\n} from 'pages/project-details/types';\nimport { coordinatorServiceUrl, createApolloClient } from 'utils/apolloClient';\nimport { cat, cidToBytes32, IPFS_PROJECT_CLIENT } from 'utils/ipfs';\nimport {\n  GET_INDEXER_PROJECTS,\n  GET_PROJECT,\n  GET_PROJECT_DETAILS,\n  GET_QUERY_METADATA,\n  GET_REGISTRY_VERSIONS,\n} from 'utils/queries';\n\n// TODO: review whether need default value or other ways to provide default value\n// TODO: refactor get project details\nconst metadataInitValue = {\n  lastProcessedHeight: 0,\n  lastProcessedTimestamp: 0,\n  targetHeight: 0,\n  chain: '',\n  specName: '',\n  genesisHash: '',\n  indexerHealthy: undefined,\n  indexerNodeVersion: '',\n  queryNodeVersion: '',\n  indexerStatus: 'TERMINATED',\n  queryStatus: 'TERMINATED',\n};\n\nconst projectServiceMetadtaValue: ProjectServiceMetadata = {\n  id: '',\n  networkEndpoint: '',\n  networkDictionary: '',\n  nodeVersion: '',\n  queryVersion: '',\n  forceEnabled: false,\n  status: 0,\n  paygPrice: '',\n  paygExpiration: 3600 * 24,\n  paygThreshold: 1000,\n  paygOverflow: 5,\n};\n\nconst projectInitValue = {\n  name: '',\n  owner: '',\n  image: '',\n  description: '',\n  websiteUrl: '',\n  codeUrl: '',\n  version: '',\n  currentDeployment: '',\n  currentVersion: '',\n  versionDescription: '',\n  createdTimestamp: '',\n  updatedTimestamp: '',\n  metadata: undefined,\n  ...projectServiceMetadtaValue,\n};\n\nexport const useProjectService = (deploymentId: string) => {\n  const { notification } = useNotification();\n  const [projectService, setService] = useState<ProjectServiceMetadata>();\n  const [getProject, { data }] = useLazyQuery(GET_PROJECT, { fetchPolicy: 'network-only' });\n\n  const getProjectService = () => getProject({ variables: { id: deploymentId } });\n\n  useEffect(() => {\n    data ? setService(data.project) : getProjectService();\n  }, [deploymentId, data, notification?.type]);\n\n  return { projectService, getProjectService };\n};\n\nexport const useIndexingStatus = (deploymentId: string): IndexingStatus | undefined => {\n  const [status, setStatus] = useState<IndexingStatus>();\n  const { account } = useWeb3();\n  const notificationContext = useNotification();\n  const sdk = useContractSDK();\n\n  useEffect(() => {\n    if (sdk && account && deploymentId) {\n      sdk.queryRegistry\n        .deploymentStatusByIndexer(cidToBytes32(deploymentId), account)\n        .then(({ status }) => {\n          setStatus(status);\n        })\n        .catch((error) => console.error(error));\n    }\n  }, [sdk, account, deploymentId, notificationContext.notification?.type]);\n\n  return status;\n};\n\nexport type ProjectDetails = {\n  name: string;\n  owner: string;\n  image: string;\n  description: string;\n  websiteUrl: string;\n  codeUrl: string;\n  version: string;\n  currentDeployment: string;\n  currentVersion: string;\n  versionDescription: string;\n  createdTimestamp: string;\n  updatedTimestamp: string;\n  metadata: TQueryMetadata | undefined;\n} & ProjectServiceMetadata;\n\ntype Result = {\n  id: string;\n  projectId: string;\n  project: {\n    currentDeployment: string;\n    currentVersion: string;\n    versionDescription: string;\n    createdTimestamp: string;\n    updatedTimestamp: string;\n    metadata: string;\n  };\n};\n\ntype IndexerProject = {\n  indexerId: string;\n  deploymentId: string;\n  status: string;\n};\n\nexport const queryRegistryClient = createApolloClient(window.env.REGISTRY_PROJECT);\nconst coordinatorClient = createApolloClient(coordinatorServiceUrl);\n\nexport const getQueryMetadata = async (id: string): Promise<TQueryMetadata> => {\n  try {\n    const result = await coordinatorClient.query<{ queryMetadata: TQueryMetadata }>({\n      query: GET_QUERY_METADATA,\n      variables: { id },\n      fetchPolicy: 'network-only',\n    });\n    return result.data.queryMetadata;\n  } catch {\n    return metadataInitValue;\n  }\n};\n\nexport const getProjectDetails = async (deploymentId: string): Promise<ProjectDetails> => {\n  const res = await queryRegistryClient.query<{ deployments: { nodes: Result[] } }>({\n    query: GET_PROJECT_DETAILS,\n    variables: { deploymentId },\n  });\n\n  const projectInfo = res.data.deployments.nodes[0]?.project;\n  if (!projectInfo) {\n    console.error('Unable to get metadata for project');\n    return projectInitValue;\n  }\n\n  const projectMetadata = await cat(projectInfo.metadata);\n  const queryMetadata = await getQueryMetadata(deploymentId);\n  const projectDetails = {\n    ...projectInfo,\n    ...projectMetadata,\n    metadata: queryMetadata,\n    id: deploymentId,\n  };\n\n  return projectDetails;\n};\n\nexport const getIndexingProjects = async (indexer: string): Promise<ProjectServiceMetadata[]> => {\n  const res = await queryRegistryClient.query<{ deploymentIndexers: { nodes: IndexerProject[] } }>({\n    query: GET_INDEXER_PROJECTS,\n    variables: { indexer },\n  });\n\n  const projects = res.data.deploymentIndexers.nodes;\n  return projects\n    .filter((p) => p.status !== 'TERMINATED')\n    .map((p) => ({ ...projectServiceMetadtaValue, id: p.deploymentId }));\n};\n\nexport const useProjectDetails = (deploymentId: string): ProjectDetails | undefined => {\n  const [project, setProject] = useState<ProjectDetails | undefined>();\n  const { notification } = useNotification();\n\n  const fetchMeta = useCallback(async () => {\n    try {\n      const projectDetails = await getProjectDetails(deploymentId);\n      setProject(projectDetails);\n    } catch (error) {\n      setProject(undefined);\n      console.error('Unable to get project details', error);\n    }\n  }, [deploymentId]);\n\n  useEffect(() => {\n    fetchMeta();\n  }, [fetchMeta, notification?.type]);\n\n  return project;\n};\n\nexport const useDeploymentStatus = (deploymentId: string) => {\n  const [status, setStatus] = useState<IndexingStatus | undefined>();\n  const { account } = useWeb3();\n  const sdk = useContractSDK();\n\n  const getDeploymentStatus = useCallback(async () => {\n    if (!sdk || !account || !deploymentId) return;\n    const { status } = await sdk.queryRegistry.deploymentStatusByIndexer(\n      cidToBytes32(deploymentId),\n      account\n    );\n\n    setStatus(status);\n  }, [sdk, account, deploymentId]);\n\n  useEffect(() => {\n    getDeploymentStatus();\n  }, [getDeploymentStatus]);\n\n  return status;\n};\n\nfunction combineProjects(\n  localProjects: ProjectServiceMetadata[],\n  indexingProjects: ProjectServiceMetadata[]\n): ProjectServiceMetadata[] {\n  if (isEmpty(localProjects)) return indexingProjects;\n  const removedProjects = indexingProjects.filter(\n    (p) => !localProjects.find((lp) => lp.id === p.id)\n  );\n\n  return [...localProjects, ...removedProjects];\n}\n\n// TODO: need to refactor\nexport function useProjectDetailList(data: any) {\n  const [projectDetailList, setProjecList] = useState<ProjectDetails[]>();\n  const localProjects = data?.getProjects as ProjectServiceMetadata[];\n\n  const { setPageLoading } = useLoading();\n  const { account } = useWeb3();\n\n  const getProjectDetailList = useCallback(async () => {\n    if (!account) return;\n\n    const indexingProjects = await getIndexingProjects(account);\n    const projects = combineProjects(localProjects, indexingProjects);\n\n    if (isUndefined(projects)) return;\n    if (isEmpty(projects)) {\n      setPageLoading(false);\n      setProjecList([]);\n      return;\n    }\n\n    try {\n      const result = await Promise.all(\n        projects.map(({ id }) => Promise.all([getProjectDetails(id), getQueryMetadata(id)]))\n      );\n      setProjecList(\n        result.map(([detail, metadata]) => ({ ...detail, metadata })).filter(({ id }) => !!id)\n      );\n    } catch (e) {\n      console.error('Get project details failed:', e);\n      setPageLoading(false);\n    }\n  }, [localProjects, account]);\n\n  useEffect(() => {\n    setPageLoading(true);\n    getProjectDetailList();\n  }, [getProjectDetailList, data]);\n\n  return { projectDetailList, getProjectDetailList };\n}\n\nexport const getManifest = async (cid: string) => {\n  const projectYaml = await cat(cid, IPFS_PROJECT_CLIENT);\n  const resultManifest = yaml.load(projectYaml) as PartialIpfsDeploymentManifest;\n  return resultManifest;\n};\n\n// TODO: migrate to docker registry module\nfunction dockerRegistryFromChain(chainType: ChainType): DockerRegistry {\n  switch (chainType) {\n    case 'cosmos':\n      return DockerRegistry.cosmos;\n    case 'avalanche':\n      return DockerRegistry.avalanche;\n    default:\n      return DockerRegistry.substrateNode;\n  }\n}\n\nconst defaultRange = {\n  substrate: '>=1.1.1',\n  cosmos: '>=0.1.0',\n  avalanche: '>=0.1.1',\n};\n\nexport const useNodeVersions = (cid: string) => {\n  const [getNodeVersions, { data }] = useLazyQuery(GET_REGISTRY_VERSIONS);\n\n  const fetchNodeVersions = useCallback(async () => {\n    const manifest = await getManifest(cid);\n    const { dataSources, runner } = manifest;\n    const runtime = dataSources[0].kind;\n    const chainType = runtime.split('/')[0] as ChainType;\n\n    const registry = dockerRegistryFromChain(chainType);\n    const range = runner?.node?.version ?? defaultRange[chainType];\n    getNodeVersions({ variables: { range, registry } });\n  }, [cid]);\n\n  useEffect(() => {\n    fetchNodeVersions();\n  }, [fetchNodeVersions]);\n\n  const registryVersions = data?.getRegistryVersions;\n\n  // FIXME: special filter for subql-node [v1.2.1]\n  const versions = registryVersions?.filter((v: string) => v !== 'v1.2.1');\n  return !isEmpty(versions) ? versions : [];\n};\n\nexport const useQueryVersions = (cid: string) => {\n  const [getQueryVersions, { data }] = useLazyQuery(GET_REGISTRY_VERSIONS);\n\n  const fetchQueryVersions = useCallback(async () => {\n    const manifest = await getManifest(cid);\n    const range = manifest.runner?.query?.version ?? '>=0.15.0';\n    getQueryVersions({ variables: { range, registry: DockerRegistry.query } });\n  }, [cid]);\n\n  useEffect(() => {\n    fetchQueryVersions();\n  }, [fetchQueryVersions]);\n\n  const versions = data?.getRegistryVersions;\n  return !isEmpty(versions) ? versions : [];\n};\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable */\nimport axios, { AxiosError } from 'axios';\nimport { isValidPrivate, bufferToHex, privateToAddress as privateToAddressBuffer, toBuffer } from 'ethereumjs-util';\nimport { isUndefined } from 'lodash';\n\nexport function isMetaMaskRejectError(e: Error): boolean {\n  return e.message.includes('metamask');\n}\n\n// fields validation\nexport function validatePrivateKey(privateKey: string): string {\n  try {\n    if (!privateKey.startsWith('0x')) {\n      return 'Private key must start with 0x';\n    }\n    if (!isValidPrivate(toBuffer(privateKey))) {\n      return 'Invalid private key';\n    }\n  } catch (_) {\n    return 'Invalid private key';\n  }\n  return '';\n}\n\nexport function isFalse(value: boolean | string | undefined) {\n  return !isUndefined(value) && !value;\n}\n\nexport function privateToAddress(key: string) {\n  if (validatePrivateKey(key)) return '';\n  return bufferToHex(privateToAddressBuffer(toBuffer(key)));\n}\n\nexport function validateController(key: string, isExist?: boolean, account?: string, indexerController?: string,) {\n  const error = validatePrivateKey(key);\n  if (error) {\n    return error;\n  }\n\n  const controllerAddress = privateToAddress(key);\n  if (controllerAddress === account?.toLowerCase()) {\n    return 'Can not use indexer account as controller account';\n  }\n\n  if (isExist && indexerController?.toLowerCase() !== controllerAddress) {\n    return 'Controller already been used';\n  }\n\n  return '';\n}\n\nexport async function verifyProxyEndpoint(url: string) {\n  try {\n    const { host, protocol } = new URL(url);\n    const requestUrl = `${protocol}//${host}/healthy`;\n\n    const response = await axios.get(requestUrl);\n    return response.status === 200;\n  } catch (error) {\n    return false;\n  }\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { isUndefined } from 'lodash';\n\nimport { useLoading } from 'containers/loadingContext';\nimport { isFalse } from 'utils/validateService';\n\nimport { useController, useIsIndexer } from './indexerHook';\n\nexport const useRouter = (refresh = true) => {\n  const isIndexer = useIsIndexer();\n  const { controller } = useController();\n  const history = useHistory();\n  const { pageLoading, setPageLoading } = useLoading();\n\n  useEffect(() => {\n    setPageLoading(isUndefined(isIndexer) || isUndefined(controller));\n    if (pageLoading || !refresh) return;\n\n    if (isFalse(isIndexer)) {\n      history.replace('/');\n    } else if (isFalse(controller)) {\n      history.replace('/account');\n    }\n  }, [isIndexer, controller]);\n};\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { IndexingStatus } from 'pages/project-details/types';\n\nexport enum ServiceStatus {\n  healthy = 'HEALTHY',\n  unhealthy = 'UNHEALTHY',\n  terminated = 'TERMINATED',\n}\n\nexport function calculateProgress(targetHeight: number, latestHeight: number): number {\n  if (targetHeight === 0) return 0;\n  if (latestHeight >= targetHeight) return 100;\n  return Math.round((latestHeight * 100 * 100) / targetHeight) / 100;\n}\n\nexport function statusCode(status: string): 'success' | 'error' {\n  if (status === 'HEALTHY' || status === 'STARTING') return 'success';\n  return 'error';\n}\n\nexport function indexingStatusCode(status: IndexingStatus) {\n  switch (status) {\n    case IndexingStatus.NOTINDEXING:\n      return 'error';\n    case IndexingStatus.INDEXING:\n      return 'info';\n    case IndexingStatus.READY:\n      return 'success';\n    default:\n      return 'error';\n  }\n}\n\nexport function projectId(cid: string): string {\n  return cid.substring(0, 15).toLowerCase();\n}\n\nexport function isTrue(value: boolean | string): boolean {\n  return value === true || value === 'true';\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC } from 'react';\nimport styled from 'styled-components';\n\nimport Avatar from 'components/avatar';\nimport { Separator, Text } from 'components/primary';\nimport { TagItem } from 'components/tagItem';\nimport { ProjectDetails } from 'hooks/projectHook';\nimport { cidToBytes32 } from 'utils/ipfs';\n\nimport { ProjectStatus } from '../types';\n\ntype Props = {\n  id: string;\n  project: ProjectDetails;\n  projectStatus: ProjectStatus;\n};\n\nconst ProjectDetailsHeader: FC<Props> = ({ id, projectStatus, project }) => {\n  return (\n    <Container>\n      <LeftContainer>\n        <Avatar address={cidToBytes32(id)} size={100} />\n        <ContentContainer>\n          <Text fw=\"600\" size={30}>\n            {project.name}\n          </Text>\n          <Text fw=\"400\" size={15}>\n            {project.owner}\n          </Text>\n          <VersionContainer>\n            <TagItem versionType=\"INDEXED NETWORK\" value={project.metadata?.chain} />\n            <Separator height={30} />\n            <TagItem versionType=\"VERSION\" value={`V${project.version ?? '1.0.0'}`} />\n            <Separator height={30} />\n            <TagItem versionType=\"PROJECT STATUS\" value={projectStatus} />\n          </VersionContainer>\n        </ContentContainer>\n      </LeftContainer>\n    </Container>\n  );\n};\n\nexport default ProjectDetailsHeader;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  min-height: 200px;\n  padding-right: 32px;\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  min-width: 685px;\n`;\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-left: 40px;\n`;\n\nconst VersionContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 25px;\n  height: 50px;\n  width: 450px;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { ApolloQueryResult, useMutation } from '@apollo/client';\nimport { formatEther, parseEther } from '@ethersproject/units';\nimport { GraphqlQueryClient, NETWORK_CONFIGS } from '@subql/network-clients';\nimport { GetIndexerClosedFlexPlans, GetIndexerOngoingFlexPlans } from '@subql/network-query';\nimport { BigNumber } from 'ethers';\nimport { FormikHelpers, FormikValues } from 'formik';\n\nimport { useModal } from 'containers/modalContext';\nimport { ProjectFormKey } from 'types/schemas';\nimport { PAYG_PRICE } from 'utils/queries';\n\nimport { useProjectService } from './projectHook';\nimport { useWeb3 } from './web3Hook';\n\nexport enum FlexPlanStatus {\n  ONGOING,\n  CLOSED,\n}\n\nconst daySeconds = 3600 * 24;\n\n// hook for PAYG configuration\nexport function usePAYGConfig(deploymentId: string) {\n  const [paygPriceRequest, { loading }] = useMutation(PAYG_PRICE);\n  const { projectService, getProjectService } = useProjectService(deploymentId);\n  const { removeModal } = useModal();\n\n  const paygConfig = useMemo(() => {\n    if (!projectService || !projectService.paygPrice) {\n      return { paygPrice: '', paygExpiration: 0 };\n    }\n\n    return {\n      paygPrice: formatEther(BigNumber.from(projectService.paygPrice).mul(1000)),\n      paygExpiration: (projectService?.paygExpiration ?? 0) / daySeconds,\n    };\n  }, [projectService]);\n\n  const changePAYGCofnig = useCallback(\n    async (values: FormikValues, formHelper: FormikHelpers<FormikValues>) => {\n      try {\n        const { paygPrice, paygPeriod } = values;\n        const price = parseEther(paygPrice);\n        await paygPriceRequest({\n          variables: {\n            paygPrice: price.div(1000).toString(),\n            paygExpiration: Number(paygPeriod * daySeconds),\n            // TODO: remove these 2 param on coordinator service side\n            paygThreshold: 10,\n            paygOverflow: 10,\n            id: deploymentId,\n          },\n        });\n\n        getProjectService();\n        removeModal();\n      } catch (e) {\n        formHelper.setErrors({ [ProjectFormKey.paygPrice]: `Invalid PAYG: ${e}` });\n      }\n    },\n    []\n  );\n\n  return { paygConfig, changePAYGCofnig, loading };\n}\n\n// hook for PAYG plans\nexport enum ChannelStatus {\n  FINALIZED = 'FINALIZED',\n  OPEN = 'OPEN',\n  TERMINATED = 'TERMINATED',\n}\n\nexport type Plan = {\n  id: string;\n  indexer: string;\n  consumer: string;\n  status: ChannelStatus;\n  total: number; // deposit SQT amount\n  spent: number;\n  isFinal: boolean;\n  expiredAt: string;\n  terminatedAt: string;\n};\n\nconst config = NETWORK_CONFIGS.kepler;\nconst client = new GraphqlQueryClient(config);\nconst networkClient = client.explorerClient;\n\nfunction queryFromStatus(status: FlexPlanStatus) {\n  return status === FlexPlanStatus.ONGOING ? GetIndexerOngoingFlexPlans : GetIndexerClosedFlexPlans;\n}\n\nexport function usePAYGPlans(deploymentId: string) {\n  const [data, setData] = useState<ApolloQueryResult<{ stateChannels: { nodes: Plan[] } }>>();\n\n  const plans = useMemo((): Plan[] | undefined => data?.data.stateChannels.nodes, [data]);\n  const { account: indexer } = useWeb3();\n\n  const getPlans = useCallback(\n    async (id: string, status: FlexPlanStatus) => {\n      if (!indexer) return;\n      const response = await networkClient.query({\n        query: queryFromStatus(status),\n        variables: {\n          indexer,\n          deploymentId: id,\n          now: new Date(),\n        },\n      });\n      setData(response);\n    },\n    [indexer, deploymentId]\n  );\n\n  useEffect(() => {\n    indexer && getPlans(deploymentId, FlexPlanStatus.ONGOING);\n  }, [indexer]);\n\n  return { getPlans, plans };\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  min-width: 1270px;\n  padding: 0px 50px;\n  padding-bottom: 50px;\n  overflow: auto;\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  -ms-overflow-style: none; /* for Internet Explorer, Edge */\n  scrollbar-width: none; /* for Firefox */\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    display: none; /* for Chrome, Safari, and Opera */\n  }\n`;\n\nexport const CardContainer = styled.div`\n  display: flex;\n  background-color: white;\n  justify-content: space-between;\n  min-width: 1355px;\n  border-radius: 8px;\n  margin-top: 20px;\n  padding: 32px;\n`;\n\nexport const ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC } from 'react';\nimport { Tag } from '@subql/react-ui';\nimport styled from 'styled-components';\n\nimport { Button, Text } from 'components/primary';\nimport { proxyServiceUrl } from 'utils/apolloClient';\nimport { statusCode } from 'utils/project';\n\nimport { ButtonItem } from '../config';\nimport { ActionContainer, CardContainer } from '../styles';\nimport { TQueryMetadata } from '../types';\n\nconst ContentContainer = styled.div`\n  display: flex;\n  background-color: white;\n  border-radius: 8px;\n`;\n\nconst ServiceContaineer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  min-width: 200px;\n  margin-right: 30px;\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\ntype CardProps = {\n  title: string;\n  subTitle: string;\n  status?: string;\n};\n\nconst ServiceView: FC<CardProps> = ({ title, subTitle, status }) => (\n  <ServiceContaineer>\n    <HeaderContainer>\n      <Text mr={20} fw=\"500\">\n        {title}\n      </Text>\n      {!!status && <Tag text={status} state={statusCode(status)} />}\n    </HeaderContainer>\n    <Text size={15} color=\"gray\" mt={10}>\n      {subTitle}\n    </Text>\n  </ServiceContaineer>\n);\n\ntype Props = {\n  id: string;\n  actionItems: ButtonItem[];\n  data?: TQueryMetadata;\n};\n\nconst ProjectServiceCard: FC<Props> = ({ id, actionItems, data }) => {\n  if (!data) return null;\n\n  const imageVersion = (type: string, version: string) => `onfinality/subql-${type}:${version}`;\n\n  return (\n    <CardContainer>\n      <ContentContainer>\n        <ServiceView\n          title=\"Indexer Service\"\n          subTitle={`Image Version: ${imageVersion('indexer', data.indexerNodeVersion)}`}\n          status={data.indexerStatus}\n        />\n        <ServiceView\n          title=\"Query Service\"\n          subTitle={`Image Version: ${imageVersion('query', data.queryNodeVersion)}`}\n          status={data.queryStatus}\n        />\n        <ServiceView\n          title=\"Proxy Service\"\n          subTitle={`Url: ${proxyServiceUrl}/query/${id}`}\n          status={data.queryStatus}\n        />\n      </ContentContainer>\n      <ActionContainer>\n        {actionItems.map(({ title, action }) => (\n          <Button mt={10} key={title} width={265} title={title} onClick={action} />\n        ))}\n      </ActionContainer>\n    </CardContainer>\n  );\n};\n\nexport default ProjectServiceCard;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FormSubmit, IndexingStatus, ProjectsAction } from 'pages/project-details/types';\nimport { initialProjectValues, ProjectFormKey, ProjectFormSchema } from 'types/schemas';\n\nexport const statusColor = {\n  [IndexingStatus.NOTINDEXING]: 'rgba(214, 48, 48, 0.3)',\n  [IndexingStatus.INDEXING]: 'rgba(67, 136, 221, 0.24)',\n  [IndexingStatus.READY]: 'rgba(70, 219, 103, 0.4)',\n};\n\nexport const statusText = {\n  [IndexingStatus.NOTINDEXING]: 'NOT INDEXING',\n  [IndexingStatus.INDEXING]: 'INDEXING',\n  [IndexingStatus.READY]: 'READY',\n};\n\n// TODO: remove the old logic\nexport const createAddProjectSteps = (onAddProject: FormSubmit) => ({\n  [ProjectsAction.addProject]: [\n    {\n      index: 0,\n      title: 'Add new project',\n      desc: 'Input the deployment id, and add the project into you service. Your can manage the project in the projects page and start indexing the project at any time you want.',\n      buttonTitle: 'Add project',\n      form: {\n        formValues: initialProjectValues,\n        schema: ProjectFormSchema,\n        onFormSubmit: onAddProject,\n        items: [\n          {\n            formKey: ProjectFormKey.deploymentId,\n            title: 'Add new project',\n            placeholder: 'QmYDpk94SCgxv4j2PyLkaD8fWJpHwJufMLX2HGjefsNHH4',\n          },\n        ],\n      },\n    },\n  ],\n});\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC } from 'react';\nimport { ProgressBar, Spinner, Tag } from '@subql/react-ui';\nimport { isUndefined } from 'lodash';\nimport styled from 'styled-components';\n\nimport { Button, Text } from 'components/primary';\nimport { TagItem } from 'components/tagItem';\nimport { statusText } from 'pages/projects/constant';\nimport { indexingStatusCode } from 'utils/project';\n\nimport { ButtonItem } from '../config';\nimport { ActionContainer, CardContainer } from '../styles';\nimport { IndexingStatus, TQueryMetadata } from '../types';\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  margin-right: 50px;\n`;\n\nconst TagsContainer = styled.div<{ mb?: number }>`\n  display: flex;\n  min-width: 230px;\n  margin: 15px 0px;\n`;\n\nconst LabelContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n`;\n\ntype Props = {\n  percent: number;\n  actionItems: ButtonItem[];\n  status?: IndexingStatus;\n  metadata?: TQueryMetadata;\n};\n\nconst ProjectStatusView: FC<Props> = ({ percent, actionItems, status, metadata }) => (\n  <CardContainer>\n    <ContentContainer>\n      <LabelContainer>\n        <Text size={15} fw=\"500\" mr={10}>\n          Indexing Status\n        </Text>\n        {!isUndefined(status) ? (\n          <Tag text={statusText[status]} state={indexingStatusCode(status)} />\n        ) : (\n          <Spinner />\n        )}\n      </LabelContainer>\n      {!!metadata?.targetHeight && (\n        <TagsContainer>\n          <TagItem horizontal versionType=\"Latest Block\" prefix=\"#\" value={metadata.targetHeight} />\n          <TagItem\n            horizontal\n            versionType=\"Indexing Block\"\n            prefix=\"#\"\n            value={metadata.lastProcessedHeight}\n          />\n        </TagsContainer>\n      )}\n      <ProgressBar progress={percent / 100} />\n    </ContentContainer>\n    <ActionContainer>\n      {actionItems.map(({ title, action }) => (\n        <Button mt={10} key={title} width={265} title={title} onClick={action} />\n      ))}\n    </ActionContainer>\n  </CardContainer>\n);\n\nexport default ProjectStatusView;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { TableText, TableTitle, Tag } from '@subql/components';\n\n// TODO: this can migrate to @subql/components -> table as utils\nexport function createTextColumn<T>(index: T, title: string, toolTip?: string) {\n  return {\n    dataIndex: index,\n    title: <TableTitle tooltip={toolTip} title={title} />,\n    render: (val: string) => <TableText>{val}</TableText>,\n  };\n}\n\nexport function createTagColumn<T>(index: T, title: string, tooTip?: string) {\n  return {\n    dataIndex: index,\n    title: <TableTitle tooltip={tooTip} title={title} />,\n    render: ({ state, text }: { state: 'error' | 'success' | 'info'; text: string }) => (\n      <Tag state={state}>{text}</Tag>\n    ),\n  };\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Button, Table, TableTitle } from '@subql/components';\n\nimport { createTextColumn } from 'utils/table';\n\ntype Props = {\n  price: string;\n  period: number;\n  onEdit: () => void;\n};\n\nconst columns = [\n  createTextColumn('price', 'PRICE'),\n  createTextColumn('period', 'MAXIMUM VALIDITY PERIOD'),\n];\n\nexport function PAYGConfig({ price, period, onEdit }: Props) {\n  const actionColumn = {\n    dataIndex: 'action',\n    title: <TableTitle title=\"ACTION\" />,\n    render: () => (\n      <Button type=\"link\" size=\"medium\" colorScheme=\"standard\" label=\"Edit\" onClick={onEdit} />\n    ),\n  };\n\n  return (\n    <Table\n      tableProps={{\n        pagination: false,\n        columns: [...columns, actionColumn],\n        dataSource: [\n          {\n            price: `${price} SQT / 1000 requests`,\n            period: `${period} days`,\n          },\n        ],\n      }}\n    />\n  );\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px 0px;\n`;\n\nexport const InstructionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 550px;\n`;\n\nexport const PlansContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 20px;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Button, Text } from 'components/primary';\n\nimport prompts from '../prompts';\nimport { InstructionContainer } from './styles';\n\nconst { instruction } = prompts.payg;\n\ntype Props = {\n  onEnablePayg: () => void;\n};\n\nexport function Introduction({ onEnablePayg }: Props) {\n  return (\n    <InstructionContainer>\n      <Text size={32} fw={700}>\n        {instruction.title}\n      </Text>\n      <Text mt={15} alignCenter size={16} color=\"#454F58\">\n        {instruction.desc[0]}\n      </Text>\n      <Text mt={15} alignCenter size={16} color=\"#454F58\">\n        {instruction.desc[1]}\n      </Text>\n      <Text mt={15} alignCenter size={16} color=\"#454F58\">\n        {instruction.sub}\n        <a target=\"_blank\" href={instruction.link} rel=\"noreferrer\">\n          here\n        </a>\n      </Text>\n      <Button mt={25} type=\"secondary\" title={instruction.button} onClick={onEnablePayg} />\n    </InstructionContainer>\n  );\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { ChannelStatus, FlexPlanStatus, Plan } from 'hooks/paygHook';\nimport { createTagColumn, createTextColumn } from 'utils/table';\n\nimport prompts from '../prompts';\n\nconst { channels } = prompts.payg;\n\ntype TableKey = 'consumer' | 'price' | 'spent' | 'deposit' | 'expiration' | 'status';\n\nexport const planColumns = [\n  createTextColumn<TableKey>('consumer', 'CONSUMER'),\n  createTextColumn<TableKey>('price', 'PRICE', 'The price of this flex plan'),\n  createTextColumn<TableKey>(\n    'spent',\n    'SPENT',\n    'The total amount that the consumer has spent so far'\n  ),\n  createTextColumn<TableKey>('deposit', 'REMAINING DEPOSIT'),\n  createTextColumn<TableKey>(\n    'expiration',\n    'EXPIRATION',\n    'The Flex Plan will end on the expiry date'\n  ),\n  createTagColumn<TableKey>('status', 'STATUS'),\n];\n\nexport function getTagState(tabItem: FlexPlanStatus) {\n  switch (tabItem) {\n    case FlexPlanStatus.ONGOING:\n      return { state: 'success', text: 'Active' };\n    default:\n      return { state: 'info', text: 'Completed' };\n  }\n}\n\nexport function statusToTabItem(status: ChannelStatus): FlexPlanStatus {\n  switch (status) {\n    case ChannelStatus.OPEN:\n      return FlexPlanStatus.ONGOING;\n    default:\n      return FlexPlanStatus.CLOSED;\n  }\n}\n\nexport function tabToStatus(tabItem: FlexPlanStatus): ChannelStatus {\n  switch (tabItem) {\n    case FlexPlanStatus.ONGOING:\n    default:\n      return ChannelStatus.FINALIZED;\n  }\n}\n\nexport function plansToDatasource(id: string, plans: Plan[] | undefined, tabItem: FlexPlanStatus) {\n  if (!plans) return [];\n  // TODO: update `price` from onchain data\n  return plans.map((p) => ({\n    consumer: p.consumer,\n    price: '500 SQT',\n    spent: `${p.spent} SQT`,\n    deposit: `${p.total - p.spent} SQT`,\n    expiration: new Date(p.expiredAt).toLocaleDateString(),\n    status: getTagState(tabItem),\n    action: { status: p.status, id },\n  }));\n}\n\nexport const tabItems = [\n  {\n    // TODO: add icons\n    label: channels.tabs.open,\n  },\n  {\n    // TODO: add icons\n    label: channels.tabs.closed,\n  },\n];\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useMemo, useState } from 'react';\nimport { Button, Table, TableTitle, Tabs } from '@subql/components';\n\nimport { Text } from 'components/primary';\nimport { ChannelStatus, FlexPlanStatus, usePAYGPlans } from 'hooks/paygHook';\n\nimport prompts from '../prompts';\nimport { planColumns, plansToDatasource, tabItems } from './paygDatasource';\nimport { PlansContainer } from './styles';\n\nconst { channels } = prompts.payg;\n\ntype Props = {\n  deploymentId: string;\n  onTerminate?: (id: string) => void;\n};\n\nexport function PAYGPlan({ deploymentId, onTerminate }: Props) {\n  const [tabItem, setTabItem] = useState<FlexPlanStatus>(FlexPlanStatus.ONGOING);\n  const { plans, getPlans } = usePAYGPlans(deploymentId);\n  const dataSource = useMemo(\n    () => plansToDatasource(deploymentId, plans, tabItem),\n    [plans, tabItem]\n  );\n\n  const onTabChange = (tabValue: FlexPlanStatus) => {\n    setTabItem(tabValue);\n    getPlans(deploymentId, tabValue);\n  };\n\n  const teminateBtn = ({ id }: { id: string; status: ChannelStatus }) => (\n    <Button\n      type=\"link\"\n      size=\"medium\"\n      colorScheme=\"standard\"\n      title=\"Edit\"\n      onClick={() => onTerminate && onTerminate(id)}\n    />\n  );\n\n  const actionColumn = {\n    dataIndex: 'action',\n    title: <TableTitle title=\"ACTION\" />,\n    render: teminateBtn,\n  };\n\n  return (\n    <PlansContainer>\n      <Text mb={10} size={20}>\n        {channels.title}\n      </Text>\n      <Tabs tabs={tabItems} onTabClick={onTabChange} />\n      <Table tableProps={{ columns: [...planColumns, actionColumn], dataSource }} />\n    </PlansContainer>\n  );\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useMemo } from 'react';\n\nimport { useModal } from 'containers/modalContext';\nimport { usePAYGConfig } from 'hooks/paygHook';\n\nimport { createPaygOpenSteps } from '../config';\nimport { ProjectConfig } from '../types';\nimport { PAYGConfig } from './paygConfig';\nimport { Introduction } from './paygIntroduction';\nimport { PAYGPlan } from './paygPlans';\nimport { Container } from './styles';\n\ntype TProjectPAYG = {\n  id: string;\n  config: ProjectConfig;\n  paygUpdated?: () => void;\n};\n\nexport function ProjectPAYG({ id, config }: TProjectPAYG) {\n  const { paygConfig, changePAYGCofnig, loading } = usePAYGConfig(id);\n  const { paygPrice, paygExpiration } = paygConfig ?? config;\n  const { showModal } = useModal();\n\n  const paygEnabled = useMemo(() => paygPrice && paygExpiration, [paygPrice, paygExpiration]);\n\n  const paygOpenSteps = createPaygOpenSteps(config, changePAYGCofnig);\n\n  const onUpdatePayg = (title: string) => {\n    const modalItem = {\n      visible: true,\n      steps: paygOpenSteps,\n      title,\n      loading,\n    };\n    showModal(modalItem);\n  };\n\n  return (\n    <Container>\n      {!paygEnabled && <Introduction onEnablePayg={() => onUpdatePayg('Enable Flex Plan')} />}\n      {paygEnabled && (\n        <PAYGConfig\n          price={paygPrice}\n          period={paygExpiration}\n          onEdit={() => onUpdatePayg('Update Flex Plan')}\n        />\n      )}\n      {paygEnabled && <PAYGPlan deploymentId={id} />}\n    </Container>\n  );\n}\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { Text } from 'components/primary';\nimport { ProjectDetails } from 'hooks/projectHook';\n\ntype InfoProps = {\n  title: string;\n  desc: string;\n  ml?: number;\n  mt?: number;\n};\n\nconst InfoView: FC<InfoProps> = ({ title, desc, ml, mt }) => (\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  <InfoContainer ml={ml} mt={mt}>\n    <Text size={18}>{title}</Text>\n    <Text mt={15} size={16} color=\"gray\">\n      {desc}\n    </Text>\n  </InfoContainer>\n);\n\ntype Props = {\n  id: string;\n  project: ProjectDetails;\n};\n\nconst formatDate = (date: string) => new Date(date).toLocaleDateString();\n\nconst ProjectDetailsView: FC<Props> = ({ project }) => {\n  const {\n    description,\n    websiteUrl,\n    codeUrl,\n    currentDeployment,\n    createdTimestamp,\n    updatedTimestamp,\n  } = project;\n  return (\n    <Container>\n      <LeftContainer>\n        <InfoView title=\"Description\" desc={description} />\n        <BottomContainer>\n          <InfoView title=\"Created\" desc={formatDate(createdTimestamp)} />\n          <InfoView ml={150} title=\"Last Updated\" desc={formatDate(updatedTimestamp)} />\n        </BottomContainer>\n      </LeftContainer>\n      <RightContainer>\n        <InfoView title=\"Deployment ID\" desc={currentDeployment} />\n        <InfoView mt={30} title=\"Website URL\" desc={websiteUrl} />\n        <InfoView mt={30} title=\"Source Code URL\" desc={codeUrl} />\n      </RightContainer>\n    </Container>\n  );\n};\n\nexport default ProjectDetailsView;\n\nconst Container = styled.div`\n  display: flex;\n  min-height: 350px;\n  margin-top: 20px;\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  min-width: 500px;\n  width: 45%;\n`;\n\nconst BottomContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 50px;\n`;\n\nconst RightContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin-left: 80px;\n`;\n\nconst InfoContainer = styled.div<{ mt?: number; ml?: number }>`\n  display: flex;\n  flex-direction: column;\n  margin-left: ${({ ml }) => ml ?? 0}px;\n  margin-top: ${({ mt }) => mt ?? 0}px;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useState, VFC } from 'react';\nimport { Tabs } from '@subql/components';\n\nimport { ProjectDetails } from 'hooks/projectHook';\nimport { projectId } from 'utils/project';\n\nimport ProjectLogView from '../../../components/logView';\nimport { ProjectPAYG } from '../payg/projectPayg';\nimport { ProjectConfig } from '../types';\nimport ProjectDetailsView from './projectDetailsView';\n\nenum TabbarItem {\n  ProjectDetails,\n  NodeLog,\n  PAYG,\n}\n\ntype Props = {\n  id: string;\n  project: ProjectDetails;\n  config: ProjectConfig;\n};\n\nconst tabItems = [\n  {\n    label: 'Project Details',\n  },\n  {\n    label: 'Service Log',\n  },\n  {\n    label: 'Flex Plan',\n  },\n];\n\nconst ProjectTabbarView: VFC<Props> = ({ id, project, config }) => {\n  const [value, setValue] = useState<TabbarItem>(TabbarItem.ProjectDetails);\n\n  const handleChange = (newValue: TabbarItem) => {\n    setValue(newValue);\n  };\n\n  const renderContent = useCallback(() => {\n    switch (value) {\n      case TabbarItem.NodeLog:\n        return <ProjectLogView container={`node_${projectId(id)}`} height={650} />;\n      case TabbarItem.ProjectDetails:\n        return <ProjectDetailsView id={id} project={project} />;\n      case TabbarItem.PAYG:\n        return <ProjectPAYG id={id} config={config} />;\n      default:\n        return <div />;\n    }\n  }, [value]);\n\n  return (\n    <div style={{ marginTop: 30 }}>\n      <Tabs tabs={tabItems} onTabClick={handleChange} />\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default ProjectTabbarView;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { formatEther } from '@ethersproject/units';\nimport { FormikHelpers, FormikValues } from 'formik';\nimport { isUndefined } from 'lodash';\n\nimport AlertView from 'components/alertView';\nimport ModalView from 'components/modalView';\nimport { useLoading } from 'containers/loadingContext';\nimport { useNotification } from 'containers/notificationContext';\nimport {\n  getQueryMetadata,\n  ProjectDetails,\n  useIndexingStatus,\n  useNodeVersions,\n  useProjectDetails,\n  useProjectService,\n  useQueryVersions,\n} from 'hooks/projectHook';\nimport { useRouter } from 'hooks/routerHook';\nimport { useIndexingAction } from 'hooks/transactionHook';\nimport { ProjectFormKey } from 'types/schemas';\nimport { ProjectNotification } from 'utils/notification';\nimport { calculateProgress, isTrue } from 'utils/project';\nimport { REMOVE_PROJECT, START_PROJECT, STOP_PROJECT } from 'utils/queries';\nimport { txErrorNotification } from 'utils/transactions';\n\nimport ProjectDetailsHeader from './components/projectDetailHeader';\nimport ProjectServiceCard from './components/projectServiceCard';\nimport ProjectStatusView from './components/projectStatusView';\nimport ProjectTabbarView from './components/projectTabBarView';\nimport {\n  aletMessages,\n  createAnnounceIndexingSteps,\n  createNetworkButtonItems,\n  createNotIndexingSteps,\n  createReadyIndexingSteps,\n  createRemoveProjectSteps,\n  createRestartProjectSteps,\n  createServiceButtonItems,\n  createStartIndexingSteps,\n  createStopIndexingSteps,\n  createStopProjectSteps,\n  notifications,\n  ProjectActionName,\n} from './config';\nimport { Container, ContentContainer } from './styles';\nimport { IndexingStatus, ProjectAction, ProjectStatus, TQueryMetadata } from './types';\n\nconst ProjectDetailsPage = () => {\n  const { id } = useParams() as { id: string };\n  const { data: projectDetails } = useLocation().state as { data: ProjectDetails };\n\n  const status = useIndexingStatus(id);\n  const projectInfo = useProjectDetails(id);\n  const { setPageLoading } = useLoading();\n  const history = useHistory();\n  useRouter(!projectDetails);\n\n  const indexingAction = useIndexingAction(id);\n  const { projectService, getProjectService } = useProjectService(id);\n  // const paygStatus = projectService?.paygPrice ? PaygStatus.Open : PaygStatus.Close;\n  const { dispatchNotification } = useNotification();\n  const [startProjectRequest, { loading: startProjectLoading }] = useMutation(START_PROJECT);\n  const [stopProjectRequest, { loading: stopProjectLoading }] = useMutation(STOP_PROJECT);\n  const [removeProjectRequest, { loading: removeProjectLoading }] = useMutation(REMOVE_PROJECT);\n  const queryVersions = useQueryVersions(id);\n  const nodeVersions = useNodeVersions(id);\n\n  const [progress, setProgress] = useState(0);\n  const [metadata, setMetadata] = useState<TQueryMetadata>();\n  const [visible, setVisible] = useState(false);\n  const [actionType, setActionType] = useState<ProjectAction>();\n\n  const fetchQueryMetadata = async () => {\n    const data = await getQueryMetadata(id);\n    setMetadata(data);\n  };\n\n  const updateServiceStatus = () => {\n    const intervalId = setInterval(() => fetchQueryMetadata(), 6000);\n    setTimeout(() => {\n      clearInterval(intervalId);\n      getProjectService();\n    }, 60000);\n  };\n\n  useEffect(() => {\n    setPageLoading(isUndefined(projectInfo));\n  }, [projectInfo]);\n\n  useEffect(() => {\n    metadata && setProgress(calculateProgress(metadata.targetHeight, metadata.lastProcessedHeight));\n  }, [metadata]);\n\n  useEffect(() => {\n    fetchQueryMetadata();\n  }, [status]);\n\n  const loading = useMemo(\n    () => startProjectLoading || stopProjectLoading || removeProjectLoading,\n    [startProjectLoading, stopProjectLoading, removeProjectLoading]\n  );\n\n  const projectStatus = useMemo(() => {\n    const healthy = metadata?.indexerStatus === 'HEALTHY';\n    switch (status) {\n      case IndexingStatus.NOTINDEXING:\n        return healthy ? ProjectStatus.Started : ProjectStatus.NotIndexing;\n      case IndexingStatus.INDEXING:\n        return healthy ? ProjectStatus.Indexing : ProjectStatus.Terminated;\n      case IndexingStatus.READY:\n        return healthy ? ProjectStatus.Ready : ProjectStatus.Terminated;\n      default:\n        return ProjectStatus.NotIndexing;\n    }\n  }, [status, metadata]);\n\n  const alertInfo = useMemo(\n    () =>\n      projectStatus === ProjectStatus.Terminated\n        ? { visible: true, ...aletMessages[projectStatus] }\n        : { visible: false },\n    [projectStatus]\n  );\n\n  const networkBtnItems = createNetworkButtonItems((type: ProjectAction) => {\n    setActionType(type);\n    setVisible(true);\n  });\n\n  const serviceBtnItems = createServiceButtonItems((type: ProjectAction) => {\n    setActionType(type);\n    setVisible(true);\n  });\n\n  const networkActionItems = useMemo(() => {\n    if (isUndefined(projectStatus)) return [];\n    return networkBtnItems[projectStatus];\n  }, [projectStatus]);\n\n  const serviceActionItems = useMemo(() => {\n    if (isUndefined(projectStatus)) return [];\n    return serviceBtnItems[projectStatus];\n  }, [projectStatus]);\n\n  const onModalClose = (error?: any) => {\n    setVisible(false);\n    if (error?.data?.message) {\n      dispatchNotification(txErrorNotification(error.data.message));\n    }\n  };\n\n  const projectConfig = useMemo(\n    () => ({\n      networkEndpoint: projectService?.networkEndpoint ?? '',\n      networkDictionary: projectService?.networkDictionary ?? '',\n      nodeVersion: projectService?.nodeVersion ? projectService.nodeVersion : nodeVersions[0],\n      queryVersion: projectService?.queryVersion ? projectService.queryVersion : queryVersions[0],\n      forceEnabled: projectService?.networkEndpoint ? projectService?.forceEnabled : false,\n      paygPrice: formatEther(projectService?.paygPrice ? projectService?.paygPrice : 0),\n      paygExpiration:\n        (projectService?.paygExpiration ? projectService?.paygExpiration : 0) / (3600 * 24),\n      paygThreshold: projectService?.paygThreshold ? projectService?.paygThreshold : 1000,\n      paygOverflow: projectService?.paygOverflow ? projectService?.paygOverflow : 5,\n    }),\n    [projectService, nodeVersions, queryVersions]\n  );\n\n  const imageVersions = useMemo(\n    () => ({ query: queryVersions, node: nodeVersions }),\n    [nodeVersions, queryVersions]\n  );\n\n  const projectStateChange = (\n    type: ProjectNotification.Started | ProjectNotification.Terminated\n  ) => {\n    const notification = notifications[type];\n    dispatchNotification(notification);\n    updateServiceStatus();\n  };\n\n  const startProject = async (values: FormikValues, formHelper: FormikHelpers<FormikValues>) => {\n    try {\n      const { forceEnabled } = values;\n      await startProjectRequest({\n        variables: {\n          ...values,\n          forceEnabled: isTrue(forceEnabled),\n          id,\n        },\n      });\n\n      onModalClose();\n      projectStateChange(ProjectNotification.Started);\n    } catch (e) {\n      formHelper.setErrors({ [ProjectFormKey.networkEndpoint]: 'Invalid service endpoint' });\n    }\n  };\n\n  const stopProject = async () => {\n    try {\n      await stopProjectRequest({ variables: { id } });\n      onModalClose();\n      projectStateChange(ProjectNotification.Terminated);\n    } catch (e) {\n      console.error('fail to stop project', e);\n    }\n  };\n\n  const removeProject = async () => {\n    try {\n      await removeProjectRequest({ variables: { id } });\n      history.replace('/projects');\n    } catch (e) {\n      console.error('fail to remove project', e);\n    }\n  };\n\n  const startIndexingSteps = createStartIndexingSteps(projectConfig, imageVersions, startProject);\n  const restartProjectSteps = createRestartProjectSteps(projectConfig, imageVersions, startProject);\n  const stopIndexingSteps = createStopIndexingSteps(stopProject);\n\n  const stopProjectSteps = createStopProjectSteps(stopProject);\n  const removeProjectSteps = createRemoveProjectSteps(removeProject);\n  const announceIndexingSteps = createAnnounceIndexingSteps(() =>\n    indexingAction(ProjectAction.AnnounceIndexing, onModalClose)\n  );\n  const announceReadySteps = createReadyIndexingSteps(() =>\n    indexingAction(ProjectAction.AnnounceReady, onModalClose)\n  );\n  const announceNotIndexingSteps = createNotIndexingSteps(() =>\n    indexingAction(ProjectAction.AnnounceNotIndexing, onModalClose)\n  );\n\n  const steps = {\n    ...startIndexingSteps,\n    ...restartProjectSteps,\n    ...stopIndexingSteps,\n    ...stopProjectSteps,\n    ...removeProjectSteps,\n    ...announceIndexingSteps,\n    ...announceReadySteps,\n    ...announceNotIndexingSteps,\n  };\n\n  const [modalTitle, modalSteps] = useMemo(() => {\n    if (!actionType) return ['', []];\n    return [ProjectActionName[actionType], steps[actionType]];\n  }, [actionType, steps]);\n\n  return (\n    <Container>\n      {projectInfo && (\n        <ContentContainer>\n          <ProjectDetailsHeader id={id} projectStatus={projectStatus} project={projectInfo} />\n          <ProjectStatusView\n            percent={progress}\n            actionItems={networkActionItems}\n            status={status}\n            metadata={metadata}\n          />\n          <ProjectServiceCard id={id} actionItems={serviceActionItems} data={metadata} />\n          <ProjectTabbarView id={id} project={projectInfo} config={projectConfig} />\n        </ContentContainer>\n      )}\n      <ModalView\n        visible={visible}\n        title={modalTitle}\n        onClose={onModalClose}\n        // @ts-ignore\n        steps={modalSteps}\n        type={actionType}\n        loading={loading}\n      />\n      <AlertView {...alertInfo} />\n    </Container>\n  );\n};\n\nexport default ProjectDetailsPage;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { ProgressBar } from '@subql/react-ui';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  min-width: 600px;\n  padding: 10px 100px;\n  padding-bottom: 150px;\n  overflow-y: scroll;\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  width: 100%;\n  min-width: 600px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const ItemContainer = styled.div<{\n  flex?: number;\n  pl?: number;\n  mw?: number;\n  color?: string;\n}>`\n  display: flex;\n  flex: ${({ flex }) => flex ?? 1};\n  background-color: ${({ color }) => color ?? 'white'};\n  padding-left: ${({ pl }) => pl ?? 0}px;\n  min-width: ${({ mw }) => mw ?? 100}px;\n  margin-right: 15px;\n  align-items: center;\n`;\n\n/// Project item styles\nexport const ProjectItemContainer = styled.div`\n  display: flex;\n  width: 100%;\n  min-width: 600px;\n  min-height: 90px;\n  margin: 10px 0px;\n  padding: 10px 10px;\n  background-color: white;\n  :hover {\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    cursor: pointer;\n  }\n`;\n\nexport const Progress = styled(ProgressBar)`\n  max-width: 60%;\n  min-width: 300;\n`;\n\nexport const ProfileContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin-left: 20px;\n`;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { Text } from 'components/primary';\n\nimport { ItemContainer } from '../styles';\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  min-width: 600px;\n  height: 60px;\n  margin-top: 50px;\n  margin-bottom: 30px;\n`;\n\nconst projetHeaderItems = [\n  { title: 'Project Name', flex: 7 },\n  { title: 'Progress', flex: 6 },\n  { title: 'Status', flex: 1 },\n];\n\nconst ProjecItemsHeader = () => (\n  <Container>\n    {projetHeaderItems.map(({ title, flex }) => (\n      <ItemContainer key={title} color=\"#f6f9fc\" flex={flex}>\n        <Text color=\"gray\">{title}</Text>\n      </ItemContainer>\n    ))}\n  </Container>\n);\n\nexport default ProjecItemsHeader;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div<{ color?: string }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${(p) => p.color ?? 'lightgreen'};\n  border-radius: 5px;\n  padding: 5px 10px;\n  min-width: 80px;\n`;\n\nconst Text = styled.div`\n  font-size: 13px;\n  color: black;\n`;\n\ntype Props = {\n  text: string;\n  color?: string;\n};\n\nconst StatusLabel: FC<Props> = ({ text, color }) => (\n  <Container color={color}>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nexport default StatusLabel;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Spinner } from '@subql/components';\nimport { isUndefined } from 'lodash';\n\nimport Avatar from 'components/avatar';\nimport { Text } from 'components/primary';\nimport StatusLabel from 'components/statusLabel';\nimport { ProjectDetails, useDeploymentStatus } from 'hooks/projectHook';\nimport { cidToBytes32 } from 'utils/ipfs';\nimport { calculateProgress } from 'utils/project';\n\nimport { statusColor, statusText } from '../constant';\nimport { ItemContainer, ProfileContainer, Progress, ProjectItemContainer } from '../styles';\n\ntype Props = ProjectDetails;\n\nconst ProjectItem: FC<Props> = (props) => {\n  const { id, name, metadata } = props;\n\n  const history = useHistory();\n  const status = useDeploymentStatus(id);\n\n  const progress = useMemo(() => {\n    if (!metadata) return 0;\n    const { targetHeight, lastProcessedHeight } = metadata;\n    return calculateProgress(targetHeight, lastProcessedHeight);\n  }, [metadata]);\n\n  const pushDetailPage = () => history.push(`/project/${id}`, { data: { ...props, status } });\n\n  return (\n    <ProjectItemContainer onClick={pushDetailPage}>\n      <ItemContainer pl={15} flex={7}>\n        <Avatar address={cidToBytes32(id)} size={70} />\n        <ProfileContainer>\n          <Text fw=\"600\" size={18}>\n            {name}\n          </Text>\n          <Text size={13} mt={5}>\n            {id}\n          </Text>\n        </ProfileContainer>\n      </ItemContainer>\n      <ItemContainer flex={6}>\n        <Progress progress={progress / 100} />\n      </ItemContainer>\n      <ItemContainer flex={1}>\n        {!isUndefined(status) ? (\n          <StatusLabel text={statusText[status]} color={statusColor[status]} />\n        ) : (\n          <Spinner />\n        )}\n      </ItemContainer>\n    </ProjectItemContainer>\n  );\n};\n\nexport default ProjectItem;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC } from 'react';\nimport styled from 'styled-components';\n\nimport IntroductionView from 'components/introductionView';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: flex-start;\n  margin-top: 80px;\n`;\n\ntype Props = {\n  onClick: () => void;\n};\n\nconst linkUrl = 'https://frontier.subquery.network/explorer';\nconst ExplorerLink = () => (\n  <a target=\"_blank\" href={linkUrl} rel=\"noreferrer\">\n    SubQuery Explorer\n  </a>\n);\n\nconst EmptyView: FC<Props> = ({ onClick }) => {\n  return (\n    <Container>\n      <IntroductionView\n        item={{\n          title: 'Start to index a Subquery project',\n          desc: 'Go to Subquery Explorer to start exploring query projects, pick the project you are interesting and copy the deployment id in the page, then press the add project button and paste in deployment id, add the project into you coordinator service, and you can manage the projects in indexer app. ',\n          buttonTitle: 'Add Project',\n        }}\n        onClick={onClick}\n        link={ExplorerLink()}\n      />\n    </Container>\n  );\n};\n\nexport default EmptyView;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useEffect, useState } from 'react';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { isEmpty, isUndefined } from 'lodash';\n\nimport ModalView from 'components/modalView';\nimport { Button, Text } from 'components/primary';\nimport { useLoading } from 'containers/loadingContext';\nimport { useIsIndexer } from 'hooks/indexerHook';\nimport { ProjectDetails, useProjectDetailList } from 'hooks/projectHook';\nimport { ProjectsAction } from 'pages/project-details/types';\nimport { ProjectFormKey } from 'types/schemas';\nimport { ADD_PROJECT, GET_PROJECTS } from 'utils/queries';\n\nimport ProjecItemsHeader from './components/projecItemsHeader';\nimport ProjectItem from './components/projectItem';\nimport EmptyView from './components/projectsEmptyView';\nimport { createAddProjectSteps } from './constant';\nimport { Container, ContentContainer, HeaderContainer } from './styles';\n\nconst Projects = () => {\n  const isIndexer = useIsIndexer();\n  const { setPageLoading } = useLoading();\n  const [addProject, { loading }] = useMutation(ADD_PROJECT);\n  const [getProjectList, { data }] = useLazyQuery(GET_PROJECTS, { fetchPolicy: 'network-only' });\n  const { projectDetailList } = useProjectDetailList(data);\n\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    setPageLoading(isUndefined(projectDetailList));\n  }, [projectDetailList]);\n\n  useEffect(() => {\n    setPageLoading(true);\n    getProjectList();\n  }, []);\n\n  const onModalClose = () => {\n    setVisible(false);\n  };\n\n  const step = createAddProjectSteps(async (values, helper) => {\n    try {\n      // TODO: need to verify the id with subql-common library\n      const id = values[ProjectFormKey.deploymentId].trim();\n      await addProject({ variables: { id } });\n\n      setVisible(false);\n      getProjectList();\n    } catch (_) {\n      helper.setErrors({ [ProjectFormKey.deploymentId]: 'Invalid deployment id' });\n    }\n  });\n\n  const renderProjects = () => {\n    if (isUndefined(projectDetailList)) return null;\n    return !isEmpty(projectDetailList) ? (\n      <ContentContainer>\n        <HeaderContainer>\n          <Text size={45}>Projects</Text>\n          <Button title=\"Add Project\" onClick={() => setVisible(true)} />\n        </HeaderContainer>\n        <ProjecItemsHeader />\n        {projectDetailList.map((props: ProjectDetails) => (\n          <ProjectItem key={props.id} {...props} />\n        ))}\n      </ContentContainer>\n    ) : (\n      <EmptyView onClick={() => setVisible(true)} />\n    );\n  };\n\n  return (\n    <Container>\n      {isIndexer && renderProjects()}\n      <ModalView\n        visible={visible}\n        // @ts-ignore\n        title={step.addProject[0].title}\n        onClose={onModalClose}\n        // @ts-ignore\n        steps={step.addProject}\n        currentStep={0}\n        type={ProjectsAction.addProject}\n        loading={loading}\n      />\n    </Container>\n  );\n};\n\nexport default Projects;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { isUndefined } from 'lodash';\n\nimport { useContractSDK } from 'containers/contractSdk';\nimport { useWeb3 } from 'hooks/web3Hook';\nimport { RegisterStep } from 'pages/register/types';\n\nexport const useIsApproved = () => {\n  const [isApprove, setIsApprove] = useState<boolean>();\n  const { account } = useWeb3();\n  const sdk = useContractSDK();\n\n  const checkAllowance = useCallback(async () => {\n    if (!account || !sdk) return;\n    try {\n      const mimAmount = (await sdk.indexerRegistry.minimumStakingAmount()) ?? 1000;\n      const amount = await sdk.sqToken.allowance(account, sdk.staking.address);\n      setIsApprove(!!amount.gte(mimAmount));\n    } catch {\n      setIsApprove(false);\n    }\n  }, [sdk, account]);\n\n  useEffect(() => {\n    checkAllowance();\n  }, [checkAllowance]);\n\n  return isApprove;\n};\n\nexport const useInitialStep = (): RegisterStep | undefined => {\n  const isApproved = useIsApproved();\n\n  return useMemo(() => {\n    if (isUndefined(isApproved)) return undefined;\n    if (isApproved) return RegisterStep.register;\n    return RegisterStep.onboarding;\n  }, [isApproved]);\n};\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { RegisterStep } from './types';\n\nconst prompts = {\n  [RegisterStep.onboarding]: {\n    title: 'Stake to become a Subquery Indexer',\n    desc: 'Become an Indexer so you can index subquery projects. You need to stake a minimum of 1000 SQT in order to index subquery projects. Learn more about the indexer',\n    buttonTitle: 'Get Started',\n  },\n  [RegisterStep.authorisation]: {\n    title: 'Request approve authorisation',\n    desc: 'Indexer Admin app need you to approve the authorisation request to deposit the SQT token into Subquery Staking contract, this is a one-time operation for the specific account. Please press the approve button then confirm and send the transaction on MetaMask.',\n    buttonTitle: 'Approve',\n  },\n  [RegisterStep.register]: {\n    title: 'Stake to become a Subquery Indexer',\n    desc: '',\n    // 'Become an indexer that you can index subquery project. You need to stake a minimum of 1000 SQT to index subquery project. The time for processing the transaciton dependent on the current status of the network and the gas fee, it usually takes 30 seconds',\n    buttonTitle: 'Register Indexer',\n  },\n  [RegisterStep.sync]: {\n    title: 'Sync the indexer with coordinator service',\n    desc: 'This account has been an indexer already, please press the sync button to sync this account with your coordinator service, otherwise you can switch your account in the wallet to select the correct account.',\n    buttonTitle: 'Sync',\n  },\n};\n\nexport default prompts;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC } from 'react';\nimport { Formik, FormikHelpers } from 'formik';\n\nimport { FieldItem } from 'components/formItem';\nimport { Button, ButtonContainer, FormContainer, Text } from 'components/primary';\nimport {\n  initialRegisterValues,\n  RegisterFormKey,\n  RegisterFormSchema,\n  TRegisterValues,\n} from 'types/schemas';\n\nimport prompts from './prompts';\nimport { ContentContainer } from './styles';\nimport { RegisterStep } from './types';\n\ntype Props = {\n  loading: boolean;\n  onSubmit: (values: TRegisterValues, helper: FormikHelpers<TRegisterValues>) => void;\n};\n\nconst IndexerRegistryView: FC<Props> = ({ onSubmit, loading }) => {\n  const { title, buttonTitle } = prompts[RegisterStep.register];\n  return (\n    <ContentContainer>\n      <Text mb={50} size={35} fw=\"bold\">\n        {title}\n      </Text>\n      <Formik\n        initialValues={initialRegisterValues}\n        validationSchema={RegisterFormSchema}\n        onSubmit={onSubmit}\n      >\n        {({ errors, submitForm }) => (\n          <FormContainer>\n            <FieldItem title=\"Indexer Name\" fieldKey={RegisterFormKey.name} errors={errors} />\n            <FieldItem\n              title=\"Proxy Endpoint\"\n              fieldKey={RegisterFormKey.proxyEndpoint}\n              errors={errors}\n            />\n            <FieldItem title=\"Staking Amount\" fieldKey={RegisterFormKey.amount} errors={errors} />\n            <FieldItem\n              title=\"Commission Rate (%)\"\n              fieldKey={RegisterFormKey.rate}\n              errors={errors}\n            />\n            <ButtonContainer>\n              <Button\n                mt={20}\n                width={300}\n                type=\"primary\"\n                title={buttonTitle}\n                loading={loading}\n                onClick={submitForm}\n              />\n            </ButtonContainer>\n          </FormContainer>\n        )}\n      </Formik>\n    </ContentContainer>\n  );\n};\n\nexport default IndexerRegistryView;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FormikHelpers } from 'formik';\nimport { isUndefined } from 'lodash';\n\nimport IntroductionView from 'components/introductionView';\nimport { useContractSDK } from 'containers/contractSdk';\nimport { useCoordinatorIndexer } from 'containers/coordinatorIndexer';\nimport { useLoading } from 'containers/loadingContext';\nimport { useNotification } from 'containers/notificationContext';\nimport { useIsIndexer, useIsRegistedIndexer, useTokenBalance } from 'hooks/indexerHook';\nimport { useInitialStep } from 'hooks/registerHook';\nimport { useSigner, useWeb3 } from 'hooks/web3Hook';\nimport { RegisterFormKey, TRegisterValues } from 'types/schemas';\nimport { indexerRegistry, indexerRequestApprove } from 'utils/indexerActions';\nimport { createIndexerMetadata } from 'utils/ipfs';\nimport { verifyProxyEndpoint } from 'utils/validateService';\n\nimport { Container } from '../login/styles';\nimport IndexerRegistryView from './indexerRegistryView';\nimport prompts from './prompts';\nimport { RegistrySteps } from './styles';\nimport { RegisterStep } from './types';\nimport { getStepIndex, getStepStatus, registerSteps } from './utils';\n\n// TODO: refactor\nconst RegisterPage = () => {\n  const signer = useSigner();\n  const { account } = useWeb3();\n  const isRegistedIndexer = useIsRegistedIndexer();\n  const isIndexer = useIsIndexer();\n  const sdk = useContractSDK();\n  const { tokenBalance, getTokenBalance } = useTokenBalance(account);\n  const history = useHistory();\n  const initialStep = useInitialStep();\n  const { updateIndexer } = useCoordinatorIndexer();\n  const { setPageLoading } = useLoading();\n  const { dispatchNotification } = useNotification();\n\n  const [currentStep, setStep] = useState<RegisterStep>();\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const isRegisterStep = useCallback(() => currentStep === RegisterStep.register, [currentStep]);\n\n  useEffect(() => {\n    setPageLoading(isUndefined(initialStep) || isUndefined(isRegistedIndexer));\n    if (initialStep) setStep(initialStep);\n    if (isRegistedIndexer) setStep(RegisterStep.sync);\n  }, [initialStep, isRegistedIndexer]);\n\n  useEffect(() => {\n    if (!account) {\n      history.replace('/');\n    } else if (isIndexer) {\n      history.replace('/account');\n    }\n  }, [isIndexer, account]);\n\n  const item = useMemo(() => currentStep && prompts[currentStep], [currentStep]);\n\n  const moveToNextStep = () => {\n    setLoading(false);\n    setStep(registerSteps[getStepIndex(currentStep) + 1] as RegisterStep);\n  };\n\n  const onTransactionFailed = (error: any) => {\n    console.error('Send transaction failed:', error);\n    setLoading(false);\n  };\n\n  const onSyncIndexer = useCallback(async () => {\n    setLoading(true);\n    if (!account) {\n      return dispatchNotification({\n        type: 'danger',\n        title: 'Fail to sync the indexer',\n        message: 'Can not find account, make sure MetaMask is connected',\n      });\n    }\n\n    await updateIndexer(account);\n    setLoading(false);\n    return history.replace('/account');\n  }, [isIndexer]);\n\n  const onApprove = async () => {\n    setLoading(true);\n    try {\n      const tx = await indexerRequestApprove(sdk, signer, '100000000000');\n      const receipt = await tx.wait(1);\n      if (!receipt.status) {\n        throw new Error('Send approve transaction failed');\n      }\n      moveToNextStep();\n    } catch (e) {\n      onTransactionFailed(e);\n    }\n  };\n\n  const onIndexerRegister = async (\n    values: TRegisterValues,\n    helper: FormikHelpers<TRegisterValues>\n  ) => {\n    try {\n      setLoading(true);\n      await getTokenBalance();\n\n      const { name, proxyEndpoint, amount, rate } = values;\n      if (Number(tokenBalance) < amount) {\n        setLoading(false);\n        helper.setErrors({\n          [RegisterFormKey.amount]: `Account balance ${tokenBalance} is not enough for staking ${amount} SQT`,\n        });\n        return;\n      }\n\n      const isValidProxyEndpoint = await verifyProxyEndpoint(proxyEndpoint);\n      if (!isValidProxyEndpoint) {\n        setLoading(false);\n        helper.setErrors({ [RegisterFormKey.proxyEndpoint]: 'Invalid proxy endpoint' });\n        return;\n      }\n\n      const indexerMetadata = await createIndexerMetadata(name, proxyEndpoint);\n      const tx = await indexerRegistry(\n        sdk,\n        signer,\n        amount.toString(),\n        indexerMetadata,\n        rate * 10000\n      );\n      const receipt = await tx.wait(1);\n      if (!receipt.status) {\n        throw new Error('Send indexer registry transaction failed');\n      }\n\n      moveToNextStep();\n    } catch (e) {\n      onTransactionFailed(e);\n    }\n  };\n\n  const registerActions = {\n    [RegisterStep.onboarding]: () => setStep(RegisterStep.authorisation),\n    [RegisterStep.authorisation]: onApprove,\n    [RegisterStep.register]: onIndexerRegister,\n    [RegisterStep.sync]: onSyncIndexer,\n  };\n\n  const renderSteps = () => {\n    if (currentStep === RegisterStep.onboarding) return null;\n    const currentIndex = getStepIndex(currentStep);\n    return (\n      <RegistrySteps current={currentIndex}>\n        {registerSteps.map((title, i) => (\n          <RegistrySteps.Step key={title} status={getStepStatus(currentIndex, i)} title={title} />\n        ))}\n      </RegistrySteps>\n    );\n  };\n\n  return (\n    <Container>\n      {renderSteps()}\n      {currentStep && item && !isRegisterStep() && (\n        // @ts-ignore\n        <IntroductionView item={item} loading={loading} onClick={registerActions[currentStep]} />\n      )}\n      {currentStep && isRegisterStep() && (\n        <IndexerRegistryView loading={loading} onSubmit={onIndexerRegister} />\n      )}\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { FC } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport * as Sentry from '@sentry/react';\nimport { Button, Typography } from '@subql/react-ui';\n\nimport Loading from 'components/loading';\nimport { ContractSDKProvider } from 'containers/contractSdk';\nimport { CoordinatorIndexerProvider } from 'containers/coordinatorIndexer';\nimport { LoadingProvider } from 'containers/loadingContext';\nimport { ModalProvider } from 'containers/modalContext';\nimport { NotificationProvider, Notifications } from 'containers/notificationContext';\nimport { Web3Provider } from 'containers/web3';\nimport { useShowMetaMask } from 'hooks/web3Hook';\nimport MetaMaskView from 'pages/metamask/metamaskView';\nimport { coordinatorServiceUrl, createApolloClient } from 'utils/apolloClient';\n\nimport { GModalView } from './components/modalView';\nimport * as Pages from './pages';\n\nimport 'react-notifications-component/dist/theme.css';\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nconst AppContents = () => {\n  const showMetaMask = useShowMetaMask();\n\n  return (\n    <Router>\n      <Pages.Header />\n      <div className=\"Main\">\n        {!showMetaMask ? (\n          <Switch>\n            <Route component={Pages.Projects} path=\"/projects\" />\n            <Route exact component={Pages.ProjectDetail} path=\"/project/:id\" />\n            <Route component={Pages.Account} path=\"/account\" />\n            <Route component={Pages.ControllerManagement} path=\"/controller-management\" />\n            <Route component={Pages.Network} path=\"/network\" />\n            <Route component={Pages.Register} path=\"/register\" />\n            <Route component={Pages.Login} path=\"/\" />\n          </Switch>\n        ) : (\n          <MetaMaskView />\n        )}\n        <Notifications />\n        <Loading />\n        <GModalView />\n      </div>\n      <Pages.Footer />\n    </Router>\n  );\n};\n\nconst ErrorFallback = ({ error, componentStack, resetError }: any) => {\n  return (\n    <div className=\"errorFallback\">\n      <Typography className=\"errorText\">Something went wrong:</Typography>\n      <Typography className=\"errorText\">{error?.message || error.toString()}</Typography>\n      <Typography>{componentStack}</Typography>\n      <Button onClick={resetError} colorScheme=\"gradient\" label=\"Try again.\" />\n    </div>\n  );\n};\n\nconst App: FC = () => (\n  <Sentry.ErrorBoundary fallback={ErrorFallback} showDialog>\n    <ApolloProvider client={createApolloClient(coordinatorServiceUrl)}>\n      <Web3Provider>\n        <ContractSDKProvider>\n          <CoordinatorIndexerProvider>\n            <LoadingProvider>\n              <ModalProvider>\n                <NotificationProvider>\n                  <div className=\"App\">\n                    <AppContents />\n                  </div>\n                </NotificationProvider>\n              </ModalProvider>\n            </LoadingProvider>\n          </CoordinatorIndexerProvider>\n        </ContractSDKProvider>\n      </Web3Provider>\n    </ApolloProvider>\n  </Sentry.ErrorBoundary>\n);\n\nexport default App;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// Copyright 2020-2022 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/react';\nimport { BrowserTracing } from '@sentry/tracing';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nSentry.init({\n  dsn: process.env.SENTRY_DSN,\n  integrations: [new BrowserTracing()],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  tracesSampleRate: 1.0,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","var map = {\n\t\"./kepler.json\": 378,\n\t\"./mainnet.json\": 379,\n\t\"./revertcode.json\": 842,\n\t\"./testnet.json\": 380\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 841;"],"sourceRoot":""}